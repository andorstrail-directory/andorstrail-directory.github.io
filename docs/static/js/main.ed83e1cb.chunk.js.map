{"version":3,"sources":["logo.svg","utils/debug.jsx","components/PropsRoute.jsx","components/Menu.jsx","components/Home.jsx","components/ItemCategoriesTable.jsx","components/Icon.jsx","components/cells/IconCell.jsx","components/cells/ConditionsCell.jsx","components/cells/OtherCell.jsx","components/cells/RangeCell.jsx","components/CostCalculator.jsx","components/items/LinksTable.jsx","components/items/ExpandingName.jsx","components/items/NameCell.jsx","components/items/ItemsTable.jsx","components/items/PotionsTable.jsx","components/LiLink.jsx","components/items/ItemsPage.jsx","components/conditions/LinksTable.jsx","components/conditions/ExpandingName.jsx","components/conditions/NameCell.jsx","components/cells/BooleanCell.jsx","components/conditions/ConditionsTable.jsx","components/conditions/ConditionsPage.jsx","components/MapsList.jsx","components/monsters/LinksTable.jsx","components/monsters/ExpandingName.jsx","components/monsters/NameCell.jsx","components/monsters/MonstersTable.jsx","components/monsters/MonstersPage.jsx","components/npc/LinksTable.jsx","components/npc/ExpandingName.jsx","components/npc/NameCell.jsx","components/npc/NpcTable.jsx","components/npc/NpcPage.jsx","components/maps/MapIcon.jsx","components/maps/LocalMap.jsx","components/maps/GlobalMap.jsx","components/maps/MapPage.jsx","components/Main.jsx","utils/MapParser.jsx","utils/GlobalMapParser.jsx","App.js","reportWebVitals.js","index.js"],"names":["debug","msg","console","log","doIfDebug","f","DEBUG","renderMergedProps","component","rest","finalProps","Object","assign","React","createElement","PropsRoute","render","routeProps","Main","props","className","LiLink","Component","segment","def","to","liClass","window","location","pathname","toUpperCase","startsWith","toLowerCase","capitalize","Table","getKeys","o","name","id","size","inventorySlot","actionType","getHeader","this","map","key","index","getRowsData","items","data","filter","length","item","indexOf","category","keys","row","bind","border","RenderRow","custom","monsters_demon1","x","y","monsters_demon2","monsters_hydra1","monsters_cyclops","monsters_bosses_2x2","monsters_giantbasilisk","getDimention","file","Icon","prefix","noBackground","zoom","href","rootLink","Date","Math","random","tmp","iconID","split","src","getSrc","d","style","width","height","overflow","backgroundImage","backgroundRepeat","backgroundPosition","iconBg","backgroundSize","display","title","displaytype","onLoad","onImgLoad","img","document","getElementById","p","i","getPosition","styles","root","position","paddingLeft","paddingTop","alignItems","IconCell","tableManager","value","onChange","isEdit","column","rowIndex","searchText","isFirstEditableCell","padding","text","marginLeft","whiteSpace","aimg","getImgId","values","chance","link","magnitude","duration","showCondition","getTextData","min","max","ConditionsCell","Fragment","equipEffect","addedConditions","hitEffect","conditionsTarget","conditionsSource","increaseCurrentHP","killEffect","increaseCurrentAP","hitReceivedEffect","useEffect","textOverflow","knownEquipEffects","knownHitEffects","knownKillEffects","knownReceivedEffects","knownUseEffects","knownAbilityEffects","knownRoundEffects","getOther","result","e","JSON","stringify","OtherCell","abilityEffect","roundEffect","margin","RangeCell","field","range","forEach","calculateCostEquipEffect","isWeapon","increaseBlockChance","increaseAttackChance","increaseAttackCost","increaseDamageResistance","increaseAttackDamage","increaseCriticalSkill","setCriticalMultiplier","increaseMaxHP","increaseMaxAP","increaseMoveCost","increaseUseItemCost","increaseReequipCost","pow","abs","reduce","a","b","trunc","calculateUseCost","averageHPBoost","averagef","costBoostHP","signum","calculatePointsCost","hpBase","apBase","averageAPBoost","costBoostAP","calculateHitCost","calculateKillCost","calculateCost","hasManualPrice","baseMarketCost","costEquipStats","costUse","costHit","costKill","monster","RenderHref","textAlign","Range","quantity","maxHP","table","ExpandingName","state","expanded","toggleExpand","setState","links","droplists","flatMap","getEnemyList","onClick","droplist","push","sortStr","isAscending","aa","bb","sortInt","sortDT","list","hashLinkScroll","hash","setTimeout","replace","element","scrollIntoView","getRows","isEmptyColumn","rows","find","getColumns","label","pinned","cellRenderer","sort","NameCell","getValue","visible","setNonWeaponDamageModifier","GridTable","defaultProps","isPaginated","minColumnResizeWidth","isVirtualScroll","showSearch","showColumnVisibilityManager","columns","next","path","ItemsPage","ItemRoute","PotionsTable","categoryLink","ItemsTable","slot","type","aim","Cell","BooleanCell","isPositive","marginTop","marginRight","color","textTransform","float","maps","unique","pos","self","droplistLink","spawnGroupLinks","maxIconWidth","MonstersPage","MonstersTable","monsterClass","c","attackChance","calculateCostWithMod","mod","cost","NpcTable","ts","tileset","localid","dx","tilewidth","dy","tileheight","w","left","top","layers","layerList","getObjectgroupsData","spawn","spawngroup","monsters","renderObjectgroupsData","backgroundColor","objectgroups","tile","RenderCell","l","ld","globalMap","substring","segmentsMap","Page","getSegmentLinks","segments","GlobalMap","getJsonResources","resources","downcounter","progress","getJsonResource","loadresource_itemcategories","loadresource_items","loadresource_actorconditions","loadresource_monsters","loadresource_droplists","resource","that","getJsonData","linkConditions","effect","linkCondition","getStub","condition","temp","conditions","stub","getItemRootLink","getMonsterRootLink","droplistID","charAt","getItemIconBg","fileName","fetch","headers","then","response","json","concat","linkTemp","actorconditions","obj","categories","itemcategories","spawngroups","warn","splice","spawngroupLink","spawnGroup","itemID","segmentLink","globalMapLink","localeCompare","exact","Home","ConditionsPage","ItemCategoriesTable","NpcPage","MapPage","parseXmlMap","r","properties","tilesets","mapchange","other","children","attributes","includes","mapSpawn","parseObjectgroups","parseLayerDebug","b64Data","charData","atob","charCodeAt","binData","Uint8Array","pako","inflate","Uint32Array","buffer","err","parseLayer","firstgid","tilecount","parseTileset","layer","getTileById","setTileByLayerXY","mapLayers","parseGlobalMap","myXml","areas","parseArea","mapsMap","area","areaLink","parseMaps","parseSegment","App","useState","setData","String","prototype","slice","getXmlData","thenDo","str","saveTempResources","XMLParser","parseFromString","getElementsByTagName","getMaps","getXmlMap","xmlString","tryDo","getGlobalMap","loadresource_maps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"0OAAe,I,uDCAA,SAASA,EAAMC,GAEtBC,QAAQC,IAAIF,GAEb,SAASG,EAAUC,GAClBC,GAAOD,IAGf,IAAMC,GAAM,E,eCENC,EAAoB,SAACC,GAAwB,IAAD,uBAATC,EAAS,iCAATA,EAAS,kBAChD,IAAMC,EAAaC,OAAOC,OAAP,MAAAD,OAAM,CAAQ,IAAR,OAAeF,IACxC,OACEI,IAAMC,cAAcN,EAAWE,IAIpBK,EAdI,SAAC,GAA4B,IAA1BP,EAAyB,EAAzBA,UAAcC,EAAW,6BAC7C,OACE,cAAC,IAAD,2BAAWA,GAAX,IAAiBO,OAAQ,SAAAC,GACvB,OAAOV,EAAkBC,EAAWS,EAAYR,Q,QCFjCS,E,kDACjB,WAAYC,GAAQ,uCACVA,G,0CAGV,WACI,OACI,+BACI,qBAAIC,UAAU,KAAd,UACKC,EAAO,QAAU,SACjBA,EAAO,WAAY,WACnBA,EAAO,MAAO,aACdA,EAAO,cACPA,EAAO,UACPA,EAAO,cACPA,EAAO,gB,GAfMR,IAAMS,WAqBlCD,EAAS,SAACE,GAAqB,IAAZC,EAAW,uDAAP,GACnBC,EAAK,IAAIF,EAAQC,EACjBE,EAAWC,OAAOC,SAASC,SAASC,cAAcC,WAAW,IAAIR,EAAQO,eAAgB,WAAW,GAC1G,OAAQ,oBAAIV,UAAWM,EAAf,SAAwB,cAAC,IAAD,CAAMD,GAAIA,EAAGO,cAAb,SAA6BT,EAAQU,kBCzBpDC,E,kDAEjB,WAAYf,GAAQ,uCACVA,G,0CAMV,WACI,OAAS,8C,GAVkBN,IAAMS,WCDpBY,E,kDAEjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAMVgB,QAAU,WACN,MAAO,CACP,CAAC,OAAQ,SAACC,GAAD,OAAKA,EAAEC,OAChB,CAAC,KAAK,SAACD,GAAD,OAAKA,EAAEE,KACb,CAAC,OAAO,SAACF,GAAD,OAAKA,EAAEG,OACf,CAAC,gBAAgB,SAACH,GAAD,OAAKA,EAAEI,gBACxB,CAAC,aAAa,SAACJ,GAAD,OAAKA,EAAEK,eAbN,EAmBnBC,UAAY,WAER,OADWC,KAAKR,UACJS,KAAI,SAACC,EAAKC,GAClB,OAAQ,mCAAsBD,EAAI,GAA1B,MAAWA,EAAI,QAtBZ,EA0BnBE,YAAc,WAAa,IAAD,OAClBC,EAAQL,KAAKxB,MAAM8B,KACvB,IAAKD,EAAO,MAAO,GACfL,KAAKxB,MAAM+B,QAAUP,KAAKxB,MAAM+B,OAAOC,OAAO,IAC9CH,EAAQA,EAAME,QAAO,SAACE,GAAD,OAAQ,EAAKjC,MAAM+B,OAAOG,QAAQD,EAAKE,WAAa,MAE7E,IAAIC,EAAOZ,KAAKR,UAChB,OAAOa,EAAMJ,KAAI,SAACY,EAAKV,GACnB,OAAO,6BAAgB,cAAC,EAAD,CAAuBG,KAAMO,EAAKD,KAAMA,GAAxBT,IAAvBA,OAhCpB,EAAKJ,UAAY,EAAKA,UAAUe,KAAf,gBACjB,EAAKV,YAAc,EAAKA,YAAYU,KAAjB,gBACnB,EAAKtB,QAAU,EAAKA,QAAQsB,KAAb,gBAJA,E,0CAsCnB,WACI,OACK,8BACI,wBAAOC,OAAO,IAAd,UACI,gCACI,6BAAKf,KAAKD,gBAEd,gCAAQC,KAAKI,yB,GA/CClC,IAAMS,WAoDnCqC,EAAY,SAACxC,GACf,OAAOA,EAAMoC,KAAKX,KAAI,SAACC,EAAKC,GACxB,OAAQ,mCAAqBD,EAAI,GAAG1B,EAAM8B,MAAlC,MAAUJ,EAAI,Q,gCCrDxBe,EAAS,CACXC,gBAAgB,CAACC,EAAE,GAAIC,EAAE,IACzBC,gBAAgB,CAACF,EAAE,GAAIC,EAAE,IACzBE,gBAAgB,CAACH,EAAE,GAAIC,EAAE,IACzBG,iBAAiB,CAACJ,EAAE,GAAIC,EAAE,IAC1BI,oBAAoB,CAACL,EAAE,GAAIC,EAAE,IAC7BK,uBAAuB,CAACN,EAAE,GAAIC,EAAE,KAIvBM,EAAe,SAACC,GAAD,OAAUV,EAAOU,IAAO,CAACR,EAAE,GAAGC,EAAE,KAEvCQ,E,kDAEjB,WAAYpD,GAAQ,uCACVA,G,0CAGV,WAAU,IAAD,IAC+BwB,KAAKxB,MAAlC8B,EADF,EACEA,KAAMuB,EADR,EACQA,OAAQC,EADhB,EACgBA,aACfC,EAAO/B,KAAKxB,MAAMuD,MAAQ,GAE1BC,GAAQ1B,EAAK2B,UAAYJ,GAAUvB,EAAKX,GACxCO,EAAM,KAAO,IAAIgC,KAAQ,GAAI,IAAKC,KAAKC,SACvCC,EAAG,UAAG/B,EAAKgC,cAAR,aAAG,EAAaC,MAAM,KACzBZ,EAAOU,EAAI,GACXlC,EAAQkC,EAAI,GACZG,EAAMC,EAAOd,GACbe,EAAIhB,EAAaC,GAEvBe,EAAEvB,EAAIuB,EAAEvB,EAAIY,EAAO,GACnBW,EAAEtB,EAAIsB,EAAEtB,EAAIW,EAAO,GAEnB,IAAIY,EAAQ,CACRC,MAAMF,EAAEvB,EACR0B,OAAOH,EAAEtB,EACT0B,SAAU,UAad,OAXKhB,IACDa,EAAK,2BACEA,GADF,IAEDI,gBAAiB,qCACjBC,iBAAkB,YAClBC,mBAAqB3C,EAAK4C,OAASR,EAAEvB,EAAK,SAC1CgC,eAAuB,EAANT,EAAEvB,EAAS,MAAQuB,EAAEtB,EAAI,QAK3C,qBAAKuB,MAAO,CAAES,QAAQ,QAAtB,SAES,cAAC,IAAD,CAAMT,MAAOA,EACVU,MAAO/C,EAAKgD,YACZxE,GAAIkD,EACJrC,GAAIW,EAAKX,GAHZ,SAIQ,qBAAKA,GAAIO,EACLsC,IAAKA,EACLe,OAAQC,EAAUrD,EAAOuC,EAAGxC,a,GA7C9BhC,IAAMS,WAmD9B8D,EAAS,SAACd,GACZ,GAAKA,EACL,MAAO,aAAaA,EAAK,QAOvB6B,EAAY,SAACrD,EAAOuC,EAAGxC,GACzB,OAAO,WACH,GAAKC,EAAL,CACA,IAAIsD,EAAMC,SAASC,eAAezD,GAC9B0D,EATQ,SAACC,EAAGjB,EAAOF,GAC3B,IAAIvB,GAAM0C,EAAIjB,EAAQF,EAAEvB,EAExB,MAAO,CAACA,IAAGC,IADAyC,EAAInB,EAAEtB,EAAID,GAAKyB,GAOdkB,CAAY3D,EAAOsD,EAAIb,MAAQF,EAAEvB,EAAGuB,GAC5Ce,EAAId,MAAJ,kBAAuBiB,EAAExC,EAAzB,kBAAoCwC,EAAEzC,EAAtC,2BC7EN4C,EAAS,CACXC,KAAM,CACFC,SAAU,WACVC,YAAa,OACbC,WAAY,MACZf,QAAS,QACTR,MAAO,OACPC,OAAQ,OACRuB,WAAY,WAaLC,EARE,SAAC,GAAqG,EAApGC,aAAoG,EAAtFC,MAAsF,EAA/EC,SAA+E,EAArEC,OAAsE,IAA9DnE,EAA6D,EAA7DA,KAA6D,EAAvDoE,OAAuD,EAA/CC,SAA+C,EAArCC,WAAqC,EAAzBC,oBAC1F,OACI,qBAAKlC,MAAOoB,EAAOC,KAAnB,SACI,cAAC,EAAD,CAAM1D,KAAMA,OChBlByD,EAAS,CACXC,KAAM,CACFC,SAAU,WACVa,QAAS,WACT1B,QAAS,OACTR,MAAO,OACPC,OAAQ,QAEZkC,KAAM,CACFC,WAAY,EACZC,WAAY,UAGhBC,KAAM,CACFtC,MAAM,GACNC,OAAO,GACPC,SAAU,WAIZL,EAAS,SAAC9C,GAEZ,MAAO,cADE,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAI4C,MAAM,MACE,GAAG,QAmBzB4C,EAAW,SAACxF,EAAIgF,EAAUxE,GAC5B,OAAOR,EAAG,IAAIgF,EAAS,IAAIxE,GAGzBqD,EAAY,SAAC7D,EAAIgF,EAAUxE,GAC7B,OAAO,WACH,IAAIsD,EAAMC,SAASC,eAAewB,EAASxF,EAAIgF,EAAUxE,IACrDyD,EAbQ,SAACjE,EAAIiD,GACrB,IAAMP,EAAG,OAAG1C,QAAH,IAAGA,OAAH,EAAGA,EAAI4C,MAAM,KAAK,GACvBpB,GAAMkB,EAAMO,EAAQ,GAExB,MAAO,CAACzB,IAAGC,GADM,IAANiB,EAAWlB,GAAKyB,GAUfkB,CAAYnE,EAAI8D,EAAIb,MAAM,IAClCa,EAAId,MAAJ,kBAAuBiB,EAAExC,EAAzB,kBAAoCwC,EAAEzC,EAAtC,QAmBFf,EAAc,SAACyB,EAAQuD,EAAQT,GACjC,cAAOS,QAAP,IAAOA,OAAP,EAAOA,EAAQnF,IAhBG,SAAC4B,EAAQ8C,GAC3B,OAAO,SAAC9D,EAAKV,GACT,IAAIkD,EAAQxB,EACRhB,EAAIwE,SAAQhC,GAAS,KAAKxC,EAAIwE,OAAQ,MAC1ChC,GAAS,KAAOxC,EAAIyE,KAAK5F,KAAO,IAAMmB,EAAI0E,UACtC1E,EAAI2E,WAAUnC,GAAS,IAAMxC,EAAI2E,UACrC,IAAMxD,EAAO,eAAenB,EAAIyE,KAAK3F,GAC/BA,EAAKwF,EAAStE,EAAIyE,KAAKhD,OAAQqC,EAAUxE,GAC/C,OAAO,cAAC,IAAD,CAAMwC,MAAOoB,EAAOmB,KAAM7B,MAAOA,EAAOvE,GAAIkD,EAA5C,SACI,qBAAKrC,GAAIA,EAAI6C,IAAKC,EAAO5B,EAAIyE,KAAKhD,QAC7BiB,OAAQC,EAAU3C,EAAIyE,KAAKhD,OAAQqC,EAAUxE,MAFCR,IAQ/C8F,CAAc5D,EAAQ8C,KAEvCe,EAAc,SAAC7D,EAAQ0C,EAAOQ,EAAMJ,GACtC,OAAKJ,EACE,sBAAM5B,MAAOoB,EAAOgB,KAAM1B,MAAOxB,EAAS,IAAM0C,EAAMoB,IAAM,IAAMpB,EAAMqB,IAAxE,SAA8Eb,IADlE,IA0BRc,EAtBQ,SAAC,GAAqG,EAApGvB,aAAoG,EAAtFC,MAAsF,EAA/EC,SAA+E,EAArEC,OAAsE,IAAD,oBAA7DnE,EAA6D,EAA7DA,KAAcqE,GAA+C,EAAvDD,OAAuD,EAA/CC,UAA+C,EAArCC,WAAqC,EAAzBC,oBAEhG,OACI,qBAAKlC,MAAOoB,EAAOC,KAAnB,SAEQ,eAAC,IAAM8B,SAAP,WACK1F,EAAY,WAAD,UAAaE,EAAKyF,mBAAlB,aAAa,EAAkBC,gBAAiBrB,GAC3DvE,EAAY,SAAD,UAAWE,EAAK2F,iBAAhB,aAAW,EAAgBC,iBAAkBvB,GACxDvE,EAAY,aAAD,UAAeE,EAAK2F,iBAApB,aAAe,EAAgBE,iBAAkBxB,GAC5De,EAAY,aAAD,UAAepF,EAAK2F,iBAApB,aAAe,EAAgBG,kBAAmB,OAC7DhG,EAAY,UAAD,UAAYE,EAAK+F,kBAAjB,aAAY,EAAiBF,iBAAkBxB,GAC1De,EAAY,UAAD,UAAYpF,EAAK+F,kBAAjB,aAAY,EAAiBD,kBAAmB,OAC3DV,EAAY,UAAD,UAAYpF,EAAK+F,kBAAjB,aAAY,EAAiBC,kBAAmB,OAC3DlG,EAAY,aAAD,UAAeE,EAAKiG,yBAApB,aAAe,EAAwBJ,iBAAkBxB,GACpEvE,EAAY,cAAD,UAAgBE,EAAKiG,yBAArB,aAAgB,EAAwBL,iBAAkBvB,GACrEvE,EAAY,SAAD,UAAWE,EAAKkG,iBAAhB,aAAW,EAAgBL,iBAAkBxB,SC5FvEZ,EAAS,CACXC,KAAM,CACFC,SAAU,WACVa,QAAS,SACT1B,QAAS,OACTR,MAAO,OACPC,OAAQ,OACRuB,WAAY,UAEhBW,KAAM,CACFC,WAAY,GACZC,WAAY,SACZnC,SAAU,SACV2D,aAAc,aAIhBC,EAAoB,CACR,uBACA,qBACA,uBACA,sBACA,wBACA,wBACA,gBACA,6BACA,gBACA,2BACA,kBACA,mBACA,mBACA,sBACA,sBACA,GACA,IAEZC,EAAkB,CACN,mBACA,mBACA,oBACA,GACA,IAEZC,EAAmB,CACP,mBACA,oBACA,oBACA,IAEZC,EAAuB,CACX,mBACA,mBACA,GACA,IAEZC,EAAkB,CACN,mBACA,oBACA,IAEZC,EAAsB,CACV,uBACA,sBACA,2BACA,uBACA,gBACA,mBACA,qBACA,gBACA,wBACA,sBACA,sBACA,iBACA,IAEZC,EAAoB,CACR,oBACA,iBACA,oBACA,GACA,GACA,IAGZC,GAAW,SAACpF,EAAQkE,EAAarI,GACnC,IAAKqI,EAAa,MAAO,GACzB,IAAMmB,EAASlJ,OAAO4C,KAAKmF,GACtBxF,QAAO,SAAC4G,GAAD,OAAqB,GAAfzJ,EAAEgD,QAAQyG,MACvBlH,KAAI,SAACC,GAAD,MAAS,CAACA,EAAK6F,EAAY7F,OACpC,OAAQgH,EAAO1G,OAAO,EAAKqB,EAASuF,KAAKC,UAAUH,GAAU,IA4BlDI,GAnBG,SAAC,GAAqG,EAApGhD,aAAoG,EAAtFC,MAAsF,EAA/EC,SAA+E,EAArEC,OAAsE,IAA9DnE,EAA6D,EAA7DA,KAA6D,EAAvDoE,OAAuD,EAA/CC,SAA+C,EAArCC,WAAqC,EAAzBC,oBAE3F,OACI,qBAAKlC,MAAOoB,EAAOC,KAAnB,SAEQ,eAAC,IAAM8B,SAAP,WACKmB,GAAS,YAAa3G,EAAKyF,YAAaW,GACxCO,GAAS,UAAW3G,EAAK2F,UAAWU,GACpCM,GAAS,cAAe3G,EAAKiG,kBAAmBM,GAChDI,GAAS,YAAa3G,EAAK+F,WAAYO,GACvCK,GAAS,WAAY3G,EAAKkG,UAAWM,GACrCG,GAAS,GAAI3G,EAAKiH,cAAeR,GACjCE,GAAS,GAAI3G,EAAKkH,YAAaR,SC9G9CjD,GAAS,CACXC,KAAM,CACFC,SAAU,WACVa,QAAS,YACT1B,QAAS,QACTR,MAAO,OACPC,OAAQ,OACRuB,WAAY,UAEhBW,KAAM,CACF0C,OAAQ,OACRxC,WAAY,SACZnC,SAAU,SACV2D,aAAc,aAoBPiB,GAfG,WAAa,IAAD,uBAARC,EAAQ,yBAARA,EAAQ,gBAC1B,OAAO,YAAsG,EAApGrD,aAAqG,IAAvFC,EAAsF,EAAtFA,MAAyBjE,GAA6D,EAA/EkE,SAA+E,EAArEC,OAAqE,EAA7DnE,MACxCsH,GADqG,EAAvDlD,OAAuD,EAA/CC,SAA+C,EAArCC,WAAqC,EAAzBC,oBACpE,CAACvE,SAEb,OADAqH,EAAME,SAAQ,SAACnK,GAAKkK,EAAMtH,KAAOsH,EAAMtH,KAAK5C,IAAI,MACnC,KAAT6G,EAAqB,GACrBqD,EAAMtH,KAAKqF,KAAOiC,EAAMtH,KAAKsF,IAAa,qBAAKjD,MAAOoB,GAAOC,KAAnB,SAAyB,sBAAMrB,MAAOoB,GAAOgB,KAApB,SAA2BR,MAE9F,qBAAK5B,MAAOoB,GAAOC,KAAnB,SACG,uBAAMrB,MAAOoB,GAAOgB,KAApB,UAA2BR,EAA3B,IAAmCqD,EAAMtH,KAAKqF,IAA9C,IAAoDiC,EAAMtH,KAAKsF,IAA/D,WCpBTkC,GAA2B,SAACrI,EAAGsI,GAC7B,IAAKtI,EAAG,OAAO,EAD2B,IAGtCuI,EAMAvI,EANAuI,oBAAqBC,EAMrBxI,EANqBwI,qBACrBC,EAKAzI,EALAyI,mBAAoBC,EAKpB1I,EALoB0I,yBACpBC,EAIA3I,EAJA2I,qBACAC,EAGA5I,EAHA4I,sBAAuBC,EAGvB7I,EAHuB6I,sBACvBC,EAEA9I,EAFA8I,cAAeC,EAEf/I,EAFe+I,cACfC,EACAhJ,EADAgJ,iBAAkBC,EAClBjJ,EADkBiJ,oBAAqBC,EACvClJ,EADuCkJ,oBAwB3C,MAAO,CAtBS,EAAExG,KAAKyG,IAAIzG,KAAKyD,IAAI,EAAGoC,GAAsB,KAAO,GAAGA,EACvD,GAAI7F,KAAKyG,IAAIzG,KAAKyD,IAAI,EAAEqC,GAAuB,KAAO,EAAE9F,KAAKyG,IAAIzG,KAAK0G,IAAI1G,KAAKwD,IAAI,EAAEsC,IAAuB,KAE7GF,EACN,GAAI5F,KAAKyG,IAAI,GAAKV,EAAoB,GAAK,GAAGA,GAC7C,KAAOA,EACF,KAAOC,EACFJ,EACX,GAAG5F,KAAKyG,IAAIzG,KAAKyD,IAAI,EAAT,OAAYwC,QAAZ,IAAYA,OAAZ,EAAYA,EAAsBzC,KAAM,KAClD,GAAGxD,KAAKyG,IAAIzG,KAAKyD,IAAI,EAAT,OAAYwC,QAAZ,IAAYA,OAAZ,EAAYA,EAAsBzC,KAAM,GAA+B,IAAN,OAApByC,QAAoB,IAApBA,OAAA,EAAAA,EAAsBzC,KACtEoC,EACX,EAAE5F,KAAKyG,IAAIzG,KAAKyD,IAAI,EAAT,OAAYwC,QAAZ,IAAYA,OAAZ,EAAYA,EAAsBxC,KAAM,KACjD,EAAEzD,KAAKyG,IAAIzG,KAAKyD,IAAI,EAAT,OAAYwC,QAAZ,IAAYA,OAAZ,EAAYA,EAAsBxC,KAAM,GAA+B,IAAN,OAApBwC,QAAoB,IAApBA,OAAA,EAAAA,EAAsBxC,KACzE,IAAIzD,KAAKyG,IAAIP,EAAuB,GACpC,GAAGlG,KAAKyG,IAAIzG,KAAKyD,IAAI,EAAG0C,GAAwB,GAE7C,GAAGnG,KAAKyG,IAAIzG,KAAKyD,IAAI,EAAE2C,GAAgB,KAAO,GAAGA,EACjD,GAAGpG,KAAKyG,IAAIzG,KAAKyD,IAAI,EAAE4C,GAAgB,GAAK,IAAIA,EAC7C,IAAIrG,KAAKyG,IAAIzG,KAAKyD,IAAI,GAAG6C,GAAmB,KAAO,IAAIA,EACxD,IAAItG,KAAKyG,IAAIzG,KAAKyD,IAAI,GAAG8C,GAAsB,GAAK,IAAIA,EACxD,IAAIvG,KAAKyG,IAAIzG,KAAKyD,IAAI,GAAG+C,GAAsB,GAAK,IAAIA,GAIzBG,QAAO,SAACC,EAAGC,GAAJ,OAAU7G,KAAK8G,MAAMF,GAAG,GAAK5G,KAAK8G,MAAMD,GAAG,KAAI,IAG5GE,GAAmB,SAACzJ,GACtB,IAAKA,EAAG,OAAO,EACf,IAAM0J,EAAiBC,GAAS3J,EAAE2G,mBAClC,GAAsB,GAAlB+C,EAAqB,OAAO,EAChC,IAAME,EAAc,GAAIC,GAAOH,GAAgBhH,KAAKyG,IAAIzG,KAAK0G,IAAIM,GAAiB,GAAK,EAAEA,EACzF,OAAOhH,KAAK8G,MAAMI,IAEhBC,GAAS,SAACnC,GACZ,OAAIA,EAAI,EAAU,EACdA,EAAI,GAAW,EACZ,GAELiC,GAAW,SAAC3J,GACd,SAAU,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGmG,MAAK,KAAO,OAADnG,QAAC,IAADA,OAAA,EAAAA,EAAGkG,MAAK,IAAI,GAEjC4D,GAAsB,SAAC9J,EAAG+J,EAAQC,GACpC,IAAKhK,EAAG,OAAO,EACf,IAAM0J,EAAiBC,GAAS3J,EAAE2G,mBAC5BsD,EAAiBN,GAAS3J,EAAE6G,mBAClC,GAAsB,GAAlB6C,GAAyC,GAAlBO,EAAqB,OAAO,EAEvD,IAAML,EAAeG,EAAOrH,KAAKyG,IAAIzG,KAAKyD,IAAI,EAAEuD,GAAiB,KAAO,IAAIA,EACtEQ,EAAeF,EAAOtH,KAAKyG,IAAIzG,KAAKyD,IAAI,EAAE8D,GAAiB,KAAO,IAAIA,EAC5E,OAAOvH,KAAK8G,MAAMI,GAAelH,KAAK8G,MAAMU,IAG1CC,GAAmB,SAACnK,GACtB,OAAO8J,GAAoB9J,EAAG,KAAM,OAGlCoK,GAAoB,SAACpK,GACvB,OAAO8J,GAAoB9J,EAAG,IAAK,OAGxBqK,GA/EO,SAACrK,EAAGsI,GACtB,GAAItI,EAAEsK,eAAgB,OAAOtK,EAAEuK,eAC/B,IAAMC,EAAiBnC,GAAyBrI,EAAEsG,YAAagC,GACzDmC,EAAShB,GAAiBzJ,EAAE+G,WAC5B2D,EAAUP,GAAiBnK,EAAEwG,WAC7BmE,EAAWP,GAAkBpK,EAAE4G,YACrC,OAAOlE,KAAKyD,IAAI,EAAGqE,EAAiBC,EAAUC,EAAUC,ICHvC7K,G,kDAEjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAKVgB,QAAU,WACN,MAAO,CACH,CAAC,GAAI,SAACC,GAAM,OAAO,cAAC,EAAD,CAAMa,KAAMb,EAAE4K,YACjC,CAAC,OAAQ,SAAC5K,GAAK,OAAO6K,GAAW7K,EAAE4K,UAAW,CAAEE,UAAW,SAC3D,CAAC,WAAW,SAAC9K,GAAK,OAAO+K,GAAM/K,EAAEgL,YACjC,CAAC,SAAS,SAAChL,GAAK,OAAOA,EAAE4K,QAAQK,MAAOjL,EAAE4F,OAAO,IAAK,WAX3C,EAgBnBtF,UAAY,WAER,OADWC,KAAKR,UACJS,KAAI,SAACC,EAAKC,GAClB,IAAIwC,EAASzC,EAAIM,QAAQ,EAAGN,EAAI,GAAG,GACnC,OAAQ,qBAAIyC,MAAOA,EAAX,cAAoCzC,EAAI,GAAxC,MAAyBA,EAAI,QApB1B,EAwBnBE,YAAc,WAAa,IAAD,OAClBE,EAAON,KAAKxB,MAAM8B,KACtB,IAAKA,EAAM,MAAO,GACdN,KAAKxB,MAAM+B,QAAUP,KAAKxB,MAAM+B,OAAOC,OAAO,IAC9CF,EAAOA,EAAKC,QAAO,SAACE,GAAD,OAAQ,EAAKjC,MAAM+B,OAAOG,QAAQD,EAAKE,WAAa,MAE3E,IAAIC,EAAOZ,KAAKR,UAChB,OAAOc,EAAKL,KAAI,SAACY,EAAKV,GAClB,OAAO,6BAAgB,cAAC,GAAD,CAAuBG,KAAMO,EAAKD,KAAMA,GAAxBT,IAAvBA,OA9BpB,EAAKJ,UAAY,EAAKA,UAAUe,KAAf,gBACjB,EAAKV,YAAc,EAAKA,YAAYU,KAAjB,gBACnB,EAAKtB,QAAU,EAAKA,QAAQsB,KAAb,gBAJA,E,0CAoCnB,WACI,OACI,wBAAO6B,MAAO,CAACC,MAAO,KAAtB,UACI,uBAAOD,MAAO,CAACS,QAAS,QAAxB,SAAiC,6BAAKpD,KAAKD,gBAC3C,gCAAQC,KAAKI,uB,GA1CMlC,IAAMS,WA+CnCqC,GAAY,SAACxC,GACf,OAAOA,EAAMoC,KAAKX,KAAI,SAACC,EAAKC,GACxB,IAAIwC,EAASzC,EAAIM,QAAQ,EAAGN,EAAI,GAAG,GACnC,OAAO,oBAAIyC,MAAOA,EAAX,SAAiCzC,EAAI,GAAG1B,EAAM8B,OAAtBJ,EAAI,QAGrCoK,GAAa,SAAC7K,GAChB,IAAMuC,EAAOvC,EAAEwC,SAAWxC,EAAEE,GAC5B,OAAQ,mBAAGqC,KAAMA,EAAT,SAAgBvC,EAAEC,QAExB8K,GAAQ,SAAC/K,GACX,OAAIA,EAAEmG,KAAOnG,EAAEkG,IAAYlG,EAAEmG,IACtBnG,EAAEkG,IAAM,IAAMlG,EAAEmG,KC3DrB7B,GAAS,CACXgB,KAAM,CACFC,WAAY,GACZC,WAAY,SACZnC,SAAU,SACV2D,aAAc,YAElBkE,MAAO,CACHxG,WAAY,GACZa,YAAa,KAIA4F,G,kDAEjB,WAAYpM,GAAQ,IAAD,8BACf,cAAMA,IACDqM,MAAQ,CACTC,UAAU,GAEd,EAAKC,aAAe,EAAKA,aAAajK,KAAlB,gBALL,E,gDAOnB,WACId,KAAKgL,SAAS,CAAEF,UAAW9K,KAAK6K,MAAMC,a,oBAG1C,WAAU,IAAD,IACCxK,EAAON,KAAKxB,MAAM8B,KAClBiE,EAAQvE,KAAKxB,MAAM+F,MACnB0G,EAAK,UAAG3K,EAAK4K,iBAAR,iBAAG,EAAgBC,SAAQ,SAAChE,GAAD,OAAKiE,GAAajE,aAA7C,aAAG,EAA+C5G,QAAO,SAAC4G,GAAD,QAAOA,KAC3E,OAAK8D,GAAQA,EAAMzK,OAUb,eAAC,IAAMsF,SAAP,WACM,sBAAKnD,MAAO,CAAES,QAAQ,QAASiI,QAASrL,KAAK+K,aAA7C,UACQ,qBAAKvI,IAAI,2BACT,sBAAMG,MAAOoB,GAAOgB,KAApB,SAA2BR,OAEnC,qBAAK5B,MAAOoB,GAAO4G,MAAnB,SACM3K,KAAK6K,MAAMC,UAAa,cAAC,GAAD,CAAYxK,KAAM2K,SAdtD,cAAC,IAAMnF,SAAP,UACM,sBAAKnD,MAAO,CAAES,QAAQ,QAAtB,UACI,qBAAKT,MAAO,CAAEC,MAAO,MACrB,sBAAMD,MAAOoB,GAAOgB,KAApB,SAA2BR,a,GAtBRrG,IAAMS,WAwC3CyM,GAAe,SAAC9F,GAAU,IAAD,IACvB4B,EAAS,GAQb,OAPA,UAAA5B,EAAKgG,gBAAL,mBAAeL,aAAf,SAAsBpD,SAAQ,SAACwC,GAC3BnD,EAAOqE,KAAP,aACIlB,WACG/E,OAIJ4B,GC9DLnD,GAAS,CACXC,KAAM,CACFC,SAAU,WACVa,QAAS,OACT1B,QAAS,QACTR,MAAO,OACPC,OAAQ,OACRuB,WAAY,WAYLC,GARE,SAAC,GAAqG,EAApGC,aAAqG,IAAvFC,EAAsF,EAAtFA,MAAyBjE,GAA6D,EAA/EkE,SAA+E,EAArEC,OAAqE,EAA7DnE,MAA6D,EAAvDoE,OAAuD,EAA/CC,SAA+C,EAArCC,WAAqC,EAAzBC,oBAC1F,OACI,qBAAKlC,MAAOoB,GAAOC,KAAnB,SACI,cAAC,GAAD,CAAe1D,KAAMA,EAAMiE,MAAOA,OCPxCiH,GAAU,SAAC,GAAyB,IAAxBzC,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAGyC,EAAiB,EAAjBA,YAChBC,EAAK3C,GAAG,GACR4C,EAAK3C,GAAG,GACZ,OAAG0C,EAAKC,EAAWF,EAAc,GAAK,EACnCC,EAAKC,EAAWF,GAAe,EAAI,EAC/B,GAELG,GAAU,SAAC,GAAyB,IAAxB7C,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAGyC,EAAiB,EAAjBA,YAChBC,EAAK3C,GAAG,EACR4C,EAAK3C,GAAG,EACZ,OAAG0C,EAAKC,EAAWF,EAAc,GAAK,EACnCC,EAAKC,EAAWF,GAAe,EAAI,EAC/B,GAELI,GAAS,SAAC,GAAyB,IAAxB9C,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAGyC,EAAiB,EAAjBA,YACbK,EAAO,CAAC,WAAW,QAAQ,OAAO,gBAAgB,YAAY,IAChEJ,EAAKI,EAAKpL,QAAQqI,GAClB4C,EAAKG,EAAKpL,QAAQsI,GACtB,OAAG0C,EAAKC,EAAWF,EAAc,GAAK,EACnCC,EAAKC,EAAWF,GAAe,EAAI,EAC/B,GAULM,GAAiB,WAAO,IACpBC,EAAShN,OAAOC,SAAhB+M,KACK,KAATA,GACFC,YAAW,WACT,IAAMtM,EAAKqM,EAAKE,QAAQ,IAAK,IACvBC,EAAUzI,SAASC,eAAehE,GACpCwM,GAASA,EAAQC,mBACpB,MAIc7M,G,kDAEjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAKV6N,QAAW,WAAa,IAAD,OACf/L,EAAON,KAAKxB,MAAM8B,KAItB,OAHIN,KAAKxB,MAAM+B,SACXD,EAAOA,EAAKC,QAAO,SAAC4G,GAAD,OAAK,EAAK3I,MAAM+B,OAAO4G,OAEvC7G,GAXQ,EAcnBgM,cAAgB,SAAU5O,GACtB,QAASsC,KAAKuM,KAAKC,MAAK,SAACrF,GAAD,OAAKzJ,EAAEyJ,OAfhB,EAiBnBsF,WAAc,WACV,IAAI5I,EAAI,EACR,MAAO,CACH,CACIlE,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,GACPC,QAAQ,EACRC,aAAcvI,EACdwI,KAAKhB,GACLjJ,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,OACP+E,MAAO,OACPC,QAAQ,EACRC,aAAcE,GACdlK,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,WACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAO2D,oBACtC2E,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkBmC,uBAE1D,CACIvI,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,MACPK,SAAU,oBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,SAA4B,OAALH,QAAK,IAALA,GAAA,UAAAA,EAAO6D,4BAAP,eAA6BzC,MAAK,KAAW,OAALpB,QAAK,IAALA,GAAA,UAAAA,EAAO6D,4BAAP,eAA6BxC,MAAK,IAAI,GAC/GiH,KAAKjB,GACLgB,aAAclF,GAAU,cAAe,wBACvC9E,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkBqC,yBAE1D,CACIzI,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,KACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAO0D,sBACtC4E,KAAKjB,GACLhJ,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkBkC,yBAE1D,CACItI,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,KACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOyD,qBACtC6E,KAAKjB,GACLhJ,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkBiC,wBAE1D,CACIrI,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,OACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAO8D,uBACtCwE,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkBsC,0BAE1D,CACI1I,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,QACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAO+D,uBACtCuE,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkBuC,0BAE1D,CACI3I,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,QACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOgE,eACtCsE,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkBwC,kBAE1D,CACI5I,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,QACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOiE,eACtCqE,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkByC,kBAE1D,CACI7I,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,KACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOkE,kBACtCoE,KAAKjB,GACLhJ,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkB0C,qBAE1D,CACI9I,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,KACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOmE,qBACtCmE,KAAKjB,GACLhJ,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkB2C,wBAE1D,CACI/I,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,KACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOoE,qBACtCkE,KAAKjB,GACLhJ,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkB4C,wBAE1D,CACIhJ,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,QACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAO0I,4BACtCJ,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkBkH,+BAE1D,CACItN,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,UACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAO4D,0BACtC0E,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAKsF,mBAAb,aAAQ,EAAkBoC,6BAE1D,CACIxI,GAAIkE,IACJ8D,MAAO,eACP+E,MAAO,WACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAO7E,MACtCkD,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,aACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,OAAqB0C,KAAKC,UAAL,OAAe9C,QAAf,IAAeA,OAAf,EAAeA,EAAOyB,kBACrD6G,KAAKrB,GACL5I,MAAO,QACPgK,aAAc/G,GAElB,CACIlG,GAAIkE,IACJ8D,MAAO,iBACP+E,MAAO,QACPG,KAAKjB,GACLhJ,MAAO,QACPoK,SAAS,GAEb,CACIrN,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,QACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,OAAqBH,GAC/B3B,MAAO,QACPiK,KAAKrB,GACLoB,aAActF,GACd0F,SAAS,KAzLjB,EAAKP,WAAa,EAAKA,WAAW3L,KAAhB,gBAClB,EAAKuL,QAAU,EAAKA,QAAQvL,KAAb,gBAHA,E,0CAgMnB,WAQI,OAPAoM,IAAUC,aAAaC,aAAc,EACrCF,IAAUC,aAAaE,qBAAuB,GAC9CH,IAAUC,aAAaG,iBAAkB,EACzCJ,IAAUC,aAAaI,YAAa,EACpCL,IAAUC,aAAaK,6BAA8B,EACrDxN,KAAKuM,KAAOvM,KAAKqM,UAEV,cAAC,IAAD,CACKoB,QAASzN,KAAKyM,aACdF,KAAMvM,KAAKuM,KACXhJ,OAAQwI,IACH/L,KAAKxB,MAAM6E,W,GA9MDnF,IAAMS,WCzCnC6M,GAAU,SAAC,GAAyB,IAAxBzC,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAGyC,EAAiB,EAAjBA,YAChBC,EAAK3C,GAAG,GACR4C,EAAK3C,GAAG,GACZ,OAAG0C,EAAKC,EAAWF,EAAc,GAAK,EACnCC,EAAKC,EAAWF,GAAe,EAAI,EAC/B,GAELG,GAAU,SAAC,GAAyB,IAAxB7C,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAGyC,EAAiB,EAAjBA,YAChBC,EAAK3C,GAAG,EACR4C,EAAK3C,GAAG,EACZ,OAAG0C,EAAKC,EAAWF,EAAc,GAAK,EACnCC,EAAKC,EAAWF,GAAe,EAAI,EAC/B,GAELI,GAAS,SAAC,GAAyB,IAAxB9C,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAGyC,EAAiB,EAAjBA,YACbK,EAAO,CAAC,WAAW,QAAQ,OAAO,gBAAgB,YAAY,IAChEJ,EAAKI,EAAKpL,QAAQqI,GAClB4C,EAAKG,EAAKpL,QAAQsI,GACtB,OAAG0C,EAAKC,EAAWF,EAAc,GAAK,EACnCC,EAAKC,EAAWF,GAAe,EAAI,EAC/B,GAULM,GAAiB,WAAO,IACpBC,EAAShN,OAAOC,SAAhB+M,KACK,KAATA,GACFC,YAAW,WACT,IAAMtM,EAAKqM,EAAKE,QAAQ,IAAK,IACvBC,EAAUzI,SAASC,eAAehE,GACpCwM,GAASA,EAAQC,mBACpB,MAIc7M,G,kDAEjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAKV6N,QAAW,WAAa,IAAD,OACf/L,EAAON,KAAKxB,MAAM8B,KAItB,OAHIN,KAAKxB,MAAM+B,SACXD,EAAOA,EAAKC,QAAO,SAAC4G,GAAD,OAAK,EAAK3I,MAAM+B,OAAO4G,OAEvC7G,GAXQ,EAcnBmM,WAAc,WACV,IAAI5I,EAAI,EACR,MAAO,CACH,CACIlE,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,GACPC,QAAQ,EACRC,aAAcvI,EACdwI,KAAKhB,GACLjJ,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,OACP+E,MAAO,OACPC,QAAQ,EACRC,aAAcE,GACdlK,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,eACP+E,MAAO,WACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,OAAqBH,EAAM7E,MACrCkD,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,YACP+E,MAAO,KACPK,SAAU,oBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,SAA4B,OAALH,QAAK,IAALA,GAAA,UAAAA,EAAO6B,yBAAP,eAA0BT,MAAK,KAAW,OAALpB,QAAK,IAALA,GAAA,UAAAA,EAAO6B,yBAAP,eAA0BR,MAAK,IAAI,GACzGiH,KAAKjB,GACLhJ,MAAO,QACPgK,aAAclF,GAAU,YAAa,sBAEzC,CACI/H,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,aACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,OAAqB0C,KAAKC,UAAL,OAAe9C,QAAf,IAAeA,OAAf,EAAeA,EAAOyB,kBACrD6G,KAAKrB,GACL5I,MAAO,QACPgK,aAAc/G,GAElB,CACIlG,GAAIkE,IACJ8D,MAAO,iBACP+E,MAAO,QACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,OAAqBH,EAAQA,EAAQ,QAAU,IACzDsI,KAAKjB,GACLhJ,MAAO,QACPoK,SAAS,GAEb,CACIrN,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,QACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,OAAqBH,GAC/B3B,MAAO,QACPiK,KAAKrB,GACLoB,aAActF,GACd0F,SAAS,KA1EjB,EAAKP,WAAa,EAAKA,WAAW3L,KAAhB,gBAClB,EAAKuL,QAAU,EAAKA,QAAQvL,KAAb,gBAHA,E,0CAiFnB,WAQI,OAPAoM,IAAUC,aAAaC,aAAc,EACrCF,IAAUC,aAAaE,qBAAuB,GAC9CH,IAAUC,aAAaG,iBAAkB,EACzCJ,IAAUC,aAAaI,YAAa,EACpCL,IAAUC,aAAaK,6BAA8B,EACrDxN,KAAKuM,KAAOvM,KAAKqM,UAEV,cAAC,IAAD,CACKoB,QAASzN,KAAKyM,aACdF,KAAMvM,KAAKuM,KACXhJ,OAAQwI,IACH/L,KAAKxB,MAAM6E,W,GA/FDnF,IAAMS,WCjD1B,SAASD,GAAOmD,EAAQ6L,EAAMC,GAAmB,IAAbjB,EAAY,uDAANgB,EAC/C5O,EAAK+C,EAAO6L,EACZ3O,EAAW4O,EAAKxO,eAAeL,EAAGK,cAAe,WAAW,GAClE,OAAQ,oBAAIV,UAAWM,EAAf,SAAmC,cAAC,IAAD,CAAMD,GAAIA,EAAGO,cAAb,SAA6BqN,EAAMpN,gBAAzCoO,G,ICGpBE,G,kDACjB,WAAYpP,GAAQ,uCACVA,G,0CAGV,WACI,OAAKwB,KAAKxB,MAAM8B,KAEZ,gCACI,qBAAI7B,UAAU,KAAd,UACSC,GAAO,UAAW,OAAQsB,KAAKxB,MAAMS,SAASC,UAC9CR,GAAO,UAAW,SAAUsB,KAAKxB,MAAMS,SAASC,UAChDR,GAAO,UAAW,SAAUsB,KAAKxB,MAAMS,SAASC,UAChDR,GAAO,UAAW,OAAQsB,KAAKxB,MAAMS,SAASC,UAC9CR,GAAO,UAAW,OAAQsB,KAAKxB,MAAMS,SAASC,UAC9CR,GAAO,UAAW,WAAYsB,KAAKxB,MAAMS,SAASC,UAClDR,GAAO,UAAW,OAAQsB,KAAKxB,MAAMS,SAASC,UAC9CR,GAAO,UAAW,MAAOsB,KAAKxB,MAAMS,SAASC,UAC7CR,GAAO,UAAW,QAASsB,KAAKxB,MAAMS,SAASC,aAExD,eAAC,IAAD,WACK2O,GAAU,OAAQ7N,KAAKxB,MAAM8B,MAC7BuN,GAAU,SAAU7N,KAAKxB,MAAM8B,MAC/BuN,GAAU,SAAU7N,KAAKxB,MAAM8B,MAC/BuN,GAAU,OAAQ7N,KAAKxB,MAAM8B,MAC7BuN,GAAU,OAAQ7N,KAAKxB,MAAM8B,MAC7BuN,GAAU,OAAQ7N,KAAKxB,MAAM8B,MAC7BuN,GAAU,OAAQ7N,KAAKxB,MAAM8B,MAC7BuN,GAAU,WAAY7N,KAAKxB,MAAM8B,MAClC,cAAC,EAAD,CAAaqN,KAAK,aAAa9P,UAAWiQ,GACtCxN,KAASN,KAAKxB,MAAM8B,KAAO+C,MAAM,SACjC9C,OAAU,SAAC4G,GAAD,MAAiC,OAA3BA,EAAE4G,aAAajO,cAEnC,cAAC,EAAD,CAAY6N,KAAK,eAAgB9P,UAAWmQ,GACxC1N,KAASN,KAAKxB,MAAM8B,KAAO+C,MAAM,QACjC9C,OAAU,SAAC4G,GAAD,cAAM,UAACA,EAAE4G,oBAAH,aAAC,EAAgBjO,qBA7BpB,iB,GANE5B,IAAMS,WA2CvCkP,GAAY,SAACI,EAAM3N,GACrB,IAAMqN,EAAO,UAAUM,EACvB,OAAO,cAAC,EAAD,CAAaN,KAAMA,EAAM9P,UAAWmQ,GACvB1N,KAAQA,EAAM+C,MAAQ4K,EACtB1N,OAAU,SAAC4G,GAAD,OAAMA,EAAE4G,aAAalO,eAAiBoO,MCpDnD1O,G,kDAEjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAKVgB,QAAU,WACN,MAAO,CACH,CAAC,GAAI,SAACC,GAAM,OAAO,cAAC,EAAD,CAAMa,KAAMb,MAC/B,CAAC,OAAQ,SAACA,GAAK,OAAO6K,GAAW7K,IAAK,CAAE8K,UAAW,SACnD,CAAC,OAAO,SAAC9K,GAAD,OAAKA,EAAEyO,OACf,CAAC,MAAM,SAACzO,GAAD,OAAKA,EAAE0O,MACd,CAAC,SAAS,SAAC1O,GAAK,OAAOA,EAAE4F,OAAQ5F,EAAE4F,OAAO,IAAK,KAC/C,CAAC,YAAY,SAAC5F,GAAK,OAAOA,EAAE8F,UAAU,MACtC,CAAC,WAAW,SAAC9F,GAAK,OAAOA,EAAE+F,SAAS,cAdzB,EAkBnBzF,UAAY,WAER,OADWC,KAAKR,UACJS,KAAI,SAACC,EAAKC,GAClB,IAAIwC,EAASzC,EAAIM,QAAQ,EAAGN,EAAI,GAAG,GACnC,OAAQ,qBAAIyC,MAAOA,EAAX,cAAoCzC,EAAI,GAAxC,MAAyBA,EAAI,QAtB1B,EA0BnBE,YAAc,WAAa,IAAD,OAClBC,EAAQL,KAAKxB,MAAM8B,KACvB,IAAKD,EAAO,MAAO,GACfL,KAAKxB,MAAM+B,QAAUP,KAAKxB,MAAM+B,OAAOC,OAAO,IAC9CH,EAAQA,EAAME,QAAO,SAACE,GAAD,OAAQ,EAAKjC,MAAM+B,OAAOG,QAAQD,EAAKE,WAAa,MAE7E,IAAIC,EAAOZ,KAAKR,UAChB,OAAOa,EAAMJ,KAAI,SAACY,EAAKV,GACnB,OAAO,6BAAgB,cAAC,GAAD,CAAuBG,KAAMO,EAAKD,KAAMA,GAAxBT,IAAvBA,OAhCpB,EAAKJ,UAAY,EAAKA,UAAUe,KAAf,gBACjB,EAAKV,YAAc,EAAKA,YAAYU,KAAjB,gBACnB,EAAKtB,QAAU,EAAKA,QAAQsB,KAAb,gBAJA,E,0CAsCnB,WACI,OACI,wBAAO6B,MAAO,CAACC,MAAO,KAAtB,UACI,uBAAOD,MAAO,CAACS,QAAS,QAAxB,SAAiC,6BAAKpD,KAAKD,gBAC3C,gCAAQC,KAAKI,uB,GA5CMlC,IAAMS,WAiDnCqC,GAAY,SAACxC,GACf,OAAOA,EAAMoC,KAAKX,KAAI,SAACC,EAAKC,GACxB,IAAIwC,EAASzC,EAAIM,QAAQ,EAAGN,EAAI,GAAG,GACnC,OAAO,oBAAIyC,MAAOA,EAAX,SAAiCzC,EAAI,GAAG1B,EAAM8B,OAAtBJ,EAAI,QAGrCoK,GAAa,SAAC7K,GAChB,IAAMuC,EAAOvC,EAAEwC,SAAWxC,EAAEE,GAC5B,OAAQ,mBAAGqC,KAAMA,EAAT,SAAgBvC,EAAEC,QCzDxBqE,GAAS,CACXgB,KAAM,CACFC,WAAY,GACZC,WAAY,SACZnC,SAAU,SACV2D,aAAc,YAElBkE,MAAO,CACHxG,WAAY,GACZa,YAAa,KAIA4F,G,kDAEjB,WAAYpM,GAAQ,IAAD,8BACf,cAAMA,IACDqM,MAAQ,CACTC,UAAU,GAEd,EAAKC,aAAe,EAAKA,aAAajK,KAAlB,gBALL,E,gDAOnB,WACId,KAAKgL,SAAS,CAAEF,UAAW9K,KAAK6K,MAAMC,a,oBAG1C,WACI,IAAMxK,EAAON,KAAKxB,MAAM8B,KAClBiE,EAAQvE,KAAKxB,MAAM+F,MACnB0G,EAAQ3K,EAAK2K,MACnB,OAAKA,GAAQA,EAAMzK,OAUb,eAAC,IAAMsF,SAAP,WACM,sBAAKnD,MAAO,CAAES,QAAQ,QAASiI,QAASrL,KAAK+K,aAA7C,UACQ,qBAAKvI,IAAI,2BACT,sBAAMG,MAAOoB,GAAOgB,KAApB,SAA2BR,OAEnC,qBAAK5B,MAAOoB,GAAO4G,MAAnB,SACM3K,KAAK6K,MAAMC,UAAa,cAAC,GAAD,CAAYxK,KAAM2K,SAdtD,cAAC,IAAMnF,SAAP,UACM,sBAAKnD,MAAO,CAAES,QAAQ,QAAtB,UACI,qBAAKT,MAAO,CAAEC,MAAO,MACrB,sBAAMD,MAAOoB,GAAOgB,KAApB,SAA2BR,a,GAtBRrG,IAAMS,WCb3CoF,GAAS,CACXC,KAAM,CACFC,SAAU,WACVa,QAAS,eACT1B,QAAS,QACTR,MAAO,OACPC,OAAQ,OACRuB,WAAY,WAYLC,GARE,SAAC,GAAqG,EAApGC,aAAqG,IAAvFC,EAAsF,EAAtFA,MAAyBjE,GAA6D,EAA/EkE,SAA+E,EAArEC,OAAqE,EAA7DnE,MAA6D,EAAvDoE,OAAuD,EAA/CC,SAA+C,EAArCC,WAAqC,EAAzBC,oBAC1F,OACI,qBAAKlC,MAAOoB,GAAOC,KAAnB,SACI,cAAC,GAAD,CAAe1D,KAAMA,EAAMiE,MAAOA,OCfxCR,GAAS,CACXC,KAAM,CACFC,SAAU,WACVa,QAAS,SACT1B,QAAS,OACTR,MAAO,OACPwB,WAAY,UAEhBX,IAAK,CACDb,MAAO,GACPC,OAAO,KAaAuL,GARF,SAAC,GAAqG,EAApG9J,aAAqG,IAAvFC,EAAsF,EAAtFA,MAAsF,EAA/EC,SAA+E,EAArEC,OAAqE,EAA7DnE,KAA6D,EAAvDoE,OAAuD,EAA/CC,SAA+C,EAArCC,WAAqC,EAAzBC,oBACtF,OACI,qBAAKlC,MAAOoB,GAAOC,KAAnB,SACKO,GAAS,qBAAK5B,MAAOoB,GAAON,IAAKjB,IAAI,sBCH5CoJ,GAAU,SAAC,GAAyB,IAAxB7C,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAGyC,EAAiB,EAAjBA,YAChBC,EAAK3C,GAAG,EACR4C,EAAK3C,GAAG,EACZ,OAAG0C,EAAKC,EAAWF,EAAc,GAAK,EACnCC,EAAKC,EAAWF,GAAe,EAAI,EAC/B,GAWLM,GAAiB,WAAO,IACpBC,EAAShN,OAAOC,SAAhB+M,KACK,KAATA,GACFC,YAAW,WACT,IAAMtM,EAAKqM,EAAKE,QAAQ,IAAK,IACvBC,EAAUzI,SAASC,eAAehE,GACpCwM,GAASA,EAAQC,mBACpB,MAIc7M,G,kDAEjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAKV6N,QAAW,WAAa,IAAD,OACfhM,EAAQL,KAAKxB,MAAM8B,KAKvB,OAJIN,KAAKxB,MAAM+B,SACXF,EAAQA,EAAME,QAAO,SAACE,GAAD,OAAQ,EAAKjC,MAAM+B,OAAOG,QAAQD,EAAKE,WAAa,MAGtEN,GAZQ,EAcnBiM,cAAgB,SAAU5O,GACtB,QAASsC,KAAKuM,KAAKC,MAAK,SAACrF,GAAD,OAAKzJ,EAAEyJ,OAfhB,EAiBnBsF,WAAc,WACV,IAAI5I,EAAI,EACR,MAAO,CACH,CACIlE,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,GACPC,QAAQ,EACRC,aAAcvI,EACdzB,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,OACP+E,MAAO,OACPC,QAAQ,EACRC,aAAcE,GACdlK,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,WACP+E,MAAO,WACP9J,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,aACP+E,MAAO,QACPE,aAAcyB,GACdxB,KAAKjB,GACLhJ,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,KACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOgE,eACtCsE,KAAKjB,GACLhJ,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK8G,qBAAb,aAAQ,EAAoBgB,kBAE5D,CACI5I,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,KACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAO0D,sBACtC4E,KAAKjB,GACLhJ,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK8G,qBAAb,aAAQ,EAAoBU,yBAE5D,CACItI,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,MACPK,SAAU,oBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,SAA4B,OAALH,QAAK,IAALA,GAAA,UAAAA,EAAO6D,4BAAP,eAA6BzC,MAAK,KAAS,OAALpB,QAAK,IAALA,GAAA,UAAAA,EAAO6D,4BAAP,eAA6BxC,MAAK,IAAI,GAC7GgH,aAAclF,GAAU,gBAAgB,wBACxC9E,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK8G,qBAAb,aAAQ,EAAoBa,yBAE5D,CACIzI,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,OACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAO8D,uBACtCwE,KAAKjB,GACLhJ,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK8G,qBAAb,aAAQ,EAAoBc,0BAE5D,CACI1I,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,KACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOyD,qBACtC6E,KAAKjB,GACLhJ,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK8G,qBAAb,aAAQ,EAAoBS,wBAE5D,CACIrI,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,SACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAO4D,0BACtC0E,KAAKjB,GACLhJ,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK8G,qBAAb,aAAQ,EAAoBY,6BAE5D,CACIxI,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,KACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOiE,eACtCqE,KAAKjB,GACLhJ,MAAO,OACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK8G,qBAAb,aAAQ,EAAoBiB,kBAE5D,CACI7I,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,WACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAO2D,oBACtC2E,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK8G,qBAAb,aAAQ,EAAoBW,uBAE5D,CACIvI,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,YACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOkE,kBACtCoE,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK8G,qBAAb,aAAQ,EAAoBkB,qBAE5D,CACI9I,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,WACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOmE,qBACtCmE,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK8G,qBAAb,aAAQ,EAAoBmB,wBAE5D,CACI/I,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,aACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,cAAqBH,QAArB,IAAqBA,OAArB,EAAqBA,EAAOoE,qBACtCkE,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK8G,qBAAb,aAAQ,EAAoBoB,wBAE5D,CACIhJ,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,WACPK,SAAU,oBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,SAA4B,OAALH,QAAK,IAALA,GAAA,UAAAA,EAAO6B,yBAAP,eAA0BT,MAAK,KAAS,OAALpB,QAAK,IAALA,GAAA,UAAAA,EAAO6B,yBAAP,eAA0BR,MAAK,IAAI,GACvGgH,aAAclF,GAAU,cAAc,qBACtCmF,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK+G,mBAAb,aAAQ,EAAkBpB,sBAE1D,CACIzG,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,WACPK,SAAU,oBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,SAA4B,OAALH,QAAK,IAALA,GAAA,UAAAA,EAAO+B,yBAAP,eAA0BX,MAAK,KAAS,OAALpB,QAAK,IAALA,GAAA,UAAAA,EAAO+B,yBAAP,eAA0BV,MAAK,IAAI,GACvGgH,aAAclF,GAAU,cAAc,qBACtCmF,KAAKjB,GACLhJ,MAAO,QACPoK,QAAShN,KAAKsM,eAAc,SAAC7L,GAAD,uBAAQA,EAAK+G,mBAAb,aAAQ,EAAkBlB,sBAE1D,CACI3G,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,gBACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,OAAqB0C,KAAKC,UAAU9C,IAC9CqI,aAActF,GACd1E,MAAO,QACPoK,SAAS,GAEb,CACIrN,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,cACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,OAAqB0C,KAAKC,UAAU9C,IAC9CqI,aAActF,GACd1E,MAAO,QACPoK,SAAS,KAvLjB,EAAKP,WAAa,EAAKA,WAAW3L,KAAhB,gBAClB,EAAKuL,QAAU,EAAKA,QAAQvL,KAAb,gBAHA,E,0CA+LnB,WASI,OARAoM,IAAUC,aAAaC,aAAc,EACrCF,IAAUC,aAAaE,qBAAuB,GAC9CH,IAAUC,aAAaG,iBAAkB,EACzCJ,IAAUC,aAAaI,YAAa,EACpCL,IAAUC,aAAaK,6BAA8B,EAErDxN,KAAKuM,KAAOvM,KAAKqM,UAEV,cAAC,IAAD,CACKoB,QAASzN,KAAKyM,aACdF,KAAMvM,KAAKuM,KACXhJ,OAAQwI,IACH/L,KAAKxB,MAAM6E,W,GA9MDnF,IAAMS,WCzCpBiP,G,kDACjB,WAAYpP,GAAQ,uCACVA,G,0CAGV,WACI,OAAKwB,KAAKxB,MAAM8B,KAEP,2CAGQ,cAAC,GAAD,CAAiBA,KAASN,KAAKxB,MAAM8B,KAAKC,QAAO,SAAC4G,GAAD,OAAKA,EAAEmH,gBAHhE,WAOQ,cAAC,GAAD,CAAiBhO,KAASN,KAAKxB,MAAM8B,KAAKC,QAAO,SAAC4G,GAAD,OAAMA,EAAEmH,mBAT7C,iB,GANEpQ,IAAMS,WCCvCoF,GAAS,CACXC,KAAM,CACFpB,MAAO,KAEXa,IAAK,CACDb,MAAO,GACPC,OAAO,GACP0L,WAAY,EACZC,YAAa,GAEjBlJ,KAAM,CACFmJ,MAAO,QACPC,cAAe,aACfC,MAAM,OACNvL,QAAS,OACTqE,OAAQ,KAIKlI,G,kDAEjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAIV4B,YAAc,SAAUE,GAAO,IAAD,EAC1B,IAAKA,EAAM,MAAO,GAClB,IAAMsO,EAAI,OAAGtO,QAAH,IAAGA,GAAH,UAAGA,EAAM6K,SAAQ,SAAChE,GAAD,OAAKA,EAAEyH,eAAxB,aAAG,EAA4BrO,OAAOsO,IAEhD,cAAOD,QAAP,IAAOA,OAAP,EAAOA,EAAM3O,KAAI,SAACY,EAAKV,GACnB,OAAO,eAAC,IAAD,CAAkBrB,GAAI+B,EAAIoB,SAAWpB,EAAInB,KAAO,IAAMY,EAAK,GAAGJ,IAAKyC,MAAOoB,GAAOuB,KAAjF,UACK,qBAAK3C,MAAOoB,GAAON,IAAKjB,IAAI,2BAA6B3B,EAAInB,OADvDS,OARtB,EAAKC,YAAc,EAAKA,YAAYU,KAAjB,gBAFJ,E,0CAgBnB,WAEI,OACI,qBAAK6B,MAAOoB,GAAOC,KAAnB,SAA0BhE,KAAKI,YAAYJ,KAAKxB,MAAM8B,Y,GArB/BpC,IAAMS,WAyBzC,SAASkQ,GAAOpO,EAAMqO,EAAKC,GACvB,OAAOA,EAAKrO,QAAQD,IAASqO,E,IC9CZvP,G,kDAEjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAKVgB,QAAU,WACN,MAAO,CACH,CAAC,GAAI,SAACC,GAAM,OAAO,cAAC,EAAD,CAAMa,KAAMb,EAAE6F,SACjC,CAAC,OAAQ,SAAC7F,GAAK,OAAO6K,GAAW7K,EAAE6F,OAAQ,CAAEiF,UAAW,SACxD,CAAC,WAAW,SAAC9K,GAAK,OAAO+K,GAAM/K,EAAEgL,YACjC,CAAC,SAAS,SAAChL,GAAK,OAAOA,EAAE4F,OAAO,QAXrB,EAenBtF,UAAY,WAER,OADWC,KAAKR,UACJS,KAAI,SAACC,EAAKC,GAClB,IAAIwC,EAASzC,EAAIM,QAAQ,EAAGN,EAAI,GAAG,GACnC,OAAQ,qBAAIyC,MAAOA,EAAX,cAAoCzC,EAAI,GAAxC,MAAyBA,EAAI,QAnB1B,EAuBnBE,YAAc,WAAa,IAAD,OAClBC,EAAQL,KAAKxB,MAAM8B,KACvB,IAAKD,EAAO,MAAO,GACfL,KAAKxB,MAAM+B,QAAUP,KAAKxB,MAAM+B,OAAOC,OAAO,IAC9CH,EAAQA,EAAME,QAAO,SAACE,GAAD,OAAQ,EAAKjC,MAAM+B,OAAOG,QAAQD,EAAKE,WAAa,MAE7E,IAAIC,EAAOZ,KAAKR,UAChB,OAAOa,EAAMJ,KAAI,SAACY,EAAKV,GACnB,OAAO,6BAAgB,cAAC,GAAD,CAAuBG,KAAMO,EAAKD,KAAMA,GAAxBT,IAAvBA,OA7BpB,EAAKJ,UAAY,EAAKA,UAAUe,KAAf,gBACjB,EAAKV,YAAc,EAAKA,YAAYU,KAAjB,gBACnB,EAAKtB,QAAU,EAAKA,QAAQsB,KAAb,gBAJA,E,0CAmCnB,WACI,OACI,wBAAO6B,MAAO,CAACC,MAAO,KAAtB,UACI,uBAAOD,MAAO,CAACS,QAAS,QAAxB,SAAiC,6BAAKpD,KAAKD,gBAC3C,gCAAQC,KAAKI,uB,GAzCMlC,IAAMS,WA8CnCqC,GAAY,SAACxC,GACf,OAAOA,EAAMoC,KAAKX,KAAI,SAACC,EAAKC,GACxB,IAAIwC,EAASzC,EAAIM,QAAQ,EAAGN,EAAI,GAAG,GACnC,OAAO,oBAAIyC,MAAOA,EAAX,SAAiCzC,EAAI,GAAG1B,EAAM8B,OAAtBJ,EAAI,QAGrCoK,GAAa,SAAC7K,GAChB,IAAMuC,EAAOvC,EAAEwC,SAAWxC,EAAEE,GAC5B,OAAQ,mBAAGqC,KAAMA,EAAT,SAAgBvC,EAAEC,QAExB8K,GAAQ,SAAC/K,GACX,OAAIA,EAAEmG,KAAOnG,EAAEkG,IAAYlG,EAAEmG,IACtBnG,EAAEkG,IAAM,IAAMlG,EAAEmG,KCxDrB7B,GAAS,CACXgB,KAAM,CACFC,WAAY,GACZC,WAAY,SACZnC,SAAU,SACV2D,aAAc,YAElBkE,MAAO,CACHxG,WAAY,GACZa,YAAa,KAIA4F,G,kDAEjB,WAAYpM,GAAQ,IAAD,8BACf,cAAMA,IACDqM,MAAQ,CACTC,UAAU,GAEd,EAAKC,aAAe,EAAKA,aAAajK,KAAlB,gBALL,E,gDAOnB,WACId,KAAKgL,SAAS,CAAEF,UAAW9K,KAAK6K,MAAMC,a,oBAG1C,WAAU,IAAD,EACCxK,EAAON,KAAKxB,MAAM8B,KAElBiE,EAAQvE,KAAKxB,MAAM+F,MACnB0G,EAAK,UAAG3K,EAAK0O,oBAAR,aAAG,EAAmB3O,MAC3B4O,EAAkB3O,EAAK2O,gBAC7B,OAAKhE,GAAUgE,EAUT,eAAC,IAAMnJ,SAAP,WACM,sBAAKnD,MAAO,CAAES,QAAQ,QAASiI,QAASrL,KAAK+K,aAA7C,UACQ,qBAAKvI,IAAI,2BACT,sBAAMG,MAAOoB,GAAOgB,KAApB,SAA2BR,OAEnC,sBAAK5B,MAAOoB,GAAO4G,MAAnB,UACM3K,KAAK6K,MAAMC,UAAa,cAAC,GAAD,CAAYxK,KAAM2K,IAC1CjL,KAAK6K,MAAMC,UAAa,cAAC,GAAD,CAAUxK,KAAM2O,UAfpD,cAAC,IAAMnJ,SAAP,UACM,sBAAKnD,MAAO,CAAES,QAAQ,QAAtB,UACI,qBAAKT,MAAO,CAAEC,MAAO,MACrB,sBAAMD,MAAOoB,GAAOgB,KAApB,SAA2BR,a,GAxBRrG,IAAMS,WCf3CoF,GAAS,CACXC,KAAM,CACFC,SAAU,WACVa,QAAS,OACT1B,QAAS,QACTR,MAAO,OACPC,OAAQ,OACRuB,WAAY,WAYLC,GARE,SAAC,GAAqG,EAApGC,aAAqG,IAAvFC,EAAsF,EAAtFA,MAAyBjE,GAA6D,EAA/EkE,SAA+E,EAArEC,OAAqE,EAA7DnE,MAA6D,EAAvDoE,OAAuD,EAA/CC,SAA+C,EAArCC,WAAqC,EAAzBC,oBAC1F,OACI,qBAAKlC,MAAOoB,GAAOC,KAAnB,SACI,cAAC,GAAD,CAAe1D,KAAMA,EAAMiE,MAAOA,OCPxCiH,GAAU,SAAC,GAAyB,IAAxBzC,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAGyC,EAAiB,EAAjBA,YAChBC,EAAK3C,GAAG,GACR4C,EAAK3C,GAAG,GACZ,OAAG0C,EAAKC,EAAWF,EAAc,GAAK,EACnCC,EAAKC,EAAWF,GAAe,EAAI,EAC/B,GAELG,GAAU,SAAC,GAAyB,IAAxB7C,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAGyC,EAAiB,EAAjBA,YAChBC,EAAK3C,GAAG,EACR4C,EAAK3C,GAAG,EACZ,OAAG0C,EAAKC,EAAWF,EAAc,GAAK,EACnCC,EAAKC,EAAWF,GAAe,EAAI,EAC/B,GAGLM,GAAiB,WAAO,IACpBC,EAAShN,OAAOC,SAAhB+M,KACK,KAATA,GACFC,YAAW,WACT,IAAMtM,EAAKqM,EAAKE,QAAQ,IAAK,IACvBC,EAAUzI,SAASC,eAAehE,GACpCwM,GAASA,EAAQC,mBACpB,MAIc7M,G,kDAEjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAKV6N,QAAW,WAAa,IAAD,OACf/L,EAAON,KAAKxB,MAAM8B,KAItB,OAHIN,KAAKxB,MAAM+B,SACXD,EAAOA,EAAKC,QAAO,SAAC4G,GAAD,OAAK,EAAK3I,MAAM+B,OAAO4G,OAEvC7G,GAXQ,EAcnB4O,aAAe,WAEX,OADclP,KAAKuM,KAAKtM,KAAI,SAACkH,GAAD,OvBzCHxH,EuByC2BwH,EAAE7E,OvBzCtBZ,EAAY,OAAC/B,QAAD,IAACA,OAAD,EAACA,EAAI4C,MAAM,KAAK,KuByCEpB,EvBzCtC,IAACxB,KuByCwCmJ,QAAO,SAACC,EAAGC,GAAJ,OAAU7G,KAAKyD,IAAImD,EAAGC,KAAI,IAAI,GACzF,MAhBE,EAkBnByD,WAAc,WACV,IAAI5I,EAAI,EACR,MAAO,CACH,CACIlE,GAAIkE,IACJ8D,MAAO,SACP+E,MAAO,GACPC,QAAQ,EACRC,aAAcvI,EACdwI,KAAKjB,GACLhJ,MAAO5C,KAAKkP,gBAEhB,CACIvP,GAAIkE,IACJ8D,MAAO,OACP+E,MAAO,OACPC,QAAQ,EACRC,aAAcE,GACdlK,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,QACP+E,MAAO,KACPG,KAAKjB,GACLhJ,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,eACP+E,MAAO,KACPG,KAAKjB,GACLhJ,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,eACP+E,MAAO,MACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,SAA4B,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAOoB,MAAK,KAAW,OAALpB,QAAK,IAALA,OAAA,EAAAA,EAAOqB,MAAK,IAAI,GACnEiH,KAAKjB,GACLgB,aAAclF,GAAU,gBACxB9E,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,gBACP+E,MAAO,OACPG,KAAKjB,GACLhJ,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,qBACP+E,MAAO,QACPG,KAAKjB,GACLhJ,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,KACPG,KAAKjB,GACLhJ,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,mBACP+E,MAAO,UACPG,KAAKjB,GACLhJ,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,QACP+E,MAAO,KACPG,KAAKjB,GACLhJ,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,aACP+E,MAAO,cACPG,KAAKjB,GACLhJ,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,WACP+E,MAAO,YACPG,KAAKjB,GACLhJ,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,WACP+E,MAAO,KACPG,KAAKjB,GACLhJ,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,cACP+E,MAAO,aACPK,SAAU,gBAAExI,EAAF,EAAEA,MAAF,EAASG,OAAT,OAAqB0C,KAAKC,UAAL,OAAe9C,QAAf,IAAeA,OAAf,EAAeA,EAAOyB,kBACrD6G,KAAKrB,GACL5I,MAAO,QACPgK,aAAc/G,KA1HtB,EAAK4G,WAAa,EAAKA,WAAW3L,KAAhB,gBAClB,EAAKuL,QAAU,EAAKA,QAAQvL,KAAb,gBAHA,E,0CAiInB,WASI,OAPAoM,IAAUC,aAAaC,aAAc,EACrCF,IAAUC,aAAaE,qBAAuB,GAC9CH,IAAUC,aAAaG,iBAAkB,EACzCJ,IAAUC,aAAaI,YAAa,EACpCL,IAAUC,aAAaK,6BAA8B,EACrDxN,KAAKuM,KAAOvM,KAAKqM,UAEV,cAAC,IAAD,CACKoB,QAASzN,KAAKyM,aACdF,KAAMvM,KAAKuM,KACXhJ,OAAQwI,IACH/L,KAAKxB,MAAM6E,W,GAhJDnF,IAAMS,WC9BpBwQ,G,kDACjB,WAAY3Q,GAAQ,uCACVA,G,0CAGV,WACI,OAAKwB,KAAKxB,MAAM8B,KAEZ,gCACI,qBAAI7B,UAAU,KAAd,UACSC,GAAO,aAAc,SAAUsB,KAAKxB,MAAMS,SAASC,UACnDR,GAAO,aAAc,SAAUsB,KAAKxB,MAAMS,SAASC,UACnDR,GAAO,aAAc,UAAWsB,KAAKxB,MAAMS,SAASC,UACpDR,GAAO,aAAc,SAAUsB,KAAKxB,MAAMS,SAASC,UACnDR,GAAO,aAAc,QAASsB,KAAKxB,MAAMS,SAASC,UAClDR,GAAO,aAAc,QAASsB,KAAKxB,MAAMS,SAASC,UAClDR,GAAO,aAAc,YAAasB,KAAKxB,MAAMS,SAASC,UACtDR,GAAO,aAAc,WAAYsB,KAAKxB,MAAMS,SAASC,UACrDR,GAAO,aAAc,QAASsB,KAAKxB,MAAMS,SAASC,UAClDR,GAAO,aAAc,QAASsB,KAAKxB,MAAMS,SAASC,aAE3D,eAAC,IAAD,WACK2O,GAAU,SAAU7N,KAAKxB,MAAM8B,MAC/BuN,GAAU,WAAY7N,KAAKxB,MAAM8B,MACjCuN,GAAU,SAAU7N,KAAKxB,MAAM8B,MAC/BuN,GAAU,SAAU7N,KAAKxB,MAAM8B,MAC/BuN,GAAU,QAAS7N,KAAKxB,MAAM8B,MAC9BuN,GAAU,UAAW7N,KAAKxB,MAAM8B,MAChCuN,GAAU,YAAa7N,KAAKxB,MAAM8B,MAClCuN,GAAU,QAAS7N,KAAKxB,MAAM8B,MAC9BuN,GAAU,QAAS7N,KAAKxB,MAAM8B,MAC/B,cAAC,EAAD,CAAaqN,KAAK,kBAAkB9P,UAAWuR,GAC3C9O,KAAQN,KAAKxB,MAAM8B,KAAM+C,MAAO,QAChC9C,OAAU,SAAC4G,GAAD,OAAOA,EAAEkI,sBA3BN,iB,GANKnR,IAAMS,WAwC1CkP,GAAY,SAACyB,EAAGhP,GAClB,IAAMqN,EAAO,aAAa2B,EAC1B,OAAO,cAAC,EAAD,CAAa3B,KAAMA,EAAM9P,UAAWuR,GACvB9O,KAAQA,EAAM+C,MAAQiM,EACtB/O,OAAU,SAAC4G,GAAD,SAASA,EAAEoI,eAAcpI,EAAEuD,QAAQvD,EAAEkI,cAAcC,MC/ChE/P,G,kDAEjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAKVgB,QAAU,WACN,MAAO,CACH,CAAC,GAAI,SAACC,GAAM,OAAO,cAAC,EAAD,CAAMa,KAAMb,EAAE6F,SACjC,CAAC,OAAQ,SAAC7F,GAAK,OAAO6K,GAAW7K,EAAE6F,OAAQ,CAAEiF,UAAW,SACxD,CAAC,WAAW,SAAC9K,GAAK,OAAO+K,GAAM/K,EAAEgL,YACjC,CAAC,QAAQ,SAAChL,GAAK,OAAO+P,GAAqB/P,EAAE6F,KAAM,KAAM,SAAU,CAAEiF,UAAW,UAChF,CAAC,MAAM,SAAC9K,GAAK,OAAO+P,GAAqB/P,EAAE6F,MAAO,KAAM,SAAU,CAAEiF,UAAW,YAZpE,EAgBnBxK,UAAY,WAER,OADWC,KAAKR,UACJS,KAAI,SAACC,EAAKC,GAClB,IAAIwC,EAASzC,EAAIM,QAAQ,EAAGN,EAAI,GAAG,GACnC,OAAQ,qBAAIyC,MAAOA,EAAX,cAAoCzC,EAAI,GAAxC,MAAyBA,EAAI,QApB1B,EAwBnBE,YAAc,WAAa,IAAD,OAClBC,EAAQL,KAAKxB,MAAM8B,KACvB,IAAKD,EAAO,MAAO,GACfL,KAAKxB,MAAM+B,QAAUP,KAAKxB,MAAM+B,OAAOC,OAAO,IAC9CH,EAAQA,EAAME,QAAO,SAACE,GAAD,OAAQ,EAAKjC,MAAM+B,OAAOG,QAAQD,EAAKE,WAAa,MAE7E,IAAIC,EAAOZ,KAAKR,UAChB,OAAOa,EAAMJ,KAAI,SAACY,EAAKV,GACnB,OAAO,6BAAgB,cAAC,GAAD,CAAuBG,KAAMO,EAAKD,KAAMA,GAAxBT,IAAvBA,OA9BpB,EAAKJ,UAAY,EAAKA,UAAUe,KAAf,gBACjB,EAAKV,YAAc,EAAKA,YAAYU,KAAjB,gBACnB,EAAKtB,QAAU,EAAKA,QAAQsB,KAAb,gBAJA,E,0CAoCnB,WACI,OACI,wBAAO6B,MAAO,CAACC,MAAO,KAAtB,UACI,uBAAOD,MAAO,CAACS,QAAS,QAAxB,SAAiC,6BAAKpD,KAAKD,gBAC3C,gCAAQC,KAAKI,uB,GA1CMlC,IAAMS,WA+CnCqC,GAAY,SAACxC,GACf,OAAOA,EAAMoC,KAAKX,KAAI,SAACC,EAAKC,GACxB,IAAIwC,EAASzC,EAAIM,QAAQ,EAAGN,EAAI,GAAG,GACnC,OAAO,oBAAIyC,MAAOA,EAAX,SAAiCzC,EAAI,GAAG1B,EAAM8B,OAAtBJ,EAAI,QAGrCoK,GAAa,SAAC7K,GAChB,IAAMuC,EAAOvC,EAAEwC,SAAWxC,EAAEE,GAC5B,OAAQ,mBAAGqC,KAAMA,EAAT,SAAgBvC,EAAEC,QAExB8K,GAAQ,SAAC/K,GACX,OAAIA,EAAEmG,KAAOnG,EAAEkG,IAAYlG,EAAEmG,IACtBnG,EAAEkG,IAAM,IAAMlG,EAAEmG,KAErB4J,GAAuB,SAAC/P,EAAGgQ,GAC7B,IAAMC,EAAOjQ,EAAEuK,eACf,OAAO0F,EAAOvN,KAAK8G,MAAMyG,EAAOD,IC7D9B1L,GAAS,CACXgB,KAAM,CACFC,WAAY,GACZC,WAAY,SACZnC,SAAU,SACV2D,aAAc,YAElBkE,MAAO,CACHxG,WAAY,GACZa,YAAa,KAIA4F,G,kDAEjB,WAAYpM,GAAQ,IAAD,8BACf,cAAMA,IACDqM,MAAQ,CACTC,UAAU,GAEd,EAAKC,aAAe,EAAKA,aAAajK,KAAlB,gBALL,E,gDAOnB,WACId,KAAKgL,SAAS,CAAEF,UAAW9K,KAAK6K,MAAMC,a,oBAG1C,WAAU,IAAD,EACCxK,EAAON,KAAKxB,MAAM8B,KAElBiE,EAAQvE,KAAKxB,MAAM+F,MACnB0G,EAAK,UAAG3K,EAAK0O,oBAAR,aAAG,EAAmB3O,MAC3B4O,EAAkB3O,EAAK2O,gBAC7B,OAAKhE,GAAUgE,EAUT,eAAC,IAAMnJ,SAAP,WACM,sBAAKnD,MAAO,CAAES,QAAQ,QAASiI,QAASrL,KAAK+K,aAA7C,UACQ,qBAAKvI,IAAI,2BACT,sBAAMG,MAAOoB,GAAOgB,KAApB,SAA2BR,OAEnC,sBAAK5B,MAAOoB,GAAO4G,MAAnB,UACM3K,KAAK6K,MAAMC,UAAa,cAAC,GAAD,CAAYxK,KAAM2K,IAC1CjL,KAAK6K,MAAMC,UAAa,cAAC,GAAD,CAAUxK,KAAM2O,UAfpD,cAAC,IAAMnJ,SAAP,UACM,sBAAKnD,MAAO,CAAES,QAAQ,QAAtB,UACI,qBAAKT,MAAO,CAAEC,MAAO,MACrB,sBAAMD,MAAOoB,GAAOgB,KAApB,SAA2BR,a,GAxBRrG,IAAMS,WCf3CoF,GAAS,CACXC,KAAM,CACFC,SAAU,WACVa,QAAS,OACT1B,QAAS,QACTR,MAAO,OACPC,OAAQ,OACRuB,WAAY,WAYLC,GARE,SAAC,GAAqG,EAApGC,aAAqG,IAAvFC,EAAsF,EAAtFA,MAAyBjE,GAA6D,EAA/EkE,SAA+E,EAArEC,OAAqE,EAA7DnE,MAA6D,EAAvDoE,OAAuD,EAA/CC,SAA+C,EAArCC,WAAqC,EAAzBC,oBAC1F,OACI,qBAAKlC,MAAOoB,GAAOC,KAAnB,SACI,cAAC,GAAD,CAAe1D,KAAMA,EAAMiE,MAAOA,OCJxCqH,GAAU,SAAC,GAAyB,IAAxB7C,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAGyC,EAAiB,EAAjBA,YAChBC,EAAK3C,GAAG,EACR4C,EAAK3C,GAAG,EACZ,OAAG0C,EAAKC,EAAWF,EAAc,GAAK,EACnCC,EAAKC,EAAWF,GAAe,EAAI,EAC/B,GAGLM,GAAiB,WAAO,IACpBC,EAAShN,OAAOC,SAAhB+M,KACK,KAATA,GACFC,YAAW,WACT,IAAMtM,EAAKqM,EAAKE,QAAQ,IAAK,IACvBC,EAAUzI,SAASC,eAAehE,GACpCwM,GAASA,EAAQC,mBACpB,MAIc7M,G,kDAEjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAKV6N,QAAW,WAAa,IAAD,OACf/L,EAAON,KAAKxB,MAAM8B,KAItB,OAHIN,KAAKxB,MAAM+B,SACXD,EAAOA,EAAKC,QAAO,SAAC4G,GAAD,OAAK,EAAK3I,MAAM+B,OAAO4G,OAEvC7G,GAXQ,EAcnBmM,WAAc,WACV,IAAI5I,EAAI,EACR,MAAO,CACH,CACIlE,GAAIkE,IACJ8D,MAAO,SACP+E,MAAO,GACPC,QAAQ,EACRC,aAAcvI,EACdwI,KAAKjB,GACLhJ,MAAO,QAEX,CACIjD,GAAIkE,IACJ8D,MAAO,OACP+E,MAAO,OACPC,QAAQ,EACRC,aAAcE,GACdlK,MAAO,SAEX,CACIjD,GAAIkE,IACJ8D,MAAO,QACP+E,MAAO,WACPG,KAAKjB,GACLhJ,MAAO,WArCf,EAAK6J,WAAa,EAAKA,WAAW3L,KAAhB,gBAClB,EAAKuL,QAAU,EAAKA,QAAQvL,KAAb,gBAHA,E,0CA6CnB,WAQI,OAPAvD,QAAQC,IAAIwC,KAAKxB,OACjB0O,IAAUC,aAAaC,aAAc,EACrCF,IAAUC,aAAaE,qBAAuB,GAC9CH,IAAUC,aAAaG,iBAAkB,EACzCJ,IAAUC,aAAaI,YAAa,EACpCL,IAAUC,aAAaK,6BAA8B,EAE9C,cAAC,IAAD,CACKC,QAASzN,KAAKyM,aACdF,KAAMvM,KAAKqM,UACX9I,OAAQwI,S,GA1DO7N,IAAMS,WC1BpBwQ,G,kDACjB,WAAY3Q,GAAQ,uCACVA,G,0CAGV,WACI,OAAKwB,KAAKxB,MAAM8B,KAEZ,gCACI,qBAAI7B,UAAU,KAAd,UACSC,GAAO,QAAS,WAAYsB,KAAKxB,MAAMS,SAASC,UAChDR,GAAO,QAAS,MAAOsB,KAAKxB,MAAMS,SAASC,UAC3CR,GAAO,QAAS,MAAOsB,KAAKxB,MAAMS,SAASC,UAC3CR,GAAO,QAAS,MAAOsB,KAAKxB,MAAMS,SAASC,aAEpD,eAAC,IAAD,WACI,cAAC,EAAD,CAAayO,KAAK,WAAW9P,UAAW8R,GACpCrP,KAAQN,KAAKxB,MAAM8B,KAAM+C,MAAO,MAChC9C,OAAU,SAAC4G,GAAD,MAAkB,aAAZA,EAAElF,YAEtB,cAAC,EAAD,CAAa0L,KAAK,WAAW9P,UAAW8R,GACpCrP,KAAQN,KAAKxB,MAAM8B,KAAM+C,MAAO,MAChC9C,OAAU,SAAC4G,GAAD,MAAkB,aAAZA,EAAElF,YAEtB,cAAC,EAAD,CAAa0L,KAAK,WAAW9P,UAAW8R,GACpCrP,KAAQN,KAAKxB,MAAM8B,KAAM+C,MAAO,MAChC9C,OAAU,SAAC4G,GAAD,MAAkB,aAAZA,EAAElF,YAEtB,cAAC,EAAD,CAAa0L,KAAK,gBAAgB9P,UAAW8R,GACzCrP,KAAQN,KAAKxB,MAAM8B,KAAM+C,MAAO,WAChC9C,OAAU,SAAC4G,GAAD,MAAkB,kBAAZA,EAAElF,kBAxBL,iB,GANK/D,IAAMS,WCD3BiD,G,kDAEjB,WAAYpD,GAAQ,uCACVA,G,0CAGV,WAAU,IAAD,EAEewB,KAAKxB,MAAlB8B,EAFF,EAEEA,KAAMyB,EAFR,EAEQA,KAEP6N,EAAKtP,EAAKuP,QACVlO,EAAOiO,EAAGlQ,KACVS,EAAQG,EAAKwP,QACbtN,EAAMC,GAAOd,GAEboO,EAAKH,EAAGI,UAAYjO,EAAO,GAC3BkO,EAAKL,EAAGM,WAAanO,EAAO,GAE9B6B,EAAIE,GAAY3D,EAAOyP,EAAIG,EAAIE,EAAIlO,GACnCY,EAAQ,CAAE8E,OAAO,GAAD,OAAK7D,EAAExC,EAAP,kBAAkBwC,EAAEzC,EAApB,MAA2ByB,MAAM,GAAD,OAAKgB,EAAEuM,EAAP,MAAc/M,QAAS,SAE3E,OAAO,qBAAKT,MAAO,CAAEC,MAAM,GAAD,OAAImN,EAAJ,MAAYlN,OAAO,GAAD,OAAIoN,EAAJ,MAAYnN,SAAU,SAC9CmB,SAAU,WAAYmM,KAAMpQ,KAAKxB,MAAM2C,EAAGkP,IAAKrQ,KAAKxB,MAAM4C,GADvE,SAGK,qBAAKoB,IAAKA,EAAKG,MAAOA,U,GAxBRzE,IAAMS,WA4B9B8D,GAAS,SAACd,GACZ,GAAKA,EACL,MAAO,aAAaA,EAAK,QAEvBmC,GAAc,SAACD,EAAG+L,EAAIG,EAAIE,EAAIlO,GAChC,IAAIoO,EAAIP,EAAGhN,MAAQb,EAAO,GACtBa,EAAQgN,EAAGhN,MAAQgN,EAAGI,UACtB7O,GAAM0C,EAAIjB,EAAQmN,EAEtB,MAAO,CAAC5O,IAAGC,IADAyC,EAAIoM,EAAK9O,GAAKyB,EACXuN,MCrCDhB,G,kDACjB,WAAY3Q,GAAQ,IAAD,8BACf,cAAMA,IAEV4B,YAAc,SAAUE,EAAMyB,GAC1B,IAAI4F,EAAQrH,EAAKqH,MACjB,OAAKA,EAEEA,EAAM1H,KAAI,SAACY,EAAKV,GACnB,OAAO,cAAC,GAAD,CAAuBG,KAAMO,EAAKyP,OAAQhQ,EAAKiQ,UAAWnP,EAAGjB,EAAO4B,KAAMA,GAA1D5B,MAHR,IALJ,EAWnBqQ,oBAAsB,SAAUlQ,EAAMyB,GAAO,IAAD,OACpC0O,EAAK,OAAGnQ,QAAH,IAAGA,OAAH,EAAGA,EAAMmQ,MAClB,OAAKA,EAEEA,EAAMxQ,KAAI,SAACY,EAAKV,GAAS,IAAD,IAC3B,IAAKU,EAAIyE,KAAM,MAAO,GACtB,IAAM3C,EAAQ,CACVqC,WAAYnE,EAAIM,GAAKN,EAAI+B,MAAQ,IAAI,EACrC2L,UAAW1N,EAAIO,GAAKP,EAAIgC,OAAS,IAAI,EACrCoB,SAAU,YAQd,OANI,YAAKzF,MAAMS,gBAAX,eAAqB+M,OAAQ,IAAInL,EAAI6P,aACrC/N,EAAM5B,OAAS,qBAEf,YAAKvC,MAAMS,gBAAX,eAAqB+M,OAAQ,IAAInL,EAAInB,OACrCiD,EAAM5B,OAAS,oBAGf,qBAAkB4B,MAAOA,EAAzB,SACI,cAAC,EAAD,CAAMrC,KAAMO,EAAIyE,KAAKqL,SAAS,GAAI5O,KAAMA,EAAMD,aAAa,UADpD3B,MAhBA,IAbJ,E,0CAmCnB,WACG,IAAIG,EAAON,KAAKxB,MAAM8B,KAClBsQ,EAAyB5Q,KAAKxB,MAAMoS,uBACpC7O,EAAO/B,KAAKxB,MAAMuD,MAAQ,GAE9B,IAAKzB,EACD,MAAO,aAKX,IAAIsC,EAAQb,EAAOzB,EAAKsC,MACpBC,EAASd,EAAOzB,EAAKuC,OAEzB,OACK,sBAAKF,MAAO,CAACkO,gBAAgB,QAASjO,MAAMA,EAAOC,OAAOA,EAAQoB,SAAS,YAA3E,UACKjE,KAAKI,YAAYE,EAAMyB,GACvB6O,GAA0B,qBAAKjO,MAAO,CAACsB,SAAU,YAAvB,SAAqCjE,KAAKwQ,oBAAoBlQ,EAAKwQ,aAAc/O,Y,GArDlF7D,IAAMS,WA0D1CqC,GAAY,SAACxC,GAAW,IACnB8B,EAAyB9B,EAAzB8B,KAAMgQ,EAAmB9R,EAAnB8R,OAAQlP,EAAW5C,EAAX4C,EAAGW,EAAQvD,EAARuD,KACxB,OAAOzB,EAAKL,KAAI,SAAC8Q,EAAM5Q,GAAP,OAAiB,cAAC,GAAD,CAAYG,KAAMyQ,EAAMT,OAAQA,EAAQnP,EAAGhB,EAAM4B,EAAMX,EAAGA,EAAEW,EAAMA,KAAMA,GAAY5B,OAEnH6Q,GAAa,SAACxS,GAAW,IACpB8B,EAA4B9B,EAA5B8B,KAAMgQ,EAAsB9R,EAAtB8R,OAAQnP,EAAc3C,EAAd2C,EAAGC,EAAW5C,EAAX4C,EAAGW,EAAQvD,EAARuD,KAC3B,OAAOuO,EACE/P,QAAO,SAAC0Q,GAAD,OAAKA,EAAEjE,WACdzM,QAAO,SAAC0Q,GAAD,OAAMA,EAAEvR,KAAKN,WAAW,eAC/Ba,KAAI,SAACgR,GAAD,OAAO3Q,EAAK2Q,EAAEvR,SAClBa,QAAO,SAAC2Q,GAAD,OAAMA,KACbjR,KAAI,SAACiR,EAAI/Q,GACd,OAAO,cAAC,GAAD,CAASG,KAAM4Q,EAAI/P,EAAGA,EAAGC,EAAGA,EAAGW,KAAMA,GAAY5B,OCrE3CgP,G,kDACjB,WAAY3Q,GAAQ,IAAD,8BACf,cAAMA,IAEV4B,YAAc,SAAUE,EAAMyB,GAC1B,IAAI6M,EAAOtO,EAAKsO,KAChB,OAAKA,EAEEA,EAAK3O,KAAI,SAACY,EAAKV,GAClB,IAAIwC,EAAQ,CACRsB,SAAU,WACV4M,gBAAiB,QACjBT,MAAOvP,EAAIM,EAAIb,EAAKa,GAAKY,EACzBsO,KAAMxP,EAAIO,EAAId,EAAKc,GAAKW,EACxBa,MAAO/B,EAAIyE,KAAK1C,MAAQb,EACxBc,OAAQhC,EAAIyE,KAAKzC,OAASd,GAExBC,EAAO,QAAUnB,EAAIlB,GAC3B,OACI,cAAC,IAAD,CAAMgD,MAAOA,EAAOU,MAAOxC,EAAIlB,GAAgBb,GAAIkD,EAAnD,SACM7B,EAAM,GAAM,cAAC,GAAD,CAAUG,KAAQO,EAAIyE,KAAMvD,KAAQA,KADd5B,MAb9B,IALH,E,0CAwBnB,WAAU,IAAD,EAC0BH,KAAKxB,MAA7B2S,EADF,EACEA,UAAWlS,EADb,EACaA,SACnB5B,EAAM2C,KAAKxB,OACX,IAAII,EAAUK,EAASC,SAASkS,UAAU,UAAU5Q,QAC/C5B,IACDA,EAAU,UAGd,IAAI0B,EAAO6Q,EAAUE,YAAYzS,GACjC,IAAK0B,EAAO,MAAO,aACnBjD,EAAMiD,GAEN,IAAMyB,EAAQzB,EAAKsO,KAAKpO,OAAS,IAAO,EAC1BF,EAAKsO,KAAKpO,OAAU,GAAM,EAC1BF,EAAKsO,KAAKpO,OAAW,EAAK,EAC3B,GAEb,OACK,qBAAKmC,MAAO,CAAEsB,SAAS,YAAvB,SACKjE,KAAKI,YAAYE,EAAMyB,S,GA5CE7D,IAAMS,WCC3B2S,G,kDACjB,WAAY9S,GAAQ,IAAD,8BACf,cAAMA,IAEV+S,gBAAkB,SAAUjR,EAAMpB,GAC9B,IAAIsS,EAAWlR,EAAKkR,SACpB,OAAKA,EAEEA,EAASvR,KAAI,SAACY,EAAKV,GACtB,OAAOzB,GAAO,UAAWmC,EAAIlB,GAAIT,EAAU2B,EAAIlB,GAAG,KAAKkB,EAAI+N,KAAKpO,OAAO,QAHrD,IALP,E,0CAWnB,WAAU,IAAD,EACiCR,KAAKxB,MAAnC8B,EADH,EACGA,KAAM6Q,EADT,EACSA,UAAWlS,EADpB,EACoBA,SACrBgB,EAAMhB,EAASC,SAASkS,UAAU,QAAQ5Q,QAC9C,OAAKF,EAGD,gCACI,oBAAI7B,UAAU,KAAd,SACKuB,KAAKuR,gBAAgBJ,EAAWlS,EAASC,YAE9C,eAAC,IAAD,YACMe,GAAO,cAAC,GAAD,CAAWK,KAASA,EAAO6Q,UAAcA,IAClD,cAAC,EAAD,CAAYxD,KAAK,SAAS9P,UAAW4T,GAAWnR,KAASA,EAAO6Q,UAAcA,IAC9E,cAAC,GAAD,CAAU7Q,KAASA,EAAKL,GAAO2Q,uBAAuB,eAVhD,iB,GAfQ1S,IAAMS,WCOnBJ,G,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAKVkT,iBAAiB,SAACC,GAChB,IAAIC,EAAc,CAACC,SAAS,GAC5B,EAAKC,gBAAgBH,EAAUI,4BAA6B,iBAAkBH,GAC9E,EAAKE,gBAAgBH,EAAUK,mBAAoB,QAASJ,GAC5D,EAAKE,gBAAgBH,EAAUM,6BAA8B,kBAAmBL,GAChF,EAAKE,gBAAgBH,EAAUO,sBAAuB,WAAYN,GAClE,EAAKE,gBAAgBH,EAAUQ,uBAAwB,YAAaP,IAZnD,EAgBnBE,gBAAgB,SAACM,EAAU1S,EAAMkS,GAC/B,IAAMS,EAAI,eACVT,EAAYC,UAAUO,EAAS5R,OAC/B4R,EAASvK,SAAQ,SAAC8F,GACd0E,EAAKC,YAAY3E,EAAKzB,QAAQ,IAAI,KAAMxM,EAAM2S,EAAMT,OApBvC,EAwBnBW,eAAiB,SAACC,EAAQ/R,EAAMyN,GAAU,IAAD,MAC/B,OAANsE,QAAM,IAANA,GAAA,UAAAA,EAAQxM,uBAAR,SAAyB6B,SAAQ,SAACV,GAAD,OAAK,EAAKsL,cAActL,EAAG1G,EAAMyN,EAAM,gBAClE,OAANsE,QAAM,IAANA,GAAA,UAAAA,EAAQtM,wBAAR,SAA0B2B,SAAQ,SAACV,GAAD,OAAK,EAAKsL,cAActL,EAAG1G,EAAMyN,EAAM,gBACnE,OAANsE,QAAM,IAANA,GAAA,UAAAA,EAAQrM,wBAAR,SAA0B0B,SAAQ,SAACV,GAAD,OAAK,EAAKsL,cAActL,EAAG1G,EAAMyN,EAAM,iBA3B1D,EA6BnBwE,QAAU,SAACjS,EAAMkS,EAAWzE,EAAMC,GAAS,IAElCxO,EAAqDc,EAArDd,GAAID,EAAiDe,EAAjDf,KAAMiB,EAA2CF,EAA3CE,SAAU2B,EAAiC7B,EAAjC6B,OAAQgB,EAAyB7C,EAAzB6C,YAAarB,EAAYxB,EAAZwB,SAE9C,MAAO,CAACtC,KAAID,OAAMiB,WAAU2B,SAAQgB,cAAa+B,OADbsN,EAA/BtN,OACoDG,SADrBmN,EAAvBnN,SACsDD,UAD/BoN,EAAbpN,UACuD2I,OAAMC,MAAKlM,aAjC1E,EAmCnBwQ,cAAgB,SAACE,EAAWlS,EAAMyN,EAAMC,GACpCwE,EAAUrN,KAAO,EAAKsN,KAAKhE,KAAKiE,WAAWF,EAAUA,WACrDA,EAAUrN,KAAK2F,MAAQ0H,EAAUrN,KAAK2F,OAAO,GAC7C,IAAM6H,EAAO,EAAKJ,QAAQjS,EAAMkS,EAAWzE,EAAMC,GACjDwE,EAAUrN,KAAK2F,MAAMM,KAAKuH,IAvCX,EAyCnBC,gBAAkB,SAACpS,GAChB,MAA2B,OAAvBA,EAASb,WAA4B,cACd,SAAvBa,EAASb,WAA8B,UAAYa,EAASd,cAAgB,IACzE,iBA5CS,EA8CnBmT,mBAAqB,SAAC3I,GACnB,OAAIA,EAAQkF,cAAgBlF,EAAQK,MAAe,aAAeL,EAAQgF,aAAe,IACrFhF,EAAQ4I,WAAmB,iBAC3B5I,EAAQ3K,KAAKwT,OAAO,GAAG/T,eAAe,IAAY,YAClDkL,EAAQ3K,KAAKwT,OAAO,GAAG/T,eAAe,IAAY,YAC/C,aAnDS,EAqDnBgU,cAAgB,SAAC1T,GACb,OAAOA,EAAE6D,aACL,IAAK,YAAa,OAAS,EAC3B,IAAK,gBAAiB,OAAS,EAC/B,IAAK,OAAQ,OAAS,EACtB,IAAK,QAAS,OAAS,EACvB,QAAS,OAAO,IA3DL,EAmLnBgP,YAAY,SAACc,EAAU1T,EAAM2S,EAAMT,GAC/ByB,MAAMD,EAAS,QACd,CACGE,QAAU,CACV,eAAgB,mBAChB,OAAU,sBAGbC,MAAK,SAASC,GACX,OAAOA,EAASC,UAEnBF,MAAK,SAAAE,GACJpB,EAAKO,KAAKlT,GAAQ2S,EAAKO,KAAKlT,IAAO,GACnC2S,EAAKO,KAAKlT,GAAQ2S,EAAKO,KAAKlT,GAAMgU,OAAOD,GACzC7B,EAAYC,WACgB,GAAxBD,EAAYC,WACZQ,EAAKsB,WACLtB,EAAKrH,SAASqH,EAAKO,WAlMzB,EAAK/H,MAAM,GACX,EAAK+H,KAAK,GAHK,E,4CA+DnB,WAAW,IAAD,OACN5S,KAAK4S,KAAKhE,KAAO,GAEjB5O,KAAK4S,KAAKhE,KAAKiE,WAAa7S,KAAK4S,KAAKgB,gBAAgB9K,QAAO,SAAC+K,EAAKpT,GAAN,OAAezC,OAAOC,OAAO4V,EAAd7V,OAAA,IAAAA,CAAA,GAAsByC,EAAKd,GAAKc,MAAS,IACrHT,KAAK4S,KAAKhE,KAAKkF,WAAa9T,KAAK4S,KAAKmB,eAAejL,QAAO,SAAC+K,EAAKpT,GAAN,OAAezC,OAAOC,OAAO4V,EAAd7V,OAAA,IAAAA,CAAA,GAAsByC,EAAKd,GAAKc,MAAS,IACpHT,KAAK4S,KAAKhE,KAAK1D,UAAYlL,KAAK4S,KAAK1H,UAAUpC,QAAO,SAAC+K,EAAKpT,GAAN,OAAezC,OAAOC,OAAO4V,EAAd7V,OAAA,IAAAA,CAAA,GAAsByC,EAAKd,GAAKc,MAAS,IAC9GT,KAAK4S,KAAKhE,KAAKvO,MAAQL,KAAK4S,KAAKvS,MAAMyI,QAAO,SAAC+K,EAAKpT,GAAN,OAAezC,OAAOC,OAAO4V,EAAd7V,OAAA,IAAAA,CAAA,GAAsByC,EAAKd,GAAKc,MAAS,IACtGT,KAAK4S,KAAKhE,KAAK+B,SAAW3Q,KAAK4S,KAAKjC,SAAS7H,QAAO,SAAC+K,EAAKpT,GAAN,OAAezC,OAAOC,OAAO4V,EAAd7V,OAAA,IAAAA,CAAA,GAAsByC,EAAKd,GAAKc,MAAS,IAC5GT,KAAK4S,KAAKhE,KAAKoF,YAAc,GAE7BhW,OAAOoH,OAAOpF,KAAKxB,MAAMoQ,MAAM/G,SAAQ,SAAC5H,GAAO,IAAD,IAC1CA,EAAIgC,SAAW,QACf,UAAAhC,EAAI6Q,oBAAJ,mBAAkBL,aAAlB,SAAyB5I,SAAQ,SAAC4I,GAC9B,IAAMvQ,GAAOuQ,EAAMC,YAAcD,EAAM/Q,MAAML,cAC7CoR,EAAMnL,KAAO,EAAKsN,KAAKhE,KAAKoF,YAAY9T,IAAM,CAAE0O,KAAK,GAAI+B,SAAU,IACnEF,EAAMnL,KAAKpF,IAAMA,EACjBuQ,EAAMnL,KAAKsJ,KAAKrD,KAAKtL,GACrB,EAAK2S,KAAKhE,KAAKoF,YAAY9T,GAAOuQ,EAAMnL,WAIhDtF,KAAK4S,KAAKvS,MAAMwH,SAAQ,SAACpH,EAAMN,GACvB,EAAKyS,KAAKhE,KAAKvO,MAAMI,EAAKd,KAAOc,GACjClD,QAAQ0W,KAAK,+BAAiCxT,EAAKd,GAAK,KACxDpC,QAAQ0W,KAAKxT,GACb,EAAKmS,KAAKvS,MAAM6T,OAAO/T,EAAO,GAAG,KAEjCM,EAAK6C,YAAc7C,EAAK6C,aAAa,WACrC7C,EAAKyC,OAAS,EAAKiQ,cAAc1S,GACjCA,EAAKsN,aAAe,EAAK6E,KAAKhE,KAAKkF,WAAWrT,EAAKE,UACnDF,EAAKwB,SAAS,EAAK8Q,gBAAgBtS,EAAKsN,cACxCtN,EAAKuJ,eAAeF,GAAcrJ,EAAuC,UAAjCA,EAAKsN,aAAalO,eAE1D,EAAK0S,eAAe9R,EAAKsF,YAAatF,EAAM,eAC5C,EAAK8R,eAAe9R,EAAKwF,UAAWxF,EAAM,aAC1C,EAAK8R,eAAe9R,EAAK8F,kBAAmB9F,EAAM,qBAClD,EAAK8R,eAAe9R,EAAK4F,WAAY5F,EAAM,cAC3C,EAAK8R,eAAe9R,EAAK+F,UAAW/F,EAAM,iBAGlDT,KAAK4S,KAAKvS,MAAQL,KAAK4S,KAAKvS,MAAME,QAAO,SAAC4G,GAAD,OAAKA,KAE9CnH,KAAK4S,KAAKjC,SAAS9I,SAAQ,SAACwC,EAASlK,GACjC,GAAI,EAAKyS,KAAKhE,KAAK+B,SAAStG,EAAQ1K,KAAO0K,EACvC5M,GAAU,WACNF,QAAQ0W,KAAK,kCAAoC5J,EAAQ1K,GAAK,KAC9DpC,QAAQ0W,KAAK5J,MAEjB,EAAKuI,KAAKjC,SAASuD,OAAO/T,EAAO,GAAG,OACjC,CAAC,IAAD,EACHkK,EAAQnH,OAASmH,EAAQwE,QAAS,EAAI,EACtCxE,EAAQ2E,aAAe,EAAK4D,KAAKhE,KAAK1D,UAAUb,EAAQ4I,YACpD5I,EAAQ2E,eACR3E,EAAQ2E,aAAa/D,MAAQZ,EAAQ2E,aAAa/D,OAAO,GACzDZ,EAAQ2E,aAAa/D,MAAMM,KAAKlB,IAEpCA,EAAQpI,SAAW,EAAK+Q,mBAAmB3I,GAC3C,EAAKkI,eAAelI,EAAQpE,UAAWoE,EAAS,aAChD,EAAKkI,eAAelI,EAAQ9D,kBAAmB8D,EAAS,qBACxD,EAAKkI,eAAelI,EAAQhE,WAAYgE,EAAS,cAEjDA,EAAQ4E,gBAAkB,GAE1B,IAK0F,EALtFkF,EAAiB,EAAKvB,KAAKhE,KAAKoF,YAAY3J,EAAQ1K,GAAGN,eAK3D,GAJI8U,IACAA,EAAexD,SAASpF,KAAKlB,GAC7BA,EAAQ4E,gBAAgB1D,KAAK4I,IAE7B9J,EAAQ+J,aAAe,UAAA/J,EAAQ+J,kBAAR,eAAoB/U,gBAAiBgL,EAAQ1K,GAAGN,eACvE8U,EAAiB,EAAKvB,KAAKhE,KAAKoF,YAAf,UAA2B3J,EAAQ+J,kBAAnC,aAA2B,EAAoB/U,kBAE5D8U,EAAexD,SAASpF,KAAKlB,GAC7BA,EAAQ4E,gBAAgB1D,KAAK4I,IAGrC1W,GAAU,WACgC,GAAlC4M,EAAQ4E,gBAAgBzO,SACvBjD,QAAQ0W,KAAK,yBACb1W,QAAQ0W,KAAK5J,WAK9BrK,KAAK4S,KAAKjC,SAAW3Q,KAAK4S,KAAKjC,SAASpQ,QAAO,SAAC4G,GAAD,OAAKA,KAEpDnH,KAAK4S,KAAK1H,UAAUrD,SAAQ,SAACyD,GACrBA,EAASjL,MAAMwH,SAAQ,SAACpH,GACpBA,EAAK6K,SAASA,EACd7K,EAAK6E,KAAO,EAAKsN,KAAKhE,KAAKvO,MAAMI,EAAK4T,QACtC5T,EAAK6E,KAAK4F,UAAUzK,EAAK6E,KAAK4F,WAAW,GACzCzK,EAAK6E,KAAK4F,UAAUK,KAAK9K,SAIrCT,KAAK4S,KAAKgB,gBAAgB/L,SAAQ,SAAC8K,GAC/BA,EAAUzP,OAAS,EACnByP,EAAU1Q,SAAS,kBAEvBjC,KAAKxB,MAAM2S,UAAUK,SAAS3J,SAAQ,SAACjJ,GACnCA,EAAQqD,SAAW,UACnBrD,EAAQgQ,KAAK/G,SAAQ,SAAC5H,GAClBA,EAAIqF,KAAO,EAAK9G,MAAMoQ,KAAK3O,EAAIN,IAC3BM,EAAIqF,KAAKgP,aAAgBrU,EAAIqF,KAAKgP,YAAY3U,IAAMf,EAAQe,GAC5DlC,GAAU,WACNF,QAAQ0W,KAAR,eAAqBhU,EAAIN,GAAzB,oCAAuDM,EAAIqF,KAAKgP,YAAY3U,GAA5E,aAAmFf,EAAQe,SAG/FM,EAAIqF,KAAKiP,cAAgBtU,EACzBA,EAAIqF,KAAKgP,YAAc1V,SAKnCoB,KAAK4S,KAAKjC,SAAS9D,MAAK,SAAC9D,EAAEC,GAAH,OAAUD,EAAErJ,KAAK8U,cAAcxL,EAAEtJ,W,+BAyB7D,WACGrC,EAAM2C,KAAKxB,OACXwB,KAAK0R,iBAAiB1R,KAAKxB,MAAMmT,a,oBAGpC,WACI,OAAK3R,KAAK6K,MAAMxK,MAEZ,gCACI,cAAC,IAAD,UACI,cAAC,EAAD,MAEJ,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOoU,OAAK,EAAC9G,KAAK,IAAI9P,UAAW6W,IACjC,cAAC,EAAD,CAAY/G,KAAK,SAAS9P,UAAW+P,GAAWtN,KAASN,KAAK6K,MAAMxK,QACpE,cAAC,EAAD,CAAYsN,KAAK,cAAc9P,UAAW8W,GAAgBrU,KAASN,KAAK6K,MAAM+I,kBAC9E,cAAC,EAAD,CAAYjG,KAAK,YAAY9P,UAAWsR,GAAc7O,KAASN,KAAK6K,MAAM8F,WAC1E,cAAC,EAAD,CAAYhD,KAAK,cAAc9P,UAAW+W,EAAqBtU,KAASN,KAAK6K,MAAMkJ,iBACnF,cAAC,EAAD,CAAYpG,KAAK,OAAO9P,UAAWgX,GAASvU,KAASN,KAAK6K,MAAM8F,WAChE,cAAC,EAAD,CAAYhD,KAAK,OAAO9P,UAAWiX,GAASxU,KAASN,KAAKxB,MAAMoQ,KAAOuC,UAAcnR,KAAKxB,MAAM2S,kBAd9E,cAAC,EAAD,Q,GAhNJjT,IAAMS,W,6BCXzB,SAASoW,GAAYC,EAAGtV,GACnC,IAAIO,EAAM,CACNP,OACAuV,WAAY,GACZC,SAAU,GACV5E,OAAQ,GACRC,UAAW,GACXO,aAAc,CACNL,MAAO,GACP7P,KAAM,GACNuU,UAAW,GACXC,MAAO,KAwBnB,MArBc,WAAVJ,EAAEtV,OACFsV,EAAIA,EAAEK,SAAS,IAEL,OAAVL,EAAEtV,MACFsV,EAAEK,SAASxN,SAAQ,SAACV,GACF,eAAVA,EAAEzH,KAkBlB,SAA2BsV,EAAG/U,GAAM,IAAD,EAE/B,UAAA+U,EAAEK,gBAAF,SAAYxN,SAAQ,SAACV,GAEjB,OAAOA,EAAEmO,WAAWpH,MAChB,IAAK,QACHjO,EAAI6Q,aAAaL,MAAMlF,KAcrC,SAAkBpE,EAAGlH,GAAM,IAAD,SAClB,UAAAkH,EAAEkO,gBAAF,eAAY7U,QAAO,IAClBjD,QAAQ0W,KAAK,2BACb1W,QAAQ0W,KAAK9M,IAIlB,IAAIsJ,EAAK,uCACFtJ,EAAEmO,YADA,UAEFnO,EAAEkO,SAAS,UAFT,aAEF,EAAeC,YAFb,IAGL1S,MAAOuE,EAAEmO,WAAW1S,MAAQ,EAC5BC,OAAQsE,EAAEmO,WAAWzS,OAAS,EAC9B1B,EAAGgG,EAAEmO,WAAWnU,EAAI,EACpBC,EAAG+F,EAAEmO,WAAWlU,EAAI,IA4BxB,OA1BA,UAAA+F,EAAEkO,SAAS,UAAX,mBAAeA,gBAAf,SAAyBxN,SAAQ,SAACyH,GAC9B7R,GAAU,WAAO,IAAD,EACRgT,EAAMnB,EAAEgG,WAAW5V,QACnBnC,QAAQ0W,KAAK,2BAA6B3E,EAAEgG,WAAW5V,KAAO,MAC9DnC,QAAQ0W,KAAKxD,EAAMnB,EAAEgG,WAAW5V,OAChCnC,QAAQ0W,KAAK3E,IAEH,YAAVA,EAAE5P,OACDnC,QAAQ0W,KAAK,qBACb1W,QAAQ0W,KAAK3E,KAElB,UAAIA,EAAE+F,gBAAN,aAAI,EAAY7U,UACXjD,QAAQ0W,KAAK,4BACb1W,QAAQ0W,KAAK3E,KAEqF,GAAnG,CAAC,aAAc,WAAY,cAAe,SAAU,MAAO,SAAS5O,QAAQ4O,EAAEgG,WAAW5V,QACxFnC,QAAQ0W,KAAK,qBACb1W,QAAQ0W,KAAK3E,IAEdtR,OAAO4C,KAAK0O,EAAEgG,YAAY/U,QAAO,SAAAY,GAAC,OAAK,CAAC,OAAQ,QAAS,QAAQoU,SAASpU,MAAIX,SAC7EjD,QAAQ0W,KAAK,qBACb1W,QAAQ0W,KAAK3E,OAGtBmB,EAAMnB,EAAEgG,WAAW5V,MAAQ4P,EAAEgG,WAAW/Q,SAErCkM,EAvD+B+E,CAASrO,IACrC,MACF,IAAK,OACHlH,EAAI6Q,aAAalQ,KAAK2K,KAAKpE,GAC3B,MACF,IAAK,YACHlH,EAAI6Q,aAAaqE,UAAU5J,KAAKpE,GAChC,MACF,QACElH,EAAI6Q,aAAasE,MAAM7J,KAAKpE,OAhC1BsO,CAAkBtO,EAAGlH,GACJ,SAAVkH,EAAEzH,KA4GzB,SAAoByH,EAAGlH,EAAKP,GACxBjC,GAAU,kBAbd,SAAyB0J,EAAGlH,EAAKP,GACzBO,EAAI2C,OAAU3C,EAAI2C,OAASuE,EAAEmO,WAAW1S,OACxCrF,QAAQ0W,KAAKvU,EAAO,yBAA2BO,EAAI2C,MAAQ,KAAOuE,EAAEmO,WAAW1S,MAAQ,KACvF3C,EAAI4C,QAAW5C,EAAI4C,QAAUsE,EAAEmO,WAAWzS,QAC1CtF,QAAQ0W,KAAKvU,EAAO,yBAA2BO,EAAI4C,OAAS,KAAOsE,EAAEmO,WAAWzS,OAAS,KACzF5C,EAAIqQ,OAAOnJ,EAAEmO,WAAW5V,OACxBnC,QAAQ0W,KAAKvU,EAAO,wBAA0ByH,EAAEmO,WAAW5V,MAEtC,GAArByH,EAAEkO,SAAS7U,QACXjD,QAAQ0W,KAAKvU,EAAO,qBAAuByH,EAAEmO,WAAW5V,MAI5CgW,CAAgBvO,EAAGlH,EAAKP,MACxCO,EAAIsQ,UAAUhF,KAAK,CACf7L,KAAMyH,EAAEmO,WAAW5V,KAAKL,cACxB2N,QAAkC,KAAxB7F,EAAEmO,WAAWtI,UAE3B/M,EAAI2C,MAAQuE,EAAEmO,WAAW1S,MAAQ,EACjC3C,EAAI4C,OAASsE,EAAEmO,WAAWzS,OAAS,EACnC,IACI,IAAI8S,EAAUxO,EAAEkO,SAAS,GAAG9Q,MAExBqR,EADUC,KAAKF,GACIpT,MAAM,IAAItC,KAAI,SAACkB,GAAD,OAAOA,EAAE2U,WAAW,MACrDC,EAAU,IAAIC,WAAWJ,GACvBvT,EAAM4T,KAAKC,QAAQH,GACzB9V,EAAIqQ,OAAOnJ,EAAEmO,WAAW5V,KAAKL,eAAiB,IAAI8W,YAAY9T,EAAI+T,QACpE,MAAOC,GACL9Y,QAAQC,IAAI6Y,IA3HJC,CAAWnP,EAAGlH,EAAKP,GACF,WAAVyH,EAAEzH,KA6EzB,SAAsByH,EAAGlH,EAAKP,GAC1B,IAAImQ,EAAU,CAGVhN,OAAQsE,EAAEkO,SAAS,GAAGC,WAAWzS,OAAS,EAC1CD,MAAOuE,EAAEkO,SAAS,GAAGC,WAAW1S,MAAQ,EACxClD,KAAMyH,EAAEmO,WAAW5V,KACnB6W,SAAUpP,EAAEmO,WAAWiB,SAAW,EAClCrG,WAAY/I,EAAEmO,WAAWpF,WAAa,EACtCF,UAAW7I,EAAEmO,WAAWtF,UAAY,GAExCH,EAAQpC,QAAUoC,EAAQjN,MAAQiN,EAAQG,UAC1CH,EAAQ2G,UAAY3G,EAAQhN,OAASgN,EAAQK,WAAaL,EAAQpC,QAGlExN,EAAIiV,SAAS3J,KAAKsE,GA3FN4G,CAAatP,EAAGlH,IACC,cAAVkH,EAAEzH,OAGTnC,QAAQ0W,KAAK,0BAA4BvU,EAAO,MAChDnC,QAAQ0W,KAAK9M,IAHblH,EAAIkH,EAAEzH,MAAM6L,KAAKpE,OA0HjC,SAAmBlH,GACfA,EAAI0H,MAAQ,GACZ,IAFoB,eAEXvG,GACLnB,EAAI0H,MAAMvG,GAAK,GACf,IAJgB,eAIPD,GACLlB,EAAI0H,MAAMvG,GAAGD,GAAK,GAClBlB,EAAIsQ,UAAU1I,SAAQ,SAACV,GAAD,OAIlC,SAA0BlH,EAAKyW,EAAOvV,EAAGC,GACjCnB,EAAIqQ,OAAOoG,KACXzW,EAAI0H,MAAMvG,GAAGD,GAAGuV,GAGxB,SAAqBzW,EAAKN,GACtB,GAAU,GAANA,EACA,OACJ,IAAIkQ,EAAU5P,EAAIiV,SAAS1I,MAAK,SAACrF,GAAD,OAASxH,GAAMwH,EAAEoP,UAAc5W,EAAMwH,EAAEoP,SAAWpP,EAAEqP,aAC/E3G,GACDtS,QAAQ0W,KAAK,mBAAqBhU,EAAIP,KAAO,KAAOC,GAExD,MAAO,CACHA,KACAkQ,QAASA,EACTC,QAAUnQ,GAAE,OAAGkQ,QAAH,IAAGA,OAAH,EAAGA,EAAS0G,WAbCI,CAAY1W,EAAKA,EAAIqQ,OAAOoG,GAAOtV,EAAInB,EAAI2C,MAAQzB,KAN3CyV,CAAiB3W,EAAKkH,EAAEzH,KAAMyB,EAAGC,OAFzDD,EAAI,EAAGA,EAAIlB,EAAI2C,MAAOzB,IAAM,EAA5BA,IAFJC,EAAI,EAAGA,EAAInB,EAAI4C,OAAQzB,IAAM,EAA7BA,GApHTyV,CAAU5W,GACHA,ECtCI,SAAS6W,GAAeC,GACnC,IAAI7P,EAAS,CACTsK,SAAU,GACVH,YAAa,IAOjB,OALA0F,EAAM1B,SAASxN,SAAQ,SAACjJ,GACpB,IAAI2F,EAOZ,SAAsB3F,GAClB,IAAIsI,EAAS,CACTvH,GAAIf,EAAQ0W,WAAW3V,GACvBwB,EAA0B,EAAvBvC,EAAQ0W,WAAWnU,EACtBC,EAA0B,EAAvBxC,EAAQ0W,WAAWlU,EACtB4V,MAAOC,GAAUrY,EAAQyW,WAM7B,OAJAnO,EAAM,2BACCA,GAYX,SAAmBmO,EAAU2B,GACzB,IAAI9P,EAAS,CACT0H,KAAM,GACNsI,QAAS,IAiBb,OAfA7B,EAAS9U,QAAO,SAAC4G,GAAD,MAAiB,OAAVA,EAAEzH,QAAemI,SAAQ,SAACV,GAC7C,IAAIlH,EAAG,2BACAkH,EAAEmO,YADF,IAEHnU,EAAoB,EAAjBgG,EAAEmO,WAAWnU,EAChBC,EAAoB,EAAjB+F,EAAEmO,WAAWlU,IAEhBnB,EAAIkX,OACJlX,EAAImX,SAAWJ,EAAM/W,EAAIkX,MACzBlX,EAAImX,SAASxI,KAAO3O,EAAImX,SAASxI,MAAQ,GACzC3O,EAAImX,SAASxI,KAAKrD,KAAKtL,IAE3BiH,EAAO0H,KAAKrD,KAAKtL,GACjBiH,EAAOgQ,QAAQ/P,EAAEmO,WAAW3V,IAAMM,KAG/BiH,EA/BAmQ,CAAUzY,EAAQyW,SAAUnO,EAAO8P,QAhB1BM,CAAa1Y,GACzBsI,EAAOsK,SAASjG,KAAKhH,GACrB2C,EAAOmK,YAAYzS,EAAQ0W,WAAW3V,IAAM4E,KAEzC2C,EAgBX,SAAS+P,GAAU5B,GACf,IAAInO,EAAS,GAIb,OAHAmO,EAAS9U,QAAO,SAAC4G,GAAD,MAAiB,aAAVA,EAAEzH,QAAqBmI,SAAQ,SAACV,GACnDD,EAAOC,EAAEmO,WAAW3V,IAAMwH,EAAEmO,cAEzBpO,EC+DIqQ,OAtFf,WAAgB,IAAD,EACQC,mBAAS,IADjB,mBACNlX,EADM,KACDmX,EADC,KAER7E,EAAO,CAAEhE,KAAM,IACpB8I,OAAOC,UAAUrY,WAAa,WAC5B,OAAOU,KAAKkT,OAAO,GAAG/T,cAAgBa,KAAK4X,MAAM,IAGnD,IAAMC,EAAW,SAACzE,EAAU0E,GAK1BzE,MAAM,GAAGD,EAAU,CAACE,QAJH,CACb,eAAgB,WAChB,OAAU,cAGXC,MAAK,SAAAC,GACJ,OAAOA,EAASzO,UAEjBwO,MAAK,SAAAwE,GACF,OAAOA,EAAI7L,QAAQ,aAAa,OAEnCqH,KAAKuE,IAGJE,EAAoB,SAACD,GACvB,IAIMpG,GAJO,IAAIsG,MACEC,gBAAgBH,GAEjBI,qBAAqB,SACbrP,QAAO,SAAS7I,EAAK4T,GAErC,OADA5T,EAAI4T,EAAIyB,WAAW5V,MAAQmU,EAAIwB,SAASpV,KAAI,SAAAR,GAAC,OAAEA,EAAE8E,SAAOhE,QAAO,SAAA4G,GAAC,OAAEA,KAC3DlH,IACZ,IACL2S,EAAI,2BACGA,GADH,IAEAjB,cAEJyG,EAAQxF,EAAM6E,IAGZY,EAAU,SAACjG,EAAU1S,EAAMkS,GAW7BiG,EAAWzF,GAVI,SAACkG,GACZ,IACIvB,GADS,IAAIkB,MACEC,gBAAgBI,GAEnC1F,EAAKhE,KAAKlP,GAAQqV,GAAYgC,EAAOrX,GACrCkS,EAAYC,WACc,GAAtBD,EAAYC,UACdD,EAAY2G,YAMhBC,EAAc,SAAC5G,GAWjBiG,EAAW,qBAVI,SAACS,GACZ,IACIvB,GADS,IAAIkB,MACEC,gBAAgBI,GAEnC1F,EAAKzB,UAAY2F,GAAeC,GAChCnF,EAAYC,WACc,GAAtBD,EAAYC,UACdD,EAAY2G,YAMhBH,EAAQ,SAACxF,EAAMkF,GACjB,IAAIlJ,EAAOgE,EAAKjB,UAAU8G,kBACtB7G,EAAc,CAACC,SAASjD,EAAKpO,OAAO,EAAG+X,MAAM,kBAAIT,EAAOlF,KAC5D4F,EAAa5G,GACbhD,EAAK/G,SAAQ,SAAC8F,GACV0K,EAAU1K,EAAKzB,QAAQ,IAAI,KAAK,OAAQyB,EAAKzB,QAAQ,QAAQ,IAAK0F,OAO1E,OAJApL,qBAAU,WACNqR,EAAW,4BAA6BG,KAC1C,IAGA,qBAAKvZ,UAAU,MAAf,SACM6B,EAAKqR,WAAa,cAAC,GAAD,CAAMA,UAAcrR,EAAKqR,UAAY/C,KAAStO,EAAKsO,KAAOuC,UAAc7Q,EAAK6Q,eC5E1FuH,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrF,MAAK,YAAkD,IAA/CsF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAAS7a,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEDqF,SAASC,eAAe,SAK3B+U,O","file":"static/js/main.ed83e1cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default function debug(msg) {\r\n    //if (DEBUG) \r\n        console.log(msg);\r\n}\r\nexport function doIfDebug(f) {\r\n    if (DEBUG) f();\r\n}\r\n\r\nconst DEBUG=false;//(\"production\" !== process.env.NODE_ENV);","import { Route } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\n\r\nconst PropsRoute = ({ component, ...rest }) => {\r\n  return (\r\n    <Route {...rest} render={routeProps => {\r\n      return renderMergedProps(component, routeProps, rest);\r\n    }}/>\r\n  );\r\n}\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest);\r\n  return (\r\n    React.createElement(component, finalProps)\r\n  );\r\n}\r\n\r\nexport default PropsRoute ","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <menu>\r\n                <ul className=\"hr\">\r\n                    {LiLink(\"items\",  \"/body\")}\r\n                    {LiLink(\"monsters\", \"/animal\")}\r\n                    {LiLink(\"NPC\", \"/merchant\")}\r\n                    {LiLink(\"conditions\")}\r\n                    {LiLink(\"quests\")}\r\n                    {LiLink(\"categories\")}\r\n                    {LiLink(\"map\")}\r\n                </ul>\r\n            </menu>\r\n        );\r\n    }\r\n}\r\nconst LiLink = (segment, def=\"\") => {\r\n    const to = \"/\"+segment+def;\r\n    const liClass = (window.location.pathname.toUpperCase().startsWith(\"/\"+segment.toUpperCase()))?\"selected\":\"\"; \r\n    return  <li className={liClass}><Link to={to.toLowerCase()}>{segment.capitalize()}</Link></li>\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return ( <div>Hello! </div> );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getHeader = this.getHeader.bind(this);\r\n        this.getRowsData = this.getRowsData.bind(this);\r\n        this.getKeys = this.getKeys.bind(this);\r\n    }\r\n\r\n    getKeys = function () {\r\n        return [\r\n        [\"name\", (o)=>o.name],\r\n        [\"id\",(o)=>o.id],\r\n        [\"size\",(o)=>o.size],\r\n        [\"inventorySlot\",(o)=>o.inventorySlot],\r\n        [\"actionType\",(o)=>o.actionType],\r\n\r\n\r\n        ];\r\n    }\r\n\r\n    getHeader = function () {\r\n        var keys = this.getKeys();\r\n        return keys.map((key, index) => {\r\n            return  <th key = {key[0]} > {key[0]} </th>\r\n        })\r\n    }\r\n\r\n    getRowsData = function () {\r\n        var items = this.props.data;\r\n        if (!items) return \"\";\r\n        if (this.props.filter && this.props.filter.length>0) {\r\n            items = items.filter((item)=>this.props.filter.indexOf(item.category) > -1);\r\n        }\r\n        var keys = this.getKeys();\r\n        return items.map((row, index)=>{\r\n            return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n             <div>\r\n                 <table border='1'>\r\n                     <thead>\r\n                         <tr>{this.getHeader()}</tr>\r\n                     </thead>\r\n                     <tbody>{this.getRowsData()}</tbody>\r\n                 </table>\r\n             </div> );\r\n    }\r\n}\r\nconst RenderRow = (props) => {\r\n    return props.keys.map((key, index) => {\r\n        return  <td key ={key[0]} > {key[1](props.data)} </td>\r\n    })\r\n}\r\n","import React, { Component } from 'react';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nconst custom = {\r\n    monsters_demon1:{x:64, y:64},\r\n    monsters_demon2:{x:64, y:64},\r\n    monsters_hydra1:{x:64, y:64},\r\n    monsters_cyclops:{x:64, y:96},\r\n    monsters_bosses_2x2:{x:64, y:64},\r\n    monsters_giantbasilisk:{x:64, y:64},\r\n}\r\n\r\nexport const getDimentionById = (id) => getDimention(id?.split(\":\")[0]);\r\nexport const getDimention = (file) => custom[file]||{x:32,y:32};\r\n\r\nexport default class Icon extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {data, prefix, noBackground}= this.props;\r\n        const zoom = this.props.zoom || 32;\r\n\r\n        const href = (data.rootLink || prefix) + data.id;\r\n        const key = \"i\" + (new Date() -0) +\"_\"+ Math.random();\r\n        const tmp = data.iconID?.split(\":\");\r\n        const file = tmp[0];\r\n        const index = tmp[1];\r\n        const src = getSrc(file);\r\n        const d = getDimention(file);\r\n        \r\n        d.x = d.x * zoom / 32;\r\n        d.y = d.y * zoom / 32;\r\n\r\n        var style = {\r\n            width:d.x,\r\n            height:d.y,\r\n            overflow: 'hidden'\r\n        }\r\n        if (!noBackground) {\r\n            style = {\r\n                ...style,\r\n                backgroundImage: 'url(\"/drawable/ui_selections.png\")',\r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundPosition: (data.iconBg * d.x) + \"px 0px\",\r\n                backgroundSize: (d.x * 5) + \"px \" + d.y + \"px\",\r\n\r\n            };\r\n        };\r\n\r\n        return <div style={{ display:'flex'}}>\r\n\r\n                        <Link style={style} \r\n                           title={data.displaytype} \r\n                           to={href}\r\n                           id={data.id}>\r\n                                <img id={key} \r\n                                    src={src} \r\n                                    onLoad={onImgLoad(index, d, key)}\r\n                                    />\r\n                        </Link>\r\n                    </div>;\r\n    }\r\n}\r\n    const getSrc = (file) => {\r\n        if (!file) return;\r\n        return \"/drawable/\"+file+\".png\";\r\n    }\r\n    const getPosition = (i, width, d) => {\r\n        var x = - i % width * d.x;\r\n        var y = (- i * d.y - x) / width;\r\n        return {x, y};\r\n    }\r\n    const onImgLoad = (index, d, key) => {\r\n        return ()=> {\r\n            if (!index) return;\r\n            var img = document.getElementById(key);\r\n            var p = getPosition(index, img.width / d.x, d);\r\n            img.style = `margin: ${p.y}px 0 0 ${p.x}px; display: 'block'`;\r\n        }\r\n    }\r\n\r\n","import React from 'react';\r\nimport Icon from '../Icon';\r\n\r\nconst styles = {\r\n    root: {\r\n        position: 'relative',\r\n        paddingLeft: '10px',\r\n        paddingTop: '5px',\r\n        display: 'block',\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center'\r\n    },\r\n\r\n}\r\n\r\nconst IconCell = ({tableManager, value, onChange, isEdit, data, column, rowIndex, searchText, isFirstEditableCell}) => {\r\n    return (\r\n        <div style={styles.root}>\r\n            <Icon data={data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconCell;","import React from 'react';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nconst styles = {\r\n    root: {\r\n        position: 'relative',\r\n        padding: '5px 20px',\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    text: {\r\n        marginLeft: 1,\r\n        whiteSpace: 'nowrap',\r\n\r\n    },\r\n    aimg: {\r\n        width:32, \r\n        height:32, \r\n        overflow: 'hidden' \r\n    },\r\n}\r\n\r\nconst getSrc = (id) => {\r\n    const tmp = id?.split(\":\")\r\n    return \"/drawable/\"+tmp[0]+\".png\";\r\n}\r\nconst getTypePosition = (dt) => {\r\n    switch(dt) {\r\n        \r\n        case 'legendary': return  \"-128px 0px\";\r\n        case 'extraordinary': return  \"-64px 0px\";\r\n        case 'rare': return  \"-96px 0px\";\r\n        case 'quest': return  \"-32px 0px\";\r\n        \r\n        default: return \"32px 0px\";\r\n    }\r\n}\r\nconst getPosition = (id, width) => {\r\n    const tmp = id?.split(\":\")[1]\r\n    var x = - tmp % width * 32;\r\n    var y = (- tmp * 32 - x) / width;\r\n    return {x, y};\r\n}\r\nconst getImgId = (id, rowIndex, index) => {\r\n    return id+\"_\"+rowIndex+\"_\"+index;\r\n}\r\n\r\nconst onImgLoad = (id, rowIndex, index) => {\r\n    return ()=> {\r\n        var img = document.getElementById(getImgId(id, rowIndex, index));\r\n        var p = getPosition(id, img.width/32);\r\n        img.style = `margin: ${p.y}px 0 0 ${p.x}px`;\r\n    }\r\n}\r\n\r\nconst showCondition = (prefix, rowIndex) => {\r\n    return (row, index) => {\r\n        var title = prefix;\r\n        if (row.chance) title += \" (\"+row.chance +\"%)\";\r\n        title += \": \" + row.link.name + \" \" + row.magnitude;\r\n        if (row.duration) title += \"x\" + row.duration;\r\n        const href = \"/conditions#\"+row.link.id;\r\n        const id = getImgId(row.link.iconID, rowIndex, index);\r\n        return <Link style={styles.aimg} title={title} to={href} key={id} >\r\n                   <img id={id} src={getSrc(row.link.iconID)} \r\n                        onLoad={onImgLoad(row.link.iconID, rowIndex, index)}\r\n                   />\r\n               </Link>\r\n    }\r\n}\r\nconst getRowsData = (prefix, values, rowIndex) => {\r\n    return values?.map(showCondition(prefix, rowIndex));\r\n}\r\nconst getTextData = (prefix, value, text, rowIndex) => {\r\n    if (!value) return \"\";\r\n    return <span style={styles.text} title={prefix + \":\" + value.min + \"-\" + value.max}>{text}</span>;\r\n}\r\n\r\nconst ConditionsCell = ({tableManager, value, onChange, isEdit, data, column, rowIndex, searchText, isFirstEditableCell}) => {\r\n\r\n    return (\r\n        <div style={styles.root}>\r\n            {\r\n                <React.Fragment>\r\n                    {getRowsData(\"on equip\", data.equipEffect?.addedConditions, rowIndex)}\r\n                    {getRowsData(\"on hit\", data.hitEffect?.conditionsTarget, rowIndex)}\r\n                    {getRowsData(\"on hit get\", data.hitEffect?.conditionsSource, rowIndex)}\r\n                    {getTextData(\"on hit get\", data.hitEffect?.increaseCurrentHP, \"+HP\", rowIndex)}\r\n                    {getRowsData(\"on kill\", data.killEffect?.conditionsSource, rowIndex)}\r\n                    {getTextData(\"on kill\", data.killEffect?.increaseCurrentHP, \"+HP\", rowIndex)}\r\n                    {getTextData(\"on kill\", data.killEffect?.increaseCurrentAP, \"+AP\", rowIndex)}\r\n                    {getRowsData(\"when hited\", data.hitReceivedEffect?.conditionsSource, rowIndex)}\r\n                    {getRowsData(\"attaker get\", data.hitReceivedEffect?.conditionsTarget, rowIndex)}\r\n                    {getRowsData(\"on use\", data.useEffect?.conditionsSource, rowIndex)}\r\n                </React.Fragment>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConditionsCell;","import React from 'react';\r\n\r\nconst styles = {\r\n    root: {\r\n        position: 'relative',\r\n        padding: '0 20px',\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center'\r\n    },\r\n    text: {\r\n        marginLeft: 10,\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n}\r\n\r\nconst knownEquipEffects = [\r\n                  \"increaseAttackDamage\",\r\n                  \"increaseAttackCost\",\r\n                  \"increaseAttackChance\",\r\n                  \"increaseBlockChance\",\r\n                  \"increaseCriticalSkill\",\r\n                  \"setCriticalMultiplier\",\r\n                  \"increaseMaxHP\",\r\n                  \"setNonWeaponDamageModifier\",\r\n                  \"increaseMaxAP\",\r\n                  \"increaseDamageResistance\",\r\n                  \"addedConditions\",\r\n                  \"conditionsTarget\",\r\n                  \"increaseMoveCost\",\r\n                  \"increaseUseItemCost\",\r\n                  \"increaseReequipCost\",\r\n                  \"\",\r\n                  \"\",\r\n              ];\r\nconst knownHitEffects = [\r\n                  \"conditionsTarget\",\r\n                  \"conditionsSource\",\r\n                  \"increaseCurrentHP\",\r\n                  \"\",\r\n                  \"\",\r\n              ];\r\nconst knownKillEffects = [\r\n                  \"conditionsSource\",\r\n                  \"increaseCurrentHP\",\r\n                  \"increaseCurrentAP\",\r\n                  \"\",\r\n              ];\r\nconst knownReceivedEffects = [\r\n                  \"conditionsSource\",\r\n                  \"conditionsTarget\",\r\n                  \"\",\r\n                  \"\",\r\n              ];\r\nconst knownUseEffects = [\r\n                  \"conditionsSource\",\r\n                  \"increaseCurrentHP\",\r\n                  \"\",\r\n              ];\r\nconst knownAbilityEffects = [\r\n                  \"increaseAttackChance\",\r\n                  \"increaseBlockChance\",\r\n                  \"increaseDamageResistance\",\r\n                  \"increaseAttackDamage\",\r\n                  \"increaseMaxAP\",\r\n                  \"increaseMoveCost\",\r\n                  \"increaseAttackCost\",\r\n                  \"increaseMaxHP\",\r\n                  \"increaseCriticalSkill\",\r\n                  \"increaseUseItemCost\",\r\n                  \"increaseReequipCost\",\r\n                  \"visualEffectID\",\r\n                  \"\",\r\n              ];\r\nconst knownRoundEffects = [\r\n                  \"increaseCurrentHP\",\r\n                  \"visualEffectID\",\r\n                  \"increaseCurrentAP\",\r\n                  \"\",\r\n                  \"\",\r\n                  \"\",\r\n              ];\r\n\r\nconst getOther = (prefix, equipEffect, f) => {\r\n    if (!equipEffect) return \"\";\r\n    const result = Object.keys(equipEffect)\r\n        .filter((e)=> f.indexOf(e)==-1)\r\n        .map((key) => [key, equipEffect[key]]);\r\n    return (result.length>0) ? prefix + JSON.stringify(result) : \"\";\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst OtherCell = ({tableManager, value, onChange, isEdit, data, column, rowIndex, searchText, isFirstEditableCell}) => {\r\n\r\n    return (\r\n        <div style={styles.root}>\r\n            {\r\n                <React.Fragment>\r\n                    {getOther(\"On equip:\", data.equipEffect, knownEquipEffects)}\r\n                    {getOther(\"On hit:\", data.hitEffect, knownHitEffects)}\r\n                    {getOther(\"On get hit:\", data.hitReceivedEffect, knownReceivedEffects)}\r\n                    {getOther(\"On kill: \", data.killEffect, knownKillEffects)}\r\n                    {getOther(\"On use: \", data.useEffect, knownUseEffects)}\r\n                    {getOther(\"\", data.abilityEffect, knownAbilityEffects)}\r\n                    {getOther(\"\", data.roundEffect, knownRoundEffects)}\r\n                </React.Fragment>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OtherCell;","import React from 'react';\r\n\r\nconst styles = {\r\n    root: {\r\n        position: 'relative',\r\n        padding: '10px 20px',\r\n        display: 'block',\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center'\r\n    },\r\n    text: {\r\n        margin: 'auto',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n    \r\n\r\n}\r\nconst RangeCell = (...field)=>{\r\n    return ({tableManager, value, onChange, isEdit, data, column, rowIndex, searchText, isFirstEditableCell}) => {\r\n        var range = {data};\r\n        field.forEach((f)=>{range.data = range.data[f]||{}});\r\n        if (value == \"0\") return \"\";\r\n        if (range.data.min == range.data.max) return (<div style={styles.root}><span style={styles.text}>{value}</span></div>);\r\n        return (\r\n            <div style={styles.root}>\r\n               <span style={styles.text}>{value}({range.data.min}/{range.data.max})</span>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default RangeCell;","const calculateCost = (o, isWeapon) => {\r\n    if (o.hasManualPrice) return o.baseMarketCost;\r\n    const costEquipStats = calculateCostEquipEffect(o.equipEffect, isWeapon);\r\n    const costUse =calculateUseCost(o.useEffect);\r\n    const costHit = calculateHitCost(o.hitEffect);\r\n    const costKill = calculateKillCost(o.killEffect);\r\n    return Math.max(1, costEquipStats + costUse + costHit + costKill);\r\n}\r\nconst calculateCostEquipEffect = (o, isWeapon) => {\r\n        if (!o) return 0;\r\n        const {\r\n            increaseBlockChance ,increaseAttackChance, \r\n            increaseAttackCost, increaseDamageResistance, \r\n            increaseAttackDamage,\r\n            increaseCriticalSkill, setCriticalMultiplier,\r\n            increaseMaxHP, increaseMaxAP,\r\n            increaseMoveCost, increaseUseItemCost, increaseReequipCost\r\n        } = o;\r\n        const costBC = (3*Math.pow(Math.max(0, increaseBlockChance), 2.5) + 28*increaseBlockChance);\r\n        const costAC = (0.4*Math.pow(Math.max(0,increaseAttackChance), 2.5) - 6*Math.pow(Math.abs(Math.min(0,increaseAttackChance)),2.7));\r\n\r\n        const costAP = isWeapon ?\r\n                (0.2*Math.pow(10.0/increaseAttackCost, 8) - 25*increaseAttackCost)\r\n                :-3125 * increaseAttackCost;\r\n        const costDR = 1325 * increaseDamageResistance;\r\n        const costDMG_Min = isWeapon ?\r\n                (10*Math.pow(Math.max(0, increaseAttackDamage?.min), 2.5))\r\n                : (10*Math.pow(Math.max(0, increaseAttackDamage?.min), 3) + increaseAttackDamage?.min*80);\r\n        const costDMG_Max = isWeapon ?\r\n                (2*Math.pow(Math.max(0, increaseAttackDamage?.max), 2.1))\r\n                : (2*Math.pow(Math.max(0, increaseAttackDamage?.max), 3) + increaseAttackDamage?.max*20);\r\n        const costCS = (2.2*Math.pow(increaseCriticalSkill, 3));\r\n        const costCM = (50*Math.pow(Math.max(0, setCriticalMultiplier), 2));\r\n\r\n        const costMaxHP = (30*Math.pow(Math.max(0,increaseMaxHP), 1.2) + 70*increaseMaxHP);\r\n        const costMaxAP = (50*Math.pow(Math.max(0,increaseMaxAP), 3) + 750*increaseMaxAP);\r\n        const costMovement = (510*Math.pow(Math.max(0,-increaseMoveCost), 2.5) - 350*increaseMoveCost);\r\n        const costUseItem = (915*Math.pow(Math.max(0,-increaseUseItemCost), 3) - 430*increaseUseItemCost);\r\n        const costReequip = (450*Math.pow(Math.max(0,-increaseReequipCost), 2) - 250*increaseReequipCost);\r\n\r\n        return [costBC , costAC , costAP , costDR , costDMG_Min , costDMG_Max , costCS , costCM\r\n                , costMaxHP , costMaxAP\r\n                , costMovement , costUseItem , costReequip].reduce((a, b) => Math.trunc(a||0) + Math.trunc(b||0), 0);\r\n}\r\n\r\nconst calculateUseCost = (o) => {\r\n    if (!o) return 0;\r\n    const averageHPBoost = averagef(o.increaseCurrentHP);\r\n    if (averageHPBoost == 0) return 0;\r\n    const costBoostHP = 0.1*signum(averageHPBoost)*Math.pow(Math.abs(averageHPBoost), 2) + 3*averageHPBoost;\r\n    return Math.trunc(costBoostHP);\r\n}\r\nconst signum = (e) => {\r\n    if (e > 0) return 1;\r\n    if (e < 0) return -1;\r\n    return 0;\r\n}\r\nconst averagef = (o) => {\r\n    return ((o?.max||0) + (o?.min||0))/2;\r\n}\r\nconst calculatePointsCost = (o, hpBase, apBase) => {\r\n    if (!o) return 0;\r\n    const averageHPBoost = averagef(o.increaseCurrentHP);\r\n    const averageAPBoost = averagef(o.increaseCurrentAP);\r\n    if (averageHPBoost == 0 && averageAPBoost == 0) return 0;\r\n\r\n    const costBoostHP = (hpBase*Math.pow(Math.max(0,averageHPBoost), 2.5) + 450*averageHPBoost);\r\n    const costBoostAP = (apBase*Math.pow(Math.max(0,averageAPBoost), 2.5) + 300*averageAPBoost);\r\n    return Math.trunc(costBoostHP) + Math.trunc(costBoostAP);\r\n}\r\n\r\nconst calculateHitCost = (o) => {\r\n    return calculatePointsCost(o, 2770, 3100);\r\n}\r\n\r\nconst calculateKillCost = (o) => {\r\n    return calculatePointsCost(o, 923, 1033);\r\n}\r\n\r\nexport default calculateCost;","import React, { Component } from 'react';\r\nimport Icon from '../Icon';\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getHeader = this.getHeader.bind(this);\r\n        this.getRowsData = this.getRowsData.bind(this);\r\n        this.getKeys = this.getKeys.bind(this);\r\n    }\r\n    getKeys = function () {\r\n        return [\r\n            [\"\", (o)=> {return <Icon data={o.monster} />;}],\r\n            [\"Name\", (o)=>{return RenderHref(o.monster)}, { textAlign: 'left'} ],\r\n            [\"Quantity\",(o)=>{return Range(o.quantity)}],\r\n            [\"Chance\",(o)=>{return o.monster.maxHP?(o.chance+\"%\"):\"sell\"}],\r\n\r\n        ];\r\n    }\r\n\r\n    getHeader = function () {\r\n        var keys = this.getKeys();\r\n        return keys.map((key, index) => {\r\n            var style = (key.length>=2)?key[2]:{};\r\n            return  <th style={style} key = {key[0]} > {key[0]} </th>\r\n        })\r\n    }\r\n\r\n    getRowsData = function () {\r\n        var data = this.props.data;\r\n        if (!data) return \"\";\r\n        if (this.props.filter && this.props.filter.length>0) {\r\n            data = data.filter((item)=>this.props.filter.indexOf(item.category) > -1);\r\n        }\r\n        var keys = this.getKeys();\r\n        return data.map((row, index)=>{\r\n            return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table style={{width: 400}} >\r\n                <thead style={{display: 'none'}}><tr>{this.getHeader()}</tr></thead>\r\n                <tbody>{this.getRowsData()}</tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\nconst RenderRow = (props) => {\r\n    return props.keys.map((key, index) => {\r\n        var style = (key.length>=2)?key[2]:{};\r\n        return <td style={style} key ={key[0]}>{key[1](props.data)}</td>\r\n    })\r\n}\r\nconst RenderHref = (o) => {\r\n    const href = o.rootLink + o.id;\r\n    return  <a href={href}>{o.name}</a>\r\n}\r\nconst Range = (o) => {\r\n    if (o.max == o.min) return o.max;\r\n    return o.min + \"-\" + o.max;\r\n}","import React from 'react';\r\nimport LinksTable from './LinksTable';\r\n\r\nconst styles = {\r\n    text: {\r\n        marginLeft: 10,\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    table: {\r\n        paddingTop: 10,\r\n        marginLeft: -10,\r\n    },\r\n}\r\n\r\nexport default class ExpandingName extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n        }\r\n        this.toggleExpand = this.toggleExpand.bind(this);\r\n    }\r\n    toggleExpand() {\r\n        this.setState({ expanded: !this.state.expanded, });\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.data;\r\n        const value = this.props.value;\r\n        const links = data.droplists?.flatMap((e)=>getEnemyList(e))?.filter((e)=>!!e);\r\n        if (!links||!links.length) {\r\n            return (\r\n              <React.Fragment>\r\n                    <div style={{ display:'flex'}} >\r\n                        <div style={{ width: 19}} />\r\n                        <span style={styles.text}>{value}</span>\r\n                    </div>\r\n              </React.Fragment> );\r\n        }\r\n        return (\r\n              <React.Fragment>\r\n                    <div style={{ display:'flex'}} onClick={this.toggleExpand}>\r\n                            <img src=\"../image/sort_desc.png\" />\r\n                            <span style={styles.text}>{value}</span>\r\n                    </div>\r\n                    <div style={styles.table}>\r\n                        {(this.state.expanded) && <LinksTable data={links}/>}\r\n                    </div>\r\n\r\n             </React.Fragment> );\r\n    }\r\n}\r\n\r\nconst getEnemyList = (link) => {\r\n    var result = [];\r\n    link.droplist?.links?.forEach((monster) => {\r\n        result.push({\r\n            monster,\r\n            ...link\r\n        });\r\n    })\r\n\r\n    return result;\r\n}\r\n","import React from 'react';\r\nimport ExpandingName from './ExpandingName';\r\n\r\nconst styles = {\r\n    root: {\r\n        position: 'relative',\r\n        padding: '10px',\r\n        display: 'block',\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center'\r\n    },\r\n}\r\n\r\nconst IconCell = ({tableManager, value, onChange, isEdit, data, column, rowIndex, searchText, isFirstEditableCell}) => {\r\n    return (\r\n        <div style={styles.root}>\r\n            <ExpandingName data={data} value={value}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconCell;","import React, { Component } from 'react';\r\nimport GridTable from '@nadavshaar/react-grid-table';\r\nimport '../../@nadavshaar/react-grid-table/dist/index.css';\r\nimport IconCell from \"../cells/IconCell\";\r\nimport ConditionsCell from \"../cells/ConditionsCell\";\r\nimport OtherCell from \"../cells/OtherCell\";\r\nimport RangeCell from \"../cells/RangeCell\";\r\nimport calculateCost from '../CostCalculator';\r\nimport NameCell from \"./NameCell\";\r\n\r\nconst sortStr = ({a, b, isAscending}) => {\r\n    let aa = a||\"\";\r\n    let bb = b||\"\";\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\nconst sortInt = ({a, b, isAscending}) => {\r\n    let aa = a||0;\r\n    let bb = b||0;\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\nconst sortDT = ({a, b, isAscending}) => {\r\n    const list = [\"ordinary\",\"quest\",\"rare\",\"extraordinary\",\"legendary\",\"\"];\r\n    let aa = list.indexOf(a);\r\n    let bb = list.indexOf(b);\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\nconst aInt = ({a, b, isAscending}) => {\r\n    let aa = a||0;\r\n    let bb = b||0;\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\n\r\nconst hashLinkScroll = () => {\r\n  const { hash } = window.location;\r\n  if (hash !== '') {\r\n    setTimeout(() => {\r\n      const id = hash.replace('#', '');\r\n      const element = document.getElementById(id);\r\n      if (element) element.scrollIntoView();\r\n    }, 100);\r\n  }\r\n}\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getColumns = this.getColumns.bind(this);\r\n        this.getRows = this.getRows.bind(this);\r\n    }\r\n\r\n    getRows  = function () {\r\n        var data = this.props.data;\r\n        if (this.props.filter) {\r\n            data = data.filter((e)=>this.props.filter(e));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    isEmptyColumn = function (f) {\r\n        return !!this.rows.find((e)=>f(e));\r\n    }\r\n    getColumns  = function () {\r\n        var i = 1;\r\n        return [\r\n            {\r\n                id: i++,\r\n                field: 'displaytype',\r\n                label: '',\r\n                pinned: true,\r\n                cellRenderer: IconCell,\r\n                sort:sortDT,\r\n                width: '50px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'name',\r\n                label: 'Name',\r\n                pinned: true,\r\n                cellRenderer: NameCell,\r\n                width: '290px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'Atk Cost',\r\n                getValue: ({value, column}) => value?.increaseAttackCost,\r\n                sort:sortInt,\r\n                width: '115px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.increaseAttackCost),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'Dmg',\r\n                getValue: ({value, column}) => ((value?.increaseAttackDamage?.min||0) + (value?.increaseAttackDamage?.max||0))/2,\r\n                sort:sortInt,\r\n                cellRenderer: RangeCell(\"equipEffect\", \"increaseAttackDamage\"),\r\n                width: '135px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.increaseAttackDamage),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'AC',\r\n                getValue: ({value, column}) => value?.increaseAttackChance,\r\n                sort:sortInt,\r\n                width: '80px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.increaseAttackChance),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'BC',\r\n                getValue: ({value, column}) => value?.increaseBlockChance,\r\n                sort:sortInt,\r\n                width: '80px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.increaseBlockChance),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'Crit',\r\n                getValue: ({value, column}) => value?.increaseCriticalSkill,\r\n                sort:sortInt,\r\n                width: '106px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.increaseCriticalSkill),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'Crit*',\r\n                getValue: ({value, column}) => value?.setCriticalMultiplier,\r\n                sort:sortInt,\r\n                width: '106px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.setCriticalMultiplier),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'MaxHP',\r\n                getValue: ({value, column}) => value?.increaseMaxHP,\r\n                sort:sortInt,\r\n                width: '115px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.increaseMaxHP),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'MaxAP',\r\n                getValue: ({value, column}) => value?.increaseMaxAP,\r\n                sort:sortInt,\r\n                width: '115px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.increaseMaxAP),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'MC',\r\n                getValue: ({value, column}) => value?.increaseMoveCost,\r\n                sort:sortInt,\r\n                width: '80px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.increaseMoveCost),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'UC',\r\n                getValue: ({value, column}) => value?.increaseUseItemCost,\r\n                sort:sortInt,\r\n                width: '80px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.increaseUseItemCost),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'EC',\r\n                getValue: ({value, column}) => value?.increaseReequipCost,\r\n                sort:sortInt,\r\n                width: '80px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.increaseReequipCost),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'Dmg*%',\r\n                getValue: ({value, column}) => value?.setNonWeaponDamageModifier,\r\n                sort:sortInt,\r\n                width: '115px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.setNonWeaponDamageModifier),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'Dmg_res',\r\n                getValue: ({value, column}) => value?.increaseDamageResistance,\r\n                sort:sortInt,\r\n                width: '120px',\r\n                visible: this.isEmptyColumn((item)=>item.equipEffect?.increaseDamageResistance),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'categoryLink',\r\n                label: 'Category',\r\n                getValue: ({value, column}) => value?.name,\r\n                width: '140px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'Conditions',\r\n                getValue: ({value, column}) => JSON.stringify(value?.addedConditions),\r\n                sort:sortStr,\r\n                width: '150px',\r\n                cellRenderer: ConditionsCell,\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'baseMarketCost',\r\n                label: 'Price',\r\n                sort:sortInt,\r\n                width: '100px',\r\n                visible: true,\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'Other',\r\n                getValue: ({value, column}) => value,\r\n                width: '100px',\r\n                sort:sortStr,\r\n                cellRenderer: OtherCell,\r\n                visible: false,\r\n            },\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        GridTable.defaultProps.isPaginated = false;\r\n        GridTable.defaultProps.minColumnResizeWidth = 30;\r\n        GridTable.defaultProps.isVirtualScroll = false;\r\n        GridTable.defaultProps.showSearch = false;\r\n        GridTable.defaultProps.showColumnVisibilityManager = false;\r\n        this.rows = this.getRows();\r\n\r\n        return <GridTable \r\n                    columns={this.getColumns()} \r\n                    rows={this.rows} \r\n                    onLoad={hashLinkScroll} \r\n                    key={this.props.title}/>;\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport GridTable from '@nadavshaar/react-grid-table';\r\nimport '../../@nadavshaar/react-grid-table/dist/index.css';\r\nimport IconCell from \"../cells/IconCell\";\r\nimport ConditionsCell from \"../cells/ConditionsCell\";\r\nimport OtherCell from \"../cells/OtherCell\";\r\nimport RangeCell from \"../cells/RangeCell\";\r\nimport NameCell from \"./NameCell\";\r\n\r\n\r\nconst sortStr = ({a, b, isAscending}) => {\r\n    let aa = a||\"\";\r\n    let bb = b||\"\";\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\nconst sortInt = ({a, b, isAscending}) => {\r\n    let aa = a||0;\r\n    let bb = b||0;\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\nconst sortDT = ({a, b, isAscending}) => {\r\n    const list = [\"ordinary\",\"quest\",\"rare\",\"extraordinary\",\"legendary\",\"\"];\r\n    let aa = list.indexOf(a);\r\n    let bb = list.indexOf(b);\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\nconst aInt = ({a, b, isAscending}) => {\r\n    let aa = a||0;\r\n    let bb = b||0;\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\n\r\nconst hashLinkScroll = () => {\r\n  const { hash } = window.location;\r\n  if (hash !== '') {\r\n    setTimeout(() => {\r\n      const id = hash.replace('#', '');\r\n      const element = document.getElementById(id);\r\n      if (element) element.scrollIntoView();\r\n    }, 100);\r\n  }\r\n}\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getColumns = this.getColumns.bind(this);\r\n        this.getRows = this.getRows.bind(this);\r\n    }\r\n\r\n    getRows  = function () {\r\n        var data = this.props.data;\r\n        if (this.props.filter) {\r\n            data = data.filter((e)=>this.props.filter(e));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    getColumns  = function () {\r\n        var i = 1;\r\n        return [\r\n            {\r\n                id: i++,\r\n                field: 'displaytype',\r\n                label: '',\r\n                pinned: true,\r\n                cellRenderer: IconCell,\r\n                sort:sortDT,\r\n                width: '50px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'name',\r\n                label: 'Name',\r\n                pinned: true,\r\n                cellRenderer: NameCell,\r\n                width: '290px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'categoryLink',\r\n                label: 'Category',\r\n                getValue: ({value, column}) => value.name,\r\n                width: '140px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'useEffect',\r\n                label: 'HP',\r\n                getValue: ({value, column}) => ((value?.increaseCurrentHP?.min||0) + (value?.increaseCurrentHP?.max||0))/2,\r\n                sort:sortInt,\r\n                width: '130px',\r\n                cellRenderer: RangeCell(\"useEffect\", \"increaseCurrentHP\"),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'Conditions',\r\n                getValue: ({value, column}) => JSON.stringify(value?.addedConditions),\r\n                sort:sortStr,\r\n                width: '250px',\r\n                cellRenderer: ConditionsCell,\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'baseMarketCost',\r\n                label: 'Price',\r\n                getValue: ({value, column}) => value ? value + \" gold\" : \"\",\r\n                sort:sortInt,\r\n                width: '100px',\r\n                visible: true,\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'Other',\r\n                getValue: ({value, column}) => value,\r\n                width: '100px',\r\n                sort:sortStr,\r\n                cellRenderer: OtherCell,\r\n                visible: false,\r\n            },\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        GridTable.defaultProps.isPaginated = false;\r\n        GridTable.defaultProps.minColumnResizeWidth = 30;\r\n        GridTable.defaultProps.isVirtualScroll = false;\r\n        GridTable.defaultProps.showSearch = false;\r\n        GridTable.defaultProps.showColumnVisibilityManager = false;\r\n        this.rows = this.getRows();\r\n\r\n        return <GridTable \r\n                    columns={this.getColumns()} \r\n                    rows={this.rows} \r\n                    onLoad={hashLinkScroll} \r\n                    key={this.props.title}/>;\r\n    }\r\n}\r\n\r\n","import { Link } from 'react-router-dom';\r\n\r\nexport default function LiLink(prefix, next, path, label=next) {\r\n    const to = prefix+next;\r\n    const liClass = (path.toUpperCase()==to.toUpperCase())?\"selected\":\"\"; \r\n    return  <li className={liClass} key={next}><Link to={to.toLowerCase()}>{label.capitalize()}</Link></li>\r\n}","import React, { Component } from 'react';\r\nimport ItemsTable from './ItemsTable.jsx';\r\nimport PotionsTable from './PotionsTable.jsx';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PropsRoute from '../PropsRoute';\r\nimport LiLink from '../LiLink'\r\nimport Home from '../Home';\r\n\r\nexport default class ItemsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.data) return \"Loading...\";\r\n        return (\r\n            <div>\r\n                <ul className=\"hr\">\r\n                        {LiLink(\"/items/\", \"body\", this.props.location.pathname)}\r\n                        {LiLink(\"/items/\", \"weapon\", this.props.location.pathname)}\r\n                        {LiLink(\"/items/\", \"shield\", this.props.location.pathname)}\r\n                        {LiLink(\"/items/\", \"head\", this.props.location.pathname)}\r\n                        {LiLink(\"/items/\", \"feet\", this.props.location.pathname)}\r\n                        {LiLink(\"/items/\", \"leftring\", this.props.location.pathname)}\r\n                        {LiLink(\"/items/\", \"neck\", this.props.location.pathname)}\r\n                        {LiLink(\"/items/\", \"use\", this.props.location.pathname)}\r\n                        {LiLink(\"/items/\", \"other\", this.props.location.pathname)}\r\n                </ul>\r\n                <Switch>\r\n                    {ItemRoute(\"body\", this.props.data)}\r\n                    {ItemRoute(\"weapon\", this.props.data)}\r\n                    {ItemRoute(\"shield\", this.props.data)}\r\n                    {ItemRoute(\"head\", this.props.data)}\r\n                    {ItemRoute(\"hand\", this.props.data)}\r\n                    {ItemRoute(\"feet\", this.props.data)}\r\n                    {ItemRoute(\"neck\", this.props.data)}\r\n                    {ItemRoute(\"leftring\", this.props.data)}\r\n                    <PropsRoute  path='/items/use' component={PotionsTable}\r\n                        data = { this.props.data } title=\"Usable\"\r\n                        filter = {(e)=>(e.categoryLink.actionType==\"use\")}\r\n                    />\r\n                    <PropsRoute path='/items/other'  component={ItemsTable}\r\n                        data = { this.props.data } title=\"Other\"\r\n                        filter = {(e)=>(!e.categoryLink?.actionType)}\r\n                    />\r\n                </Switch>\r\n            </div> \r\n               );\r\n    }\r\n}\r\n\r\nconst ItemRoute = (slot, data) => {\r\n    const path = \"/items/\"+slot;\r\n    return <PropsRoute  path={path} component={ItemsTable}\r\n                        data = {data} title= {slot}\r\n                        filter = {(e)=>(e.categoryLink.inventorySlot == slot)}\r\n                    />\r\n}","import React, { Component } from 'react';\r\nimport Icon from '../Icon';\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getHeader = this.getHeader.bind(this);\r\n        this.getRowsData = this.getRowsData.bind(this);\r\n        this.getKeys = this.getKeys.bind(this);\r\n    }\r\n    getKeys = function () {\r\n        return [\r\n            [\"\", (o)=> {return <Icon data={o}/>;}],\r\n            [\"Name\", (o)=>{return RenderHref(o)}, { textAlign: 'left'} ],\r\n            [\"Type\",(o)=>o.type],\r\n            [\"Aim\",(o)=>o.aim],\r\n            [\"Chance\",(o)=>{return o.chance?(o.chance+\"%\"):\"\"}],\r\n            [\"Magnitude\",(o)=>{return o.magnitude+\"x\"}],\r\n            [\"Duration\",(o)=>{return o.duration+\" rounds\"}],\r\n        ];\r\n    }\r\n\r\n    getHeader = function () {\r\n        var keys = this.getKeys();\r\n        return keys.map((key, index) => {\r\n            var style = (key.length>=2)?key[2]:{};\r\n            return  <th style={style} key = {key[0]} > {key[0]} </th>\r\n        })\r\n    }\r\n\r\n    getRowsData = function () {\r\n        var items = this.props.data;\r\n        if (!items) return \"\";\r\n        if (this.props.filter && this.props.filter.length>0) {\r\n            items = items.filter((item)=>this.props.filter.indexOf(item.category) > -1);\r\n        }\r\n        var keys = this.getKeys();\r\n        return items.map((row, index)=>{\r\n            return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table style={{width: 700}} >\r\n                <thead style={{display: 'none'}}><tr>{this.getHeader()}</tr></thead>\r\n                <tbody>{this.getRowsData()}</tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\nconst RenderRow = (props) => {\r\n    return props.keys.map((key, index) => {\r\n        var style = (key.length>=2)?key[2]:{};\r\n        return <td style={style} key ={key[0]}>{key[1](props.data)}</td>\r\n    })\r\n}\r\nconst RenderHref = (o) => {\r\n    const href = o.rootLink + o.id;\r\n    return  <a href={href}>{o.name}</a>\r\n\r\n}","import React from 'react';\r\nimport LinksTable from './LinksTable';\r\n\r\nconst styles = {\r\n    text: {\r\n        marginLeft: 10,\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    table: {\r\n        paddingTop: 10,\r\n        marginLeft: -10,\r\n    },\r\n}\r\n\r\nexport default class ExpandingName extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n        }\r\n        this.toggleExpand = this.toggleExpand.bind(this);\r\n    }\r\n    toggleExpand() {\r\n        this.setState({ expanded: !this.state.expanded, });\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.data;\r\n        const value = this.props.value;\r\n        const links = data.links;\r\n        if (!links||!links.length) {\r\n            return (\r\n              <React.Fragment>\r\n                    <div style={{ display:'flex'}} >\r\n                        <div style={{ width: 19}} />\r\n                        <span style={styles.text}>{value}</span>\r\n                    </div>\r\n              </React.Fragment> );\r\n        }\r\n        return (\r\n              <React.Fragment>\r\n                    <div style={{ display:'flex'}} onClick={this.toggleExpand}>\r\n                            <img src=\"../image/sort_desc.png\" />\r\n                            <span style={styles.text}>{value}</span>\r\n                    </div>\r\n                    <div style={styles.table}>\r\n                        {(this.state.expanded) && <LinksTable data={links}/>}\r\n                    </div>\r\n\r\n             </React.Fragment> );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ExpandingName from './ExpandingName';\r\n\r\nconst styles = {\r\n    root: {\r\n        position: 'relative',\r\n        padding: '10px 5px 0px',\r\n        display: 'block',\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center'\r\n    },\r\n}\r\n\r\nconst IconCell = ({tableManager, value, onChange, isEdit, data, column, rowIndex, searchText, isFirstEditableCell}) => {\r\n    return (\r\n        <div style={styles.root}>\r\n            <ExpandingName data={data} value={value}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconCell;","import React from 'react';\r\n\r\nconst styles = {\r\n    root: {\r\n        position: 'relative',\r\n        padding: '0 20px',\r\n        display: 'flex',\r\n        width: '100%',\r\n        alignItems: 'center'\r\n    },\r\n    img: {\r\n        width: 32,\r\n        height:32,\r\n    },\r\n}\r\n\r\n\r\nconst Cell = ({tableManager, value, onChange, isEdit, data, column, rowIndex, searchText, isFirstEditableCell}) => {\r\n    return (\r\n        <div style={styles.root}>\r\n            {value && <img style={styles.img} src=\"/image/yes.png\"/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cell;","import React, { Component } from 'react';\r\nimport GridTable from '@nadavshaar/react-grid-table';\r\nimport '../../@nadavshaar/react-grid-table/dist/index.css';\r\nimport IconCell from \"../cells/IconCell\";\r\nimport NameCell from \"./NameCell\";\r\nimport JsonCell from \"../cells/JsonCell\";\r\nimport OtherCell from \"../cells/OtherCell\";\r\nimport RangeCell from \"../cells/RangeCell\";\r\nimport BooleanCell from \"../cells/BooleanCell\";\r\n\r\nconst sortStr = ({a, b, isAscending}) => {\r\n    let aa = a||\"\";\r\n    let bb = b||\"\";\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\nconst sortInt = ({a, b, isAscending}) => {\r\n    let aa = a||0;\r\n    let bb = b||0;\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\n\r\nconst aInt = ({a, b, isAscending}) => {\r\n    let aa = a||0;\r\n    let bb = b||0;\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\n\r\nconst hashLinkScroll = () => {\r\n  const { hash } = window.location;\r\n  if (hash !== '') {\r\n    setTimeout(() => {\r\n      const id = hash.replace('#', '');\r\n      const element = document.getElementById(id);\r\n      if (element) element.scrollIntoView();\r\n    }, 100);\r\n  }\r\n}\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getColumns = this.getColumns.bind(this);\r\n        this.getRows = this.getRows.bind(this);\r\n    }\r\n\r\n    getRows  = function () {\r\n        var items = this.props.data;\r\n        if (this.props.filter) {\r\n            items = items.filter((item)=>this.props.filter.indexOf(item.category) > -1);\r\n        }\r\n\r\n        return items;\r\n    }\r\n    isEmptyColumn = function (f) {\r\n        return !!this.rows.find((e)=>f(e));\r\n    }\r\n    getColumns  = function () {\r\n        var i = 1;\r\n        return [\r\n            {\r\n                id: i++,\r\n                field: 'displaytype',\r\n                label: '',\r\n                pinned: true,\r\n                cellRenderer: IconCell,\r\n                width: '50px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'name',\r\n                label: 'Name',\r\n                pinned: true,\r\n                cellRenderer: NameCell,\r\n                width: '300px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'category',\r\n                label: 'Category',\r\n                width: '120px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'isStacking',\r\n                label: 'Stack',\r\n                cellRenderer: BooleanCell,\r\n                sort:sortInt,\r\n                width: '80px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'HP',\r\n                getValue: ({value, column}) => value?.increaseMaxHP,\r\n                sort:sortInt,\r\n                width: '62px',\r\n                visible: this.isEmptyColumn((item)=>item.abilityEffect?.increaseMaxHP),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'AC',\r\n                getValue: ({value, column}) => value?.increaseAttackChance,\r\n                sort:sortInt,\r\n                width: '62px',\r\n                visible: this.isEmptyColumn((item)=>item.abilityEffect?.increaseAttackChance),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'Dmg',\r\n                getValue: ({value, column}) => ((value?.increaseAttackDamage?.min||0)+(value?.increaseAttackDamage?.max||0))/2,\r\n                cellRenderer: RangeCell(\"abilityEffect\",\"increaseAttackDamage\"),\r\n                width: '78px',\r\n                visible: this.isEmptyColumn((item)=>item.abilityEffect?.increaseAttackDamage),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'Crit',\r\n                getValue: ({value, column}) => value?.increaseCriticalSkill,\r\n                sort:sortInt,\r\n                width: '70px',\r\n                visible: this.isEmptyColumn((item)=>item.abilityEffect?.increaseCriticalSkill),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'BC',\r\n                getValue: ({value, column}) => value?.increaseBlockChance,\r\n                sort:sortInt,\r\n                width: '60px',\r\n                visible: this.isEmptyColumn((item)=>item.abilityEffect?.increaseBlockChance),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'Resist',\r\n                getValue: ({value, column}) => value?.increaseDamageResistance,\r\n                sort:sortInt,\r\n                width: '82px',\r\n                visible: this.isEmptyColumn((item)=>item.abilityEffect?.increaseDamageResistance),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'AP',\r\n                getValue: ({value, column}) => value?.increaseMaxAP,\r\n                sort:sortInt,\r\n                width: '60px',\r\n                visible: this.isEmptyColumn((item)=>item.abilityEffect?.increaseMaxAP),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'Atk cost',\r\n                getValue: ({value, column}) => value?.increaseAttackCost,\r\n                sort:sortInt,\r\n                width: '100px',\r\n                visible: this.isEmptyColumn((item)=>item.abilityEffect?.increaseAttackCost),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'Move cost',\r\n                getValue: ({value, column}) => value?.increaseMoveCost,\r\n                sort:sortInt,\r\n                width: '115px',\r\n                visible: this.isEmptyColumn((item)=>item.abilityEffect?.increaseMoveCost),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'Use cost',\r\n                getValue: ({value, column}) => value?.increaseUseItemCost,\r\n                sort:sortInt,\r\n                width: '105px',\r\n                visible: this.isEmptyColumn((item)=>item.abilityEffect?.increaseUseItemCost),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'Equip cost',\r\n                getValue: ({value, column}) => value?.increaseReequipCost,\r\n                sort:sortInt,\r\n                width: '115px',\r\n                visible: this.isEmptyColumn((item)=>item.abilityEffect?.increaseReequipCost),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'roundEffect',\r\n                label: 'Round HP',\r\n                getValue: ({value, column}) => ((value?.increaseCurrentHP?.min||0)+(value?.increaseCurrentHP?.max||0))/2,\r\n                cellRenderer: RangeCell(\"roundEffect\",\"increaseCurrentHP\"),\r\n                sort:sortInt,\r\n                width: '115px',\r\n                visible: this.isEmptyColumn((item)=>item.roundEffect?.increaseCurrentHP),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'roundEffect',\r\n                label: 'Round AP',\r\n                getValue: ({value, column}) => ((value?.increaseCurrentAP?.min||0)+(value?.increaseCurrentAP?.max||0))/2,\r\n                cellRenderer: RangeCell(\"roundEffect\",\"increaseCurrentAP\"),\r\n                sort:sortInt,\r\n                width: '115px',\r\n                visible: this.isEmptyColumn((item)=>item.roundEffect?.increaseCurrentAP),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'abilityEffect',\r\n                label: 'abilityEffect',\r\n                getValue: ({value, column}) => JSON.stringify(value),\r\n                cellRenderer: OtherCell,\r\n                width: '400px',\r\n                visible: false,\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'roundEffect',\r\n                label: 'roundEffect',\r\n                getValue: ({value, column}) => JSON.stringify(value),\r\n                cellRenderer: OtherCell,\r\n                width: '400px',\r\n                visible: false,\r\n            },\r\n\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        GridTable.defaultProps.isPaginated = false;\r\n        GridTable.defaultProps.minColumnResizeWidth = 30;\r\n        GridTable.defaultProps.isVirtualScroll = false;\r\n        GridTable.defaultProps.showSearch = false;\r\n        GridTable.defaultProps.showColumnVisibilityManager = false;\r\n\r\n        this.rows = this.getRows();\r\n\r\n        return <GridTable \r\n                    columns={this.getColumns()} \r\n                    rows={this.rows} \r\n                    onLoad={hashLinkScroll} \r\n                    key={this.props.title}/>;\r\n\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport ConditionsTable from './ConditionsTable';\r\n\r\nexport default class ItemsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.data) return \"Loading...\";\r\n        return ( \r\n                 <div>\r\n                     Positive\r\n                     {\r\n                         <ConditionsTable data = { this.props.data.filter((e)=>e.isPositive)} />\r\n                     }\r\n                     Negative\r\n                     {\r\n                         <ConditionsTable data = { this.props.data.filter((e)=>!e.isPositive)}  />\r\n                     }\r\n                 </div> \r\n               );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        width: 1000,\r\n    },\r\n    img: {\r\n        width: 32,\r\n        height:32,\r\n        marginTop: -5,\r\n        marginRight: 5,\r\n    },\r\n    link: {\r\n        color: 'white',\r\n        textTransform: 'capitalize',\r\n        float:'left',\r\n        display: 'flex',\r\n        margin: 10,\r\n    }\r\n}\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getRowsData = this.getRowsData.bind(this);\r\n    }\r\n\r\n    getRowsData = function (data) {\r\n        if (!data) return \"\";\r\n        const maps = data?.flatMap((e)=>e.maps)?.filter(unique);\r\n\r\n        return maps?.map((row, index)=>{\r\n            return <Link key={index} to={row.rootLink + row.name + \"#\" + data[0].key} style={styles.link}>\r\n                        <img style={styles.img} src=\"/image/ui_icon_map.png\"  />{row.name}\r\n                   </Link>\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={styles.root}>{this.getRowsData(this.props.data)}</div>\r\n        );\r\n    }\r\n}\r\nfunction unique(item, pos, self) {\r\n    return self.indexOf(item) == pos;\r\n}","import React, { Component } from 'react';\r\nimport Icon from '../Icon';\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getHeader = this.getHeader.bind(this);\r\n        this.getRowsData = this.getRowsData.bind(this);\r\n        this.getKeys = this.getKeys.bind(this);\r\n    }\r\n    getKeys = function () {\r\n        return [\r\n            [\"\", (o)=> {return <Icon data={o.link} />;}],\r\n            [\"Name\", (o)=>{return RenderHref(o.link)}, { textAlign: 'left'} ],\r\n            [\"Quantity\",(o)=>{return Range(o.quantity)}],\r\n            [\"Chance\",(o)=>{return o.chance+\"%\"}],\r\n        ];\r\n    }\r\n\r\n    getHeader = function () {\r\n        var keys = this.getKeys();\r\n        return keys.map((key, index) => {\r\n            var style = (key.length>=2)?key[2]:{};\r\n            return  <th style={style} key = {key[0]} > {key[0]} </th>\r\n        })\r\n    }\r\n\r\n    getRowsData = function () {\r\n        var items = this.props.data;\r\n        if (!items) return \"\";\r\n        if (this.props.filter && this.props.filter.length>0) {\r\n            items = items.filter((item)=>this.props.filter.indexOf(item.category) > -1);\r\n        }\r\n        var keys = this.getKeys();\r\n        return items.map((row, index)=>{\r\n            return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table style={{width: 400}} >\r\n                <thead style={{display: 'none'}}><tr>{this.getHeader()}</tr></thead>\r\n                <tbody>{this.getRowsData()}</tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\nconst RenderRow = (props) => {\r\n    return props.keys.map((key, index) => {\r\n        var style = (key.length>=2)?key[2]:{};\r\n        return <td style={style} key ={key[0]}>{key[1](props.data)}</td>\r\n    })\r\n}\r\nconst RenderHref = (o) => {\r\n    const href = o.rootLink + o.id;\r\n    return  <a href={href}>{o.name}</a>\r\n}\r\nconst Range = (o) => {\r\n    if (o.max == o.min) return o.max;\r\n    return o.min + \"-\" + o.max;\r\n}","import React from 'react';\r\nimport debug from '../../utils/debug';\r\nimport MapsList from '../MapsList';\r\nimport LinksTable from './LinksTable';\r\n\r\nconst styles = {\r\n    text: {\r\n        marginLeft: 10,\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    table: {\r\n        paddingTop: 10,\r\n        marginLeft: -10,\r\n    },\r\n}\r\n\r\nexport default class ExpandingName extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n        }\r\n        this.toggleExpand = this.toggleExpand.bind(this);\r\n    }\r\n    toggleExpand() {\r\n        this.setState({ expanded: !this.state.expanded, });\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.data;\r\n\r\n        const value = this.props.value;\r\n        const links = data.droplistLink?.items;\r\n        const spawnGroupLinks = data.spawnGroupLinks;\r\n        if (!links && !spawnGroupLinks) {\r\n            return (\r\n              <React.Fragment>\r\n                    <div style={{ display:'flex'}} >\r\n                        <div style={{ width: 19}} />\r\n                        <span style={styles.text}>{value}</span>\r\n                    </div>\r\n              </React.Fragment> );\r\n        }\r\n        return (\r\n              <React.Fragment>\r\n                    <div style={{ display:'flex'}} onClick={this.toggleExpand}>\r\n                            <img src=\"../image/sort_desc.png\" />\r\n                            <span style={styles.text}>{value}</span>\r\n                    </div>\r\n                    <div style={styles.table}>\r\n                        {(this.state.expanded) && <LinksTable data={links}/>}\r\n                        {(this.state.expanded) && <MapsList data={spawnGroupLinks}/>}\r\n                    </div>\r\n\r\n              </React.Fragment> );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ExpandingName from './ExpandingName';\r\n\r\nconst styles = {\r\n    root: {\r\n        position: 'relative',\r\n        padding: '10px',\r\n        display: 'block',\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center'\r\n    },\r\n}\r\n\r\nconst IconCell = ({tableManager, value, onChange, isEdit, data, column, rowIndex, searchText, isFirstEditableCell}) => {\r\n    return (\r\n        <div style={styles.root}>\r\n            <ExpandingName data={data} value={value}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconCell;","import React, { Component } from 'react';\r\nimport GridTable from '@nadavshaar/react-grid-table';\r\nimport '../../@nadavshaar/react-grid-table/dist/index.css';\r\nimport IconCell from \"../cells/IconCell\"\r\nimport { getDimentionById } from \"../Icon\"\r\nimport ConditionsCell from \"../cells/ConditionsCell\"\r\nimport OtherCell from \"../cells/OtherCell\"\r\nimport RangeCell from \"../cells/RangeCell\"\r\nimport NameCell from \"./NameCell\"\r\n\r\nconst sortStr = ({a, b, isAscending}) => {\r\n    let aa = a||\"\";\r\n    let bb = b||\"\";\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\nconst sortInt = ({a, b, isAscending}) => {\r\n    let aa = a||0;\r\n    let bb = b||0;\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\n\r\nconst hashLinkScroll = () => {\r\n  const { hash } = window.location;\r\n  if (hash !== '') {\r\n    setTimeout(() => {\r\n      const id = hash.replace('#', '');\r\n      const element = document.getElementById(id);\r\n      if (element) element.scrollIntoView();\r\n    }, 100);\r\n  }\r\n}\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getColumns = this.getColumns.bind(this);\r\n        this.getRows = this.getRows.bind(this);\r\n    }\r\n\r\n    getRows  = function () {\r\n        var data = this.props.data;\r\n        if (this.props.filter) {\r\n            data = data.filter((e)=>this.props.filter(e));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    maxIconWidth = function () {\r\n        const width = this.rows.map((e) => getDimentionById(e.iconID).x).reduce((a, b) => Math.max(a, b), 32)+10;\r\n        return width+\"px\";\r\n    }\r\n    getColumns  = function () {\r\n        var i = 1;\r\n        return [\r\n            {\r\n                id: i++,\r\n                field: 'unique',\r\n                label: '',\r\n                pinned: true,\r\n                cellRenderer: IconCell,\r\n                sort:sortInt,\r\n                width: this.maxIconWidth(),\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'name',\r\n                label: 'Name',\r\n                pinned: true,\r\n                cellRenderer: NameCell,\r\n                width: '300px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'maxHP',\r\n                label: 'HP',\r\n                sort:sortInt,\r\n                width: '75px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'attackChance',\r\n                label: 'AC',\r\n                sort:sortInt,\r\n                width: '75px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'attackDamage',\r\n                label: 'Dmg',\r\n                getValue: ({value, column}) => ((value?.min||0) + (value?.max||0))/2,\r\n                sort:sortInt,\r\n                cellRenderer: RangeCell(\"attackDamage\"),\r\n                width: '135px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'criticalSkill',\r\n                label: 'Crit',\r\n                sort:sortInt,\r\n                width: '85px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'criticalMultiplier',\r\n                label: 'Crit*',\r\n                sort:sortInt,\r\n                width: '85px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'blockChance',\r\n                label: 'BC',\r\n                sort:sortInt,\r\n                width: '75px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'damageResistance',\r\n                label: 'Dmg res',\r\n                sort:sortInt,\r\n                width: '115px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'maxAP',\r\n                label: 'AP',\r\n                sort:sortInt,\r\n                width: '75px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'attackCost',\r\n                label: 'Attack Cost',\r\n                sort:sortInt,\r\n                width: '135px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'moveCost',\r\n                label: 'Move Cost',\r\n                sort:sortInt,\r\n                width: '130px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'moveCost',\r\n                label: 'XP',\r\n                sort:sortInt,\r\n                width: '75px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'equipEffect',\r\n                label: 'Conditions',\r\n                getValue: ({value, column}) => JSON.stringify(value?.addedConditions),\r\n                sort:sortStr,\r\n                width: '130px',\r\n                cellRenderer: ConditionsCell,\r\n            },\r\n        ]\r\n    }\r\n\r\n    render() {\r\n\r\n        GridTable.defaultProps.isPaginated = false;\r\n        GridTable.defaultProps.minColumnResizeWidth = 30;\r\n        GridTable.defaultProps.isVirtualScroll = false;\r\n        GridTable.defaultProps.showSearch = false;\r\n        GridTable.defaultProps.showColumnVisibilityManager = false;\r\n        this.rows = this.getRows();\r\n\r\n        return <GridTable \r\n                    columns={this.getColumns()} \r\n                    rows={this.rows} \r\n                    onLoad={hashLinkScroll} \r\n                    key={this.props.title}/>;\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PropsRoute from '../PropsRoute';\r\nimport LiLink from '../LiLink'\r\nimport MonstersTable from './MonstersTable';\r\n\r\nexport default class MonstersPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.data) return \"Loading...\";\r\n        return (\r\n            <div>\r\n                <ul className=\"hr\">\r\n                        {LiLink(\"/monsters/\", \"animal\", this.props.location.pathname)}\r\n                        {LiLink(\"/monsters/\", \"insect\", this.props.location.pathname)}\r\n                        {LiLink(\"/monsters/\", \"reptile\", this.props.location.pathname)}\r\n                        {LiLink(\"/monsters/\", \"undead\", this.props.location.pathname)}\r\n                        {LiLink(\"/monsters/\", \"giant\", this.props.location.pathname)}\r\n                        {LiLink(\"/monsters/\", \"ghost\", this.props.location.pathname)}\r\n                        {LiLink(\"/monsters/\", \"construct\", this.props.location.pathname)}\r\n                        {LiLink(\"/monsters/\", \"humanoid\", this.props.location.pathname)}\r\n                        {LiLink(\"/monsters/\", \"demon\", this.props.location.pathname)}\r\n                        {LiLink(\"/monsters/\", \"other\", this.props.location.pathname)}\r\n                </ul>\r\n                <Switch>\r\n                    {ItemRoute(\"animal\", this.props.data)}\r\n                    {ItemRoute(\"humanoid\", this.props.data)}\r\n                    {ItemRoute(\"insect\", this.props.data)}\r\n                    {ItemRoute(\"undead\", this.props.data)}\r\n                    {ItemRoute(\"giant\", this.props.data)}\r\n                    {ItemRoute(\"reptile\", this.props.data)}\r\n                    {ItemRoute(\"construct\", this.props.data)}\r\n                    {ItemRoute(\"demon\", this.props.data)}\r\n                    {ItemRoute(\"ghost\", this.props.data)}\r\n                    <PropsRoute  path=\"/monsters/other\" component={MonstersTable}\r\n                        data = {this.props.data} title= \"Other\"\r\n                        filter = {(e)=>(!e.monsterClass)}\r\n                    />\r\n                </Switch>\r\n                 </div> \r\n               );\r\n    }\r\n}\r\nconst ItemRoute = (c, data) => {\r\n    const path = \"/monsters/\"+c;\r\n    return <PropsRoute  path={path} component={MonstersTable}\r\n                        data = {data} title= {c}\r\n                        filter = {(e)=>(!!(e.attackChance||e.maxHP)&&e.monsterClass==c)}\r\n                    />\r\n}","import React, { Component } from 'react';\r\nimport Icon from '../Icon';\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getHeader = this.getHeader.bind(this);\r\n        this.getRowsData = this.getRowsData.bind(this);\r\n        this.getKeys = this.getKeys.bind(this);\r\n    }\r\n    getKeys = function () {\r\n        return [\r\n            [\"\", (o)=> {return <Icon data={o.link} />;}],\r\n            [\"Name\", (o)=>{return RenderHref(o.link)}, { textAlign: 'left'} ],\r\n            [\"Quantity\",(o)=>{return Range(o.quantity)}],\r\n            [\"Price\",(o)=>{return calculateCostWithMod(o.link, 0.15)+\" gold\"}, { textAlign: 'right'}],\r\n            [\"Buy\",(o)=>{return calculateCostWithMod(o.link, -0.15)+\" gold\"}, { textAlign: 'right'}],\r\n        ];\r\n    }\r\n\r\n    getHeader = function () {\r\n        var keys = this.getKeys();\r\n        return keys.map((key, index) => {\r\n            var style = (key.length>=2)?key[2]:{};\r\n            return  <th style={style} key = {key[0]} > {key[0]} </th>\r\n        })\r\n    }\r\n\r\n    getRowsData = function () {\r\n        var items = this.props.data;\r\n        if (!items) return \"\";\r\n        if (this.props.filter && this.props.filter.length>0) {\r\n            items = items.filter((item)=>this.props.filter.indexOf(item.category) > -1);\r\n        }\r\n        var keys = this.getKeys();\r\n        return items.map((row, index)=>{\r\n            return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table style={{width: 500}} >\r\n                <thead style={{display: 'none'}}><tr>{this.getHeader()}</tr></thead>\r\n                <tbody>{this.getRowsData()}</tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\nconst RenderRow = (props) => {\r\n    return props.keys.map((key, index) => {\r\n        var style = (key.length>=2)?key[2]:{};\r\n        return <td style={style} key ={key[0]}>{key[1](props.data)}</td>\r\n    })\r\n}\r\nconst RenderHref = (o) => {\r\n    const href = o.rootLink + o.id;\r\n    return  <a href={href}>{o.name}</a>\r\n}\r\nconst Range = (o) => {\r\n    if (o.max == o.min) return o.max;\r\n    return o.min + \"-\" + o.max;\r\n}\r\nconst calculateCostWithMod = (o, mod) => {\r\n    const cost = o.baseMarketCost;\r\n    return cost + Math.trunc(cost * mod);\r\n}","import React from 'react';\r\nimport debug from '../../utils/debug';\r\nimport MapsList from '../MapsList';\r\nimport LinksTable from './LinksTable';\r\n\r\nconst styles = {\r\n    text: {\r\n        marginLeft: 10,\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    table: {\r\n        paddingTop: 10,\r\n        marginLeft: -10,\r\n    },\r\n}\r\n\r\nexport default class ExpandingName extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n        }\r\n        this.toggleExpand = this.toggleExpand.bind(this);\r\n    }\r\n    toggleExpand() {\r\n        this.setState({ expanded: !this.state.expanded, });\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.data;\r\n\r\n        const value = this.props.value;\r\n        const links = data.droplistLink?.items;\r\n        const spawnGroupLinks = data.spawnGroupLinks;\r\n        if (!links && !spawnGroupLinks) {\r\n            return (\r\n              <React.Fragment>\r\n                    <div style={{ display:'flex'}} >\r\n                        <div style={{ width: 19}} />\r\n                        <span style={styles.text}>{value}</span>\r\n                    </div>\r\n              </React.Fragment> );\r\n        }\r\n        return (\r\n              <React.Fragment>\r\n                    <div style={{ display:'flex'}} onClick={this.toggleExpand}>\r\n                            <img src=\"../image/sort_desc.png\" />\r\n                            <span style={styles.text}>{value}</span>\r\n                    </div>\r\n                    <div style={styles.table}>\r\n                        {(this.state.expanded) && <LinksTable data={links}/>}\r\n                        {(this.state.expanded) && <MapsList data={spawnGroupLinks}/>}\r\n                    </div>\r\n\r\n              </React.Fragment> );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ExpandingName from './ExpandingName';\r\n\r\nconst styles = {\r\n    root: {\r\n        position: 'relative',\r\n        padding: '10px',\r\n        display: 'block',\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center'\r\n    },\r\n}\r\n\r\nconst IconCell = ({tableManager, value, onChange, isEdit, data, column, rowIndex, searchText, isFirstEditableCell}) => {\r\n    return (\r\n        <div style={styles.root}>\r\n            <ExpandingName data={data} value={value}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconCell;","import React, { Component } from 'react';\r\nimport GridTable from '@nadavshaar/react-grid-table';\r\nimport '../../@nadavshaar/react-grid-table/dist/index.css';\r\nimport IconCell from \"../cells/IconCell\"\r\nimport NameCell from \"./NameCell\"\r\n\r\nconst sortStr = ({a, b, isAscending}) => {\r\n    let aa = a||\"\";\r\n    let bb = b||\"\";\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\nconst sortInt = ({a, b, isAscending}) => {\r\n    let aa = a||0;\r\n    let bb = b||0;\r\n    if(aa > bb) return isAscending ? 1 : -1; \r\n    if(aa < bb) return isAscending ? -1 : 1; \r\n    return 0; \r\n}\r\n\r\nconst hashLinkScroll = () => {\r\n  const { hash } = window.location;\r\n  if (hash !== '') {\r\n    setTimeout(() => {\r\n      const id = hash.replace('#', '');\r\n      const element = document.getElementById(id);\r\n      if (element) element.scrollIntoView();\r\n    }, 100);\r\n  }\r\n}\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getColumns = this.getColumns.bind(this);\r\n        this.getRows = this.getRows.bind(this);\r\n    }\r\n\r\n    getRows  = function () {\r\n        var data = this.props.data;\r\n        if (this.props.filter) {\r\n            data = data.filter((e)=>this.props.filter(e));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    getColumns  = function () {\r\n        var i = 1;\r\n        return [\r\n            {\r\n                id: i++,\r\n                field: 'unique',\r\n                label: '',\r\n                pinned: true,\r\n                cellRenderer: IconCell,\r\n                sort:sortInt,\r\n                width: '50px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'name',\r\n                label: 'Name',\r\n                pinned: true,\r\n                cellRenderer: NameCell,\r\n                width: '300px',\r\n            },\r\n            {\r\n                id: i++,\r\n                field: 'maxHP',\r\n                label: 'Location',\r\n                sort:sortInt,\r\n                width: '300px',\r\n            },\r\n         \r\n        ]\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        GridTable.defaultProps.isPaginated = false;\r\n        GridTable.defaultProps.minColumnResizeWidth = 30;\r\n        GridTable.defaultProps.isVirtualScroll = false;\r\n        GridTable.defaultProps.showSearch = false;\r\n        GridTable.defaultProps.showColumnVisibilityManager = false;\r\n\r\n        return <GridTable \r\n                    columns={this.getColumns()}\r\n                    rows={this.getRows()}\r\n                    onLoad={hashLinkScroll}/>;\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PropsRoute from '../PropsRoute';\r\nimport LiLink from '../LiLink';\r\nimport NpcTable from './NpcTable';\r\n\r\nexport default class MonstersPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.data) return \"Loading...\";\r\n        return (\r\n            <div>\r\n                <ul className=\"hr\">\r\n                        {LiLink(\"/npc/\", \"merchant\", this.props.location.pathname)}\r\n                        {LiLink(\"/npc/\", \"A-G\", this.props.location.pathname)}\r\n                        {LiLink(\"/npc/\", \"H-R\", this.props.location.pathname)}\r\n                        {LiLink(\"/npc/\", \"S-Z\", this.props.location.pathname)}\r\n                </ul>\r\n                <Switch>\r\n                    <PropsRoute  path=\"/npc/a-g\" component={NpcTable}\r\n                        data = {this.props.data} title= \"NPC\"\r\n                        filter = {(e)=>(e.rootLink=='/npc/a-g#')}\r\n                    />\r\n                    <PropsRoute  path=\"/npc/h-r\" component={NpcTable}\r\n                        data = {this.props.data} title= \"NPC\"\r\n                        filter = {(e)=>(e.rootLink=='/npc/h-r#')}\r\n                    />\r\n                    <PropsRoute  path=\"/npc/s-z\" component={NpcTable}\r\n                        data = {this.props.data} title= \"NPC\"\r\n                        filter = {(e)=>(e.rootLink=='/npc/s-z#')}\r\n                    />\r\n                    <PropsRoute  path=\"/npc/merchant\" component={NpcTable}\r\n                        data = {this.props.data} title= \"Merchant\"\r\n                        filter = {(e)=>(e.rootLink=='/npc/merchant#')}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport debug from '../../utils/debug';\r\nimport { getDimention } from '../Icon';\r\n\r\nexport default class Icon extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {data, zoom}= this.props;\r\n\r\n        const ts = data.tileset;\r\n        const file = ts.name;\r\n        const index = data.localid;\r\n        const src = getSrc(file);\r\n        \r\n        const dx = ts.tilewidth * zoom / 32;\r\n        const dy = ts.tileheight * zoom / 32;\r\n\r\n        var p = getPosition(index, ts, dx, dy, zoom);\r\n        var style = { margin: `${p.y}px 0 0 ${p.x}px`, width: `${p.w}px`, display: 'block'};\r\n\r\n        return <div style={{ width:`${dx}px`, height:`${dy}px`, overflow: 'hidden',\r\n                            position: 'absolute', left: this.props.x, top: this.props.y\r\n                            }} >\r\n                    <img src={src} style={style} />\r\n               </div>\r\n    }\r\n}\r\n    const getSrc = (file) => {\r\n        if (!file) return;\r\n        return \"/drawable/\"+file+\".png\";\r\n    }\r\n    const getPosition = (i, ts, dx, dy, zoom) => {\r\n        var w = ts.width * zoom / 32;\r\n        var width = ts.width / ts.tilewidth;\r\n        var x = - i % width * dx;\r\n        var y = (- i * dy - x) / width;\r\n        return {x, y, w};\r\n    }\r\n\r\n","import React, { Component } from 'react';\r\nimport MapIcon from './MapIcon'\r\nimport Icon from '../Icon'\r\nimport debug from '../../utils/debug'\r\n\r\nexport default class MonstersPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    getRowsData = function (data, zoom) {\r\n        var field = data.field;\r\n        if (!field) return \"\";\r\n \r\n        return field.map((row, index)=>{\r\n            return <RenderRow key={index} data={row} layers={data.layerList} y={index} zoom={zoom}/>\r\n        })\r\n    }\r\n    getObjectgroupsData = function (data, zoom) {\r\n        var spawn = data?.spawn;\r\n        if (!spawn) return \"\";\r\n \r\n        return spawn.map((row, index)=>{\r\n            if (!row.link) return \"\";\r\n            const style = { \r\n                marginLeft: row.x + (row.width - 32)/2, \r\n                marginTop: row.y + (row.height - 32)/2 ,\r\n                position: 'absolute',\r\n            };\r\n            if (this.props.location?.hash == '#'+row.spawngroup) {\r\n                style.border = \"solid yellow 1px\" \r\n            }\r\n            if (this.props.location?.hash == '#'+row.name) {\r\n                style.border = \"solid yellow 1px\" \r\n            }\r\n            return (\r\n                <div key ={index} style={style} >\r\n                    <Icon data={row.link.monsters[0]} zoom={zoom} noBackground=\"true\" />\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n       var data = this.props.data;\r\n       var renderObjectgroupsData = this.props.renderObjectgroupsData;\r\n       var zoom = this.props.zoom || 32;\r\n\r\n       if (!data) {\r\n           return \"Wrong URL!\"; \r\n       }\r\n\r\n       //debug(this.props);\r\n\r\n       var width = zoom * data.width;\r\n       var height = zoom * data.height;\r\n\r\n       return (\r\n            <div style={{backgroundColor:'white', width:width, height:height, position:'relative' }}>\r\n                {this.getRowsData(data, zoom)}\r\n                {renderObjectgroupsData && <div style={{position: 'absolute'}}>{this.getObjectgroupsData(data.objectgroups, zoom)}</div>}\r\n            </div>\r\n       );\r\n    }\r\n}\r\nconst RenderRow = (props) => {\r\n    const {data, layers, y, zoom} = props;\r\n    return data.map((tile, index) => <RenderCell data={tile} layers={layers} x={index*zoom} y={y*zoom} zoom={zoom} key ={index}/>) \r\n}\r\nconst RenderCell = (props) => {\r\n    const {data, layers, x, y, zoom} = props;\r\n    return layers\r\n            .filter((l)=>l.visible)\r\n            .filter((l)=>!l.name.startsWith(\"walkable\"))\r\n            .map((l) => data[l.name])\r\n            .filter((ld)=>ld)\r\n            .map((ld, index) => {\r\n        return <MapIcon data={ld} x={x} y={y} zoom={zoom} key ={index}/>\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport debug from '../../utils/debug'\r\nimport Icon from './MapIcon'\r\nimport LocalMap from './LocalMap'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class MonstersPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    getRowsData = function (data, zoom) {\r\n        var maps = data.maps;\r\n        if (!maps) return \"\";\r\n \r\n        return maps.map((row, index)=>{\r\n            var style = {\r\n                position: 'absolute',\r\n                backgroundColor: 'green',\r\n                left: (row.x - data.x) * zoom,\r\n                top: (row.y - data.y) * zoom,\r\n                width: row.link.width * zoom,\r\n                height: row.link.height * zoom,\r\n            };\r\n            const href = \"/map/\" + row.id;\r\n            return (\r\n                <Link style={style} title={row.id} key={index} to={href}>\r\n                    {(index<9) && <LocalMap data = {row.link} zoom = {zoom} />}\r\n                </Link>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n       const { globalMap, location } = this.props;\r\n       debug(this.props);\r\n       var segment = location.pathname.substring(\"/map/g/\".length);\r\n       if (!segment){\r\n           segment = 'world1';\r\n       }\r\n\r\n       var data = globalMap.segmentsMap[segment];\r\n       if (!data){ return \"Wrong URL!\"; }\r\n       debug(data);\r\n\r\n       const zoom = (data.maps.length > 100) ? 2 :\r\n                    (data.maps.length >  18) ? 6 :\r\n                    (data.maps.length >   3) ? 8 :\r\n                    10;\r\n\r\n       return (\r\n            <div style={{ position:'relative' }}>\r\n                {this.getRowsData(data, zoom)}\r\n            </div>\r\n       );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport LiLink from '../LiLink'\r\nimport PropsRoute from '../PropsRoute';\r\nimport LocalMap from './LocalMap';\r\nimport GlobalMap from './GlobalMap';\r\n\r\nexport default class Page extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    getSegmentLinks = function (data, pathname) {\r\n        var segments = data.segments;\r\n        if (!segments) return \"\";\r\n \r\n        return segments.map((row, index)=>{\r\n            return LiLink(\"/map/g/\", row.id, pathname, row.id+\" (\"+row.maps.length+\")\");\r\n        })\r\n    }\r\n    render() {\r\n        const { data, globalMap, location } = this.props;\r\n        var map = location.pathname.substring(\"/map/\".length);\r\n        if (!data) return \"Loading...\";\r\n\r\n        return (\r\n            <div>\r\n                <ul className=\"hr\">\r\n                    {this.getSegmentLinks(globalMap, location.pathname)}\r\n                </ul>\r\n                <Switch>\r\n                    {!map && <GlobalMap data = { data } globalMap = { globalMap } />}\r\n                    <PropsRoute path='/map/g' component={GlobalMap} data = { data } globalMap = { globalMap } />\r\n                    <LocalMap data = { data[map] } renderObjectgroupsData=\"true\"/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport debug, { doIfDebug } from '../utils/debug'\r\nimport PropsRoute from './PropsRoute';\r\nimport Menu from './Menu.jsx';\r\nimport Home from './Home';\r\nimport ItemCategoriesTable from './ItemCategoriesTable.jsx';\r\nimport ItemsPage from './items/ItemsPage.jsx';\r\nimport ConditionsPage from './conditions/ConditionsPage';\r\nimport MonstersPage from './monsters/MonstersPage';\r\nimport NpcPage from './npc/NpcPage';\r\nimport MapPage from './maps/MapPage';\r\nimport calculateCost from './CostCalculator';\r\n\r\nexport default class Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={};\r\n        this.temp={};\r\n    }\r\n\r\n    getJsonResources=(resources)=>{\r\n      var downcounter = {progress:0};\r\n      this.getJsonResource(resources.loadresource_itemcategories, \"itemcategories\", downcounter);\r\n      this.getJsonResource(resources.loadresource_items, \"items\", downcounter);\r\n      this.getJsonResource(resources.loadresource_actorconditions, \"actorconditions\", downcounter);\r\n      this.getJsonResource(resources.loadresource_monsters, \"monsters\", downcounter);\r\n      this.getJsonResource(resources.loadresource_droplists, \"droplists\", downcounter);\r\n\r\n    }\r\n\r\n    getJsonResource=(resource, name, downcounter)=>{\r\n      const that = this;\r\n      downcounter.progress+=resource.length;\r\n      resource.forEach((path)=>{\r\n          that.getJsonData(path.replace('@','/'), name, that, downcounter);\r\n      });\r\n    }\r\n\r\n    linkConditions = (effect, item, type) => {\r\n        effect?.addedConditions?.forEach((e)=>this.linkCondition(e, item, type, \"On source\"));\r\n        effect?.conditionsTarget?.forEach((e)=>this.linkCondition(e, item, type, \"On target\"));\r\n        effect?.conditionsSource?.forEach((e)=>this.linkCondition(e, item, type, \"On source\"));\r\n    }\r\n    getStub = (item, condition, type, aim) => {\r\n\r\n        let {id, name, category, iconID, displaytype, rootLink} = item;\r\n        let {chance, duration, magnitude} = condition;\r\n        return {id, name, category, iconID, displaytype, chance, duration, magnitude, type, aim, rootLink};\r\n    }\r\n    linkCondition = (condition, item, type, aim) => {\r\n        condition.link = this.temp.maps.conditions[condition.condition];\r\n        condition.link.links = condition.link.links||[];\r\n        const stub = this.getStub(item, condition, type, aim);\r\n        condition.link.links.push(stub);\r\n    }\r\n    getItemRootLink = (category) => {\r\n       if (category.actionType == \"use\") return \"/items/use#\";\r\n       if (category.actionType == \"equip\") return \"/items/\" + category.inventorySlot + \"#\";\r\n       return \"/items/other#\";\r\n    }\r\n    getMonsterRootLink = (monster) => {\r\n       if (monster.attackChance || monster.maxHP) return  \"/monsters/\" + monster.monsterClass + \"#\";\r\n       if (monster.droplistID) return \"/npc/merchant#\";\r\n       if (monster.name.charAt(0).toUpperCase()<='G') return \"/npc/a-g#\";\r\n       if (monster.name.charAt(0).toUpperCase()<='R') return \"/npc/h-r#\";\r\n       return \"/npc/s-z#\";\r\n    }\r\n    getItemIconBg = (o) => {\r\n        switch(o.displaytype) {\r\n            case 'legendary': return  -4;\r\n            case 'extraordinary': return  -2;\r\n            case 'rare': return  -3;\r\n            case 'quest': return  -1;\r\n            default: return 1;\r\n        }\r\n    }\r\n\r\n    linkTemp(){\r\n        this.temp.maps = {};\r\n\r\n        this.temp.maps.conditions = this.temp.actorconditions.reduce((obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n        this.temp.maps.categories = this.temp.itemcategories.reduce((obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n        this.temp.maps.droplists = this.temp.droplists.reduce((obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n        this.temp.maps.items = this.temp.items.reduce((obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n        this.temp.maps.monsters = this.temp.monsters.reduce((obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n        this.temp.maps.spawngroups = {};\r\n\r\n        Object.values(this.props.maps).forEach((map)=>{\r\n            map.rootLink = \"/map/\";\r\n            map.objectgroups?.spawn?.forEach((spawn)=> {\r\n                const key = (spawn.spawngroup || spawn.name).toLowerCase();\r\n                spawn.link = this.temp.maps.spawngroups[key]||{ maps:[], monsters: []};\r\n                spawn.link.key = key;\r\n                spawn.link.maps.push(map);\r\n                this.temp.maps.spawngroups[key] = spawn.link;\r\n            })\r\n        })\r\n\r\n        this.temp.items.forEach((item, index) => {\r\n            if (this.temp.maps.items[item.id] != item) {\r\n                console.warn(\"More than one item with id '\" + item.id + \"'\");\r\n                console.warn(item);\r\n                this.temp.items.splice(index, 1, false);\r\n            } else {\r\n                item.displaytype = item.displaytype||'ordinary';\r\n                item.iconBg = this.getItemIconBg(item);\r\n                item.categoryLink = this.temp.maps.categories[item.category];\r\n                item.rootLink=this.getItemRootLink(item.categoryLink);\r\n                item.baseMarketCost=calculateCost(item, item.categoryLink.inventorySlot==\"weapon\");\r\n\r\n                this.linkConditions(item.equipEffect, item, \"equipEffect\");\r\n                this.linkConditions(item.hitEffect, item, \"hitEffect\");\r\n                this.linkConditions(item.hitReceivedEffect, item, \"hitReceivedEffect\");\r\n                this.linkConditions(item.killEffect, item, \"killEffect\");\r\n                this.linkConditions(item.useEffect, item, \"useEffect\");\r\n            }\r\n        });\r\n        this.temp.items = this.temp.items.filter((e)=>e);\r\n\r\n        this.temp.monsters.forEach((monster, index) => {\r\n            if (this.temp.maps.monsters[monster.id] != monster) {\r\n                doIfDebug(() => {\r\n                    console.warn(\"More than one monster with id '\" + monster.id + \"'\");\r\n                    console.warn(monster);\r\n                });\r\n                this.temp.monsters.splice(index, 1, false);\r\n            } else {\r\n                monster.iconBg = monster.unique? -0 : 1;\r\n                monster.droplistLink = this.temp.maps.droplists[monster.droplistID];\r\n                if (monster.droplistLink) {\r\n                    monster.droplistLink.links = monster.droplistLink.links||[];\r\n                    monster.droplistLink.links.push(monster);\r\n                }\r\n                monster.rootLink = this.getMonsterRootLink(monster);\r\n                this.linkConditions(monster.hitEffect, monster, \"hitEffect\");\r\n                this.linkConditions(monster.hitReceivedEffect, monster, \"hitReceivedEffect\");\r\n                this.linkConditions(monster.killEffect, monster, \"killEffect\");\r\n\r\n                monster.spawnGroupLinks = [];\r\n\r\n                var spawngroupLink = this.temp.maps.spawngroups[monster.id.toLowerCase()] \r\n                if (spawngroupLink) {\r\n                    spawngroupLink.monsters.push(monster);\r\n                    monster.spawnGroupLinks.push(spawngroupLink);\r\n                }\r\n                if (monster.spawnGroup && (monster.spawnGroup?.toLowerCase() != monster.id.toLowerCase())){\r\n                    spawngroupLink = this.temp.maps.spawngroups[monster.spawnGroup?.toLowerCase()] \r\n                    if (spawngroupLink) {\r\n                        spawngroupLink.monsters.push(monster);\r\n                        monster.spawnGroupLinks.push(spawngroupLink);\r\n                    }\r\n                }\r\n                doIfDebug(() => {\r\n                    if (monster.spawnGroupLinks.length == 0) {\r\n                         console.warn(\"Monster have no spawn\");\r\n                         console.warn(monster);\r\n                    }\r\n                })\r\n            }\r\n        });\r\n        this.temp.monsters = this.temp.monsters.filter((e)=>e);\r\n\r\n        this.temp.droplists.forEach((droplist) => {\r\n                droplist.items.forEach((item) => {\r\n                    item.droplist=droplist;\r\n                    item.link = this.temp.maps.items[item.itemID];\r\n                    item.link.droplists=item.link.droplists||[];\r\n                    item.link.droplists.push(item);\r\n                })\r\n            }\r\n        );\r\n        this.temp.actorconditions.forEach((condition)=>{\r\n            condition.iconBg = 1;\r\n            condition.rootLink=\"/conditions#\";\r\n        })\r\n        this.props.globalMap.segments.forEach((segment)=>{\r\n            segment.rootLink = \"/map/g/\";\r\n            segment.maps.forEach((map)=>{\r\n                map.link = this.props.maps[map.id];\r\n                if (map.link.segmentLink && (map.link.segmentLink.id != segment.id)) {\r\n                    doIfDebug(() => {\r\n                        console.warn(`Map '${map.id}' lined with 2 segments: ${map.link.segmentLink.id}, ${segment.id}`);\r\n                    });\r\n                } else {\r\n                    map.link.globalMapLink = map;\r\n                    map.link.segmentLink = segment;\r\n                }\r\n            })\r\n        })\r\n\r\n        this.temp.monsters.sort((a,b) => (a.name.localeCompare(b.name)));\r\n    }\r\n    \r\n    getJsonData=(fileName, name, that, downcounter)=>{\r\n        fetch(fileName+\".json\"\r\n        ,{\r\n            headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n            }\r\n        })\r\n        .then(function(response){\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n          that.temp[name] = that.temp[name]||[];\r\n          that.temp[name] = that.temp[name].concat(json);\r\n          downcounter.progress--;\r\n          if (downcounter.progress == 0){\r\n              that.linkTemp()\r\n              that.setState(that.temp);\r\n          }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n       debug(this.props);\r\n       this.getJsonResources(this.props.resources);\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.items) return <Home />;\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Menu />\r\n                </Switch>\r\n                <Switch>\r\n                    \r\n                    <Route exact path='/' component={Home}/>\r\n                    <PropsRoute path='/items' component={ItemsPage} data = { this.state.items }/>\r\n                    <PropsRoute path='/conditions' component={ConditionsPage} data = { this.state.actorconditions }/>\r\n                    <PropsRoute path='/monsters' component={MonstersPage} data = { this.state.monsters }/>\r\n                    <PropsRoute path='/categories' component={ItemCategoriesTable} data = { this.state.itemcategories }/> \r\n                    <PropsRoute path='/npc' component={NpcPage} data = { this.state.monsters }/> \r\n                    <PropsRoute path='/map' component={MapPage} data = { this.props.maps } globalMap = { this.props.globalMap }/> \r\n                </Switch>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n","import pako from 'pako'\r\nimport { doIfDebug } from './debug'\r\n\r\nexport default function parseXmlMap(r, name) {\r\n    var map = {\r\n        name,\r\n        properties: [],\r\n        tilesets: [],\r\n        layers: {},\r\n        layerList: [],\r\n        objectgroups: {\r\n                spawn: [],\r\n                keys: [],\r\n                mapchange: [],\r\n                other: [],\r\n        },\r\n    }\r\n    if (r.name == \"DOCTYPE\") {\r\n        r = r.children[0];\r\n    }\r\n    if (r.name == \"map\") {\r\n        r.children.forEach((e) => {\r\n            if (e.name == \"objectgroup\") {\r\n                parseObjectgroups(e, map);\r\n            } else if (e.name == \"layer\") {\r\n                parseLayer(e, map, name);\r\n            } else if (e.name == \"tileset\") {\r\n                parseTileset(e, map, name);\r\n            } else if (e.name == \"properties\") {\r\n                map[e.name].push(e); // TODO\r\n            } else {\r\n                console.warn(\"Custom map section at '\" + name + \"':\");\r\n                console.warn(e);\r\n                map[e.name].push(e);\r\n            }\r\n        });\r\n    }\r\n    mapLayers(map);\r\n    return map;\r\n}\r\nfunction parseObjectgroups(r, map) {\r\n\r\n    r.children?.forEach((e) => {\r\n\r\n        switch(e.attributes.type) {\r\n            case \"spawn\":\r\n              map.objectgroups.spawn.push(mapSpawn(e, map));\r\n              break;\r\n            case \"keys\":\r\n              map.objectgroups.keys.push(e);\r\n              break;\r\n            case \"mapchange\":\r\n              map.objectgroups.mapchange.push(e);\r\n              break;\r\n            default:\r\n              map.objectgroups.other.push(e);\r\n        }\r\n    });\r\n}\r\n\r\nfunction mapSpawn(e, map) {\r\n    if (e.children?.length>1) {\r\n         console.warn(\"More then one children!\");\r\n         console.warn(e);\r\n    }\r\n\r\n\r\n    var spawn = {\r\n        ...e.attributes,\r\n        ...e.children[0]?.attributes,\r\n        width: e.attributes.width - 0,\r\n        height: e.attributes.height - 0,\r\n        x: e.attributes.x - 0,\r\n        y: e.attributes.y - 0,\r\n    }\r\n    e.children[0]?.children?.forEach((c) => {\r\n        doIfDebug(() => {\r\n            if (spawn[c.attributes.name]) {\r\n                console.warn(\"More then one children '\" + c.attributes.name + \"':\");\r\n                console.warn(spawn[c.attributes.name]);\r\n                console.warn(c);\r\n            }\r\n            if (c.name != \"property\") {\r\n                 console.warn(\"Unknown children!\");\r\n                 console.warn(c);\r\n            }\r\n            if (c.children?.length) {\r\n                 console.warn(\"More then zero children!\");\r\n                 console.warn(c);\r\n            }\r\n            if ([\"spawngroup\", \"quantity\", \"ignoreAreas\", \"active\", \"map\", \"place\"].indexOf(c.attributes.name) == -1 ) {\r\n                 console.warn(\"Unknown children!\");\r\n                 console.warn(c);\r\n            }\r\n            if (Object.keys(c.attributes).filter(x => ![\"name\", \"value\", \"type\"].includes(x)).length) {\r\n                 console.warn(\"Unknown children!\");\r\n                 console.warn(c);\r\n            }\r\n        });\r\n        spawn[c.attributes.name] = c.attributes.value;\r\n    });\r\n    return spawn;\r\n}\r\nfunction parseTileset(e, map, name) {\r\n    var tileset = {\r\n        //...e.attributes,\r\n        //...e.children[0].attributes,\r\n        height: e.children[0].attributes.height - 0,\r\n        width: e.children[0].attributes.width - 0,\r\n        name: e.attributes.name,\r\n        firstgid: e.attributes.firstgid - 0,\r\n        tileheight: e.attributes.tileheight - 0,\r\n        tilewidth: e.attributes.tilewidth - 0,\r\n    };\r\n    tileset.columns = tileset.width / tileset.tilewidth;\r\n    tileset.tilecount = tileset.height / tileset.tileheight * tileset.columns;\r\n\r\n\r\n    map.tilesets.push(tileset);\r\n}\r\nfunction parseLayerDebug(e, map, name) {\r\n    if (map.width && (map.width != e.attributes.width))\r\n        console.warn(name + \" has different layers(\" + map.width + \"!=\" + e.attributes.width + \")\");\r\n    if (map.height && (map.height != e.attributes.height))\r\n        console.warn(name + \" has different layers(\" + map.height + \"!=\" + e.attributes.height + \")\");\r\n    if (map.layers[e.attributes.name]) {\r\n        console.warn(name + \" has several layers: \" + e.attributes.name);\r\n    }\r\n    if (e.children.length != 1) {\r\n        console.warn(name + \" has multi layer: \" + e.attributes.name);\r\n    }\r\n}\r\nfunction parseLayer(e, map, name) {\r\n    doIfDebug(() => parseLayerDebug(e, map, name));\r\n    map.layerList.push({\r\n        name: e.attributes.name.toLowerCase(),\r\n        visible: (e.attributes.visible != \"0\"),\r\n    });\r\n    map.width = e.attributes.width - 0;\r\n    map.height = e.attributes.height - 0;\r\n    try {\r\n        var b64Data = e.children[0].value;\r\n        var strData = atob(b64Data);\r\n        var charData = strData.split('').map((x) => x.charCodeAt(0));\r\n        var binData = new Uint8Array(charData);\r\n        const tmp = pako.inflate(binData);\r\n        map.layers[e.attributes.name.toLowerCase()] = new Uint32Array(tmp.buffer);\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\nfunction mapLayers(map) {\r\n    map.field = [];\r\n    for (let y = 0; y < map.height; y++) {\r\n        map.field[y] = [];\r\n        for (let x = 0; x < map.width; x++) {\r\n            map.field[y][x] = {};\r\n            map.layerList.forEach((e) => setTileByLayerXY(map, e.name, x, y));\r\n        }\r\n    }\r\n}\r\nfunction setTileByLayerXY(map, layer, x, y) {\r\n    if (map.layers[layer]) {\r\n        map.field[y][x][layer] = getTileById(map, map.layers[layer][y * map.width + x]);\r\n    }\r\n}\r\nfunction getTileById(map, id) {\r\n    if (id == 0)\r\n        return;\r\n    var tileset = map.tilesets.find((e) => ((id >= e.firstgid) && (id < (e.firstgid + e.tilecount))));\r\n    if (!tileset) {\r\n        console.warn(\"No tileset for '\" + map.name + \"' \" + id);\r\n    }\r\n    return {\r\n        id,\r\n        tileset: tileset,\r\n        localid: (id - tileset?.firstgid),\r\n    };\r\n}\r\n","export default function parseGlobalMap(myXml) {\r\n    var result = {\r\n        segments: [],\r\n        segmentsMap: {},\r\n    };\r\n    myXml.children.forEach((segment) => {\r\n        var value = parseSegment(segment);\r\n        result.segments.push(value);\r\n        result.segmentsMap[segment.attributes.id] = value;\r\n    });\r\n    return result;\r\n}\r\n\r\nfunction parseSegment(segment) {\r\n    var result = {\r\n        id: segment.attributes.id,\r\n        x: segment.attributes.x * 1,\r\n        y: segment.attributes.y * 1,\r\n        areas: parseArea(segment.children),\r\n    }\r\n    result = {\r\n        ...result,\r\n        ...parseMaps(segment.children, result.areas),\r\n    }\r\n    return result;\r\n}\r\nfunction parseArea(children) {\r\n    var result = {};\r\n    children.filter((e) => e.name == \"namedarea\").forEach((e) => {\r\n        result[e.attributes.id] = e.attributes;\r\n    });\r\n    return result;\r\n}\r\nfunction parseMaps(children, areas) {\r\n    var result = {\r\n        maps: [],\r\n        mapsMap: {},\r\n    };\r\n    children.filter((e) => e.name == \"map\").forEach((e) => {\r\n        var map = {\r\n            ...e.attributes,\r\n            x: e.attributes.x * 1,\r\n            y: e.attributes.y * 1,\r\n        };\r\n        if (map.area) {\r\n            map.areaLink = areas[map.area];\r\n            map.areaLink.maps = map.areaLink.maps || [];\r\n            map.areaLink.maps.push(map);\r\n        }\r\n        result.maps.push(map);\r\n        result.mapsMap[e.attributes.id] = map;\r\n    });\r\n\r\n    return result;\r\n}\r\n","import React,{useState,useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/Main.jsx';\nimport XMLParser from 'react-xml-parser';\nimport parseXmlMap from './utils/MapParser.jsx';\nimport parseGlobalMap from './utils/GlobalMapParser.jsx';\n\nfunction App() {\n  const [data,setData]=useState([]);\n  var  temp = { maps: {} };\n  String.prototype.capitalize = function() {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n  }\n\n  const getXmlData=(fileName, thenDo)=>{\n     const headers = {\n        'Content-Type': 'text/xml',\n        'Accept': 'text/xml'\n     };\n    fetch(''+fileName, {headers})\n      .then(response => {\n        return response.text();\n      })\n      .then(str => {\n          return str.replace(/<!--.*-->/g,'');\n      })\n      .then(thenDo);\n      ;\n  }\n  const saveTempResources = (str) => {\n      var parser = new XMLParser();\n      var myXml = parser.parseFromString(str);\n\n      var xmlData=myXml.getElementsByTagName(\"array\");\n      const resources = xmlData.reduce(function(map, obj) {\n                map[obj.attributes.name] = obj.children.map(o=>o.value).filter(e=>e);\n                return map;\n        }, {});\n      temp = {\n          ...temp,\n          resources\n      };\n      getMaps(temp, setData);\n  }\n\n  const getXmlMap=(resource, name, downcounter)=>{\n      const thenDo = (xmlString) => {\n          var parser = new XMLParser();\n          var myXml = parser.parseFromString(xmlString);\n          \n          temp.maps[name] = parseXmlMap(myXml, name);\n          downcounter.progress--\n          if (downcounter.progress==0){\n            downcounter.tryDo();\n          }\n      }\n      getXmlData(resource, thenDo)\n  }\n\n  const getGlobalMap =(downcounter) => {\n      const thenDo = (xmlString) => {\n          var parser = new XMLParser();\n          var myXml = parser.parseFromString(xmlString);\n          \n          temp.globalMap = parseGlobalMap(myXml);\n          downcounter.progress--\n          if (downcounter.progress==0){\n            downcounter.tryDo();\n          }\n      }\n      getXmlData(\"/xml/worldmap.xml\", thenDo);\n  }\n\n  const getMaps=(temp, thenDo)=>{\n      var maps = temp.resources.loadresource_maps;\n      var downcounter = {progress:maps.length+1, tryDo:()=>thenDo(temp)};\n      getGlobalMap(downcounter);\n      maps.forEach((path)=>{\n          getXmlMap(path.replace('@','/')+\".tmx\", path.replace('@xml/',''), downcounter);\n      });\n  }\n  useEffect(()=>{\n      getXmlData('/values/loadresources.xml', saveTempResources);\n  },[])\n\n  return (\n    <div className=\"App\">\n        { data.resources && <Main resources = { data.resources } maps = { data.maps } globalMap = { data.globalMap }/> }\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}